{
  "{\"sourceRoot\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"filename\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\\\\init.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "filename": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\init.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\init.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\init.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
        "sourceFileName": "init.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nrequire(\"./db\");\n\nvar _app = _interopRequireDefault(require(\"./app\"));\n\nrequire(\"./models/Video\");\n\nrequire(\"./models/Comment\");\n\nrequire(\"./models/User\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_dotenv[\"default\"].config();\n\nvar PORT = process.env.PORT || 4000;\n\nvar handleListening = function handleListening() {\n  return console.log(\"Listening on: http://localhost:\".concat(PORT));\n};\n\n_app[\"default\"].listen(PORT, handleListening);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluaXQuanMiXSwibmFtZXMiOlsiZG90ZXZuIiwiY29uZmlnIiwiUE9SVCIsInByb2Nlc3MiLCJlbnYiLCJoYW5kbGVMaXN0ZW5pbmciLCJjb25zb2xlIiwibG9nIiwiYXBwIiwibGlzdGVuIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOzs7O0FBSEFBLG1CQUFPQyxNQUFQOztBQUtBLElBQU1DLElBQUksR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlGLElBQVosSUFBb0IsSUFBakM7O0FBRUEsSUFBTUcsZUFBZSxHQUFHLFNBQWxCQSxlQUFrQjtBQUFBLFNBQ3BCQyxPQUFPLENBQUNDLEdBQVIsMENBQThDTCxJQUE5QyxFQURvQjtBQUFBLENBQXhCOztBQUdBTSxnQkFBSUMsTUFBSixDQUFXUCxJQUFYLEVBQWlCRyxlQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEp1bmcgaHUgS2ltXFxEb2N1bWVudHNcXHdldHViZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkb3Rldm4gZnJvbSBcImRvdGVudlwiO1xyXG5pbXBvcnQgXCIuL2RiXCI7XHJcbmltcG9ydCBhcHAgZnJvbSBcIi4vYXBwXCI7XHJcbmRvdGV2bi5jb25maWcoKTtcclxuaW1wb3J0IFwiLi9tb2RlbHMvVmlkZW9cIjsgXHJcbmltcG9ydCBcIi4vbW9kZWxzL0NvbW1lbnRcIjtcclxuaW1wb3J0IFwiLi9tb2RlbHMvVXNlclwiO1xyXG5cclxuY29uc3QgUE9SVCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgNDAwMDtcclxuXHJcbmNvbnN0IGhhbmRsZUxpc3RlbmluZyA9ICgpID0+XHJcbiAgICBjb25zb2xlLmxvZyhgTGlzdGVuaW5nIG9uOiBodHRwOi8vbG9jYWxob3N0OiR7UE9SVH1gKTtcclxuXHJcbmFwcC5saXN0ZW4oUE9SVCwgaGFuZGxlTGlzdGVuaW5nKTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "init.js"
      ],
      "names": [
        "dotevn",
        "config",
        "PORT",
        "process",
        "env",
        "handleListening",
        "console",
        "log",
        "app",
        "listen"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;AAHAA,mBAAOC,MAAP;;AAKA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;;AAEA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SACpBC,OAAO,CAACC,GAAR,0CAA8CL,IAA9C,EADoB;AAAA,CAAxB;;AAGAM,gBAAIC,MAAJ,CAAWP,IAAX,EAAiBG,eAAjB",
      "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "sourcesContent": [
        "import dotevn from \"dotenv\";\r\nimport \"./db\";\r\nimport app from \"./app\";\r\ndotevn.config();\r\nimport \"./models/Video\"; \r\nimport \"./models/Comment\";\r\nimport \"./models/User\";\r\n\r\nconst PORT = process.env.PORT || 4000;\r\n\r\nconst handleListening = () =>\r\n    console.log(`Listening on: http://localhost:${PORT}`);\r\n\r\napp.listen(PORT, handleListening);"
      ]
    },
    "sourceType": "script",
    "mtime": 1578190664078
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"filename\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\\\\app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "filename": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _helmet = _interopRequireDefault(require(\"helmet\"));\n\nvar _cookieParser = _interopRequireDefault(require(\"cookie-parser\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _passport = _interopRequireDefault(require(\"passport\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _expressSession = _interopRequireDefault(require(\"express-session\"));\n\nvar _connectMongo = _interopRequireDefault(require(\"connect-mongo\"));\n\nvar _middlewares = require(\"./middlewares\");\n\nvar _userRouter = _interopRequireDefault(require(\"./routers/userRouter\"));\n\nvar _videoRouter = _interopRequireDefault(require(\"./routers/videoRouter\"));\n\nvar _globalRouter = _interopRequireDefault(require(\"./routers/globalRouter\"));\n\nvar _routes = _interopRequireDefault(require(\"./routes\"));\n\nrequire(\"./passport\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//passport 설정 파일을 가져옴.\nvar app = (0, _express[\"default\"])();\nvar CookieStore = (0, _connectMongo[\"default\"])(_expressSession[\"default\"]);\napp.use((0, _helmet[\"default\"])());\napp.set('view engine', 'pug');\napp.use(\"/uploads\", _express[\"default\"][\"static\"](\"uploads\"));\napp.use(\"/static\", _express[\"default\"][\"static\"](\"static\"));\napp.use((0, _cookieParser[\"default\"])());\napp.use(_bodyParser[\"default\"].json());\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: true\n}));\napp.use((0, _morgan[\"default\"])(\"dev\"));\napp.use((0, _expressSession[\"default\"])({\n  secret: process.env.COOKIE_SECRET,\n  resave: true,\n  saveUninitialized: false,\n  store: new CookieStore({\n    mongooseConnection: _mongoose[\"default\"].connection\n  }) //이 저장소를 mongo와 연결시켜야 한다.\n\n}));\napp.use(_passport[\"default\"].initialize()); //passport가 초기화 됨.\n\napp.use(_passport[\"default\"].session()); //passport가 쿠키를 들여다보고 정보에 해당하는 사용자를 검색함.\n\napp.use(_middlewares.localsMiddleware);\napp.use(_routes[\"default\"].home, _globalRouter[\"default\"]);\napp.use(_routes[\"default\"].users, _userRouter[\"default\"]);\napp.use(_routes[\"default\"].videos, _videoRouter[\"default\"]);\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJDb29raWVTdG9yZSIsInNlc3Npb24iLCJ1c2UiLCJzZXQiLCJleHByZXNzIiwiYm9keVBhcnNlciIsImpzb24iLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJzZWNyZXQiLCJwcm9jZXNzIiwiZW52IiwiQ09PS0lFX1NFQ1JFVCIsInJlc2F2ZSIsInNhdmVVbmluaXRpYWxpemVkIiwic3RvcmUiLCJtb25nb29zZUNvbm5lY3Rpb24iLCJtb25nb29zZSIsImNvbm5lY3Rpb24iLCJwYXNzcG9ydCIsImluaXRpYWxpemUiLCJsb2NhbHNNaWRkbGV3YXJlIiwicm91dGVzIiwiaG9tZSIsImdsb2JhbFJvdXRlciIsInVzZXJzIiwidXNlclJvdXRlciIsInZpZGVvcyIsInZpZGVvUm91dGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFBcUI7QUFFckIsSUFBTUEsR0FBRyxHQUFHLDBCQUFaO0FBRUEsSUFBTUMsV0FBVyxHQUFHLDhCQUFXQywwQkFBWCxDQUFwQjtBQUVBRixHQUFHLENBQUNHLEdBQUosQ0FBUSx5QkFBUjtBQUNBSCxHQUFHLENBQUNJLEdBQUosQ0FBUSxhQUFSLEVBQXNCLEtBQXRCO0FBQ0FKLEdBQUcsQ0FBQ0csR0FBSixDQUFRLFVBQVIsRUFBbUJFLDhCQUFlLFNBQWYsQ0FBbkI7QUFDQUwsR0FBRyxDQUFDRyxHQUFKLENBQVEsU0FBUixFQUFrQkUsOEJBQWUsUUFBZixDQUFsQjtBQUNBTCxHQUFHLENBQUNHLEdBQUosQ0FBUSwrQkFBUjtBQUNBSCxHQUFHLENBQUNHLEdBQUosQ0FBUUcsdUJBQVdDLElBQVgsRUFBUjtBQUNBUCxHQUFHLENBQUNHLEdBQUosQ0FBUUcsdUJBQVdFLFVBQVgsQ0FBc0I7QUFBQ0MsRUFBQUEsUUFBUSxFQUFDO0FBQVYsQ0FBdEIsQ0FBUjtBQUNBVCxHQUFHLENBQUNHLEdBQUosQ0FBUSx3QkFBTyxLQUFQLENBQVI7QUFDQUgsR0FBRyxDQUFDRyxHQUFKLENBQ0ksZ0NBQVE7QUFDSk8sRUFBQUEsTUFBTSxFQUFDQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsYUFEZjtBQUVKQyxFQUFBQSxNQUFNLEVBQUMsSUFGSDtBQUdKQyxFQUFBQSxpQkFBaUIsRUFBQyxLQUhkO0FBSUpDLEVBQUFBLEtBQUssRUFBQyxJQUFJZixXQUFKLENBQWdCO0FBQUNnQixJQUFBQSxrQkFBa0IsRUFBRUMscUJBQVNDO0FBQTlCLEdBQWhCLENBSkYsQ0FJNkQ7O0FBSjdELENBQVIsQ0FESjtBQVFBbkIsR0FBRyxDQUFDRyxHQUFKLENBQVFpQixxQkFBU0MsVUFBVCxFQUFSLEUsQ0FBZ0M7O0FBQ2hDckIsR0FBRyxDQUFDRyxHQUFKLENBQVFpQixxQkFBU2xCLE9BQVQsRUFBUixFLENBQTZCOztBQUU3QkYsR0FBRyxDQUFDRyxHQUFKLENBQVFtQiw2QkFBUjtBQUVBdEIsR0FBRyxDQUFDRyxHQUFKLENBQVFvQixtQkFBT0MsSUFBZixFQUFxQkMsd0JBQXJCO0FBQ0F6QixHQUFHLENBQUNHLEdBQUosQ0FBUW9CLG1CQUFPRyxLQUFmLEVBQXNCQyxzQkFBdEI7QUFDQTNCLEdBQUcsQ0FBQ0csR0FBSixDQUFRb0IsbUJBQU9LLE1BQWYsRUFBdUJDLHVCQUF2QjtlQUVlN0IsRyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEp1bmcgaHUgS2ltXFxEb2N1bWVudHNcXHdldHViZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XHJcbmltcG9ydCBtb3JnYW4gZnJvbSBcIm1vcmdhblwiO1xyXG5pbXBvcnQgaGVsbWV0IGZyb20gXCJoZWxtZXRcIjtcclxuaW1wb3J0IGNvb2tpZVBhcnNlciBmcm9tIFwiY29va2llLXBhcnNlclwiO1xyXG5pbXBvcnQgYm9keVBhcnNlciBmcm9tIFwiYm9keS1wYXJzZXJcIjtcclxuaW1wb3J0IHBhc3Nwb3J0IGZyb20gXCJwYXNzcG9ydFwiO1xyXG5pbXBvcnQgbW9uZ29vc2UgZnJvbSBcIm1vbmdvb3NlXCI7XHJcbmltcG9ydCBzZXNzaW9uIGZyb20gXCJleHByZXNzLXNlc3Npb25cIjtcclxuaW1wb3J0IE1vbmdvU3RvcmUgZnJvbSBcImNvbm5lY3QtbW9uZ29cIjtcclxuaW1wb3J0IHtsb2NhbHNNaWRkbGV3YXJlfSBmcm9tIFwiLi9taWRkbGV3YXJlc1wiO1xyXG5pbXBvcnQgdXNlclJvdXRlciBmcm9tIFwiLi9yb3V0ZXJzL3VzZXJSb3V0ZXJcIjtcclxuaW1wb3J0IHZpZGVvUm91dGVyIGZyb20gXCIuL3JvdXRlcnMvdmlkZW9Sb3V0ZXJcIjtcclxuaW1wb3J0IGdsb2JhbFJvdXRlciBmcm9tIFwiLi9yb3V0ZXJzL2dsb2JhbFJvdXRlclwiO1xyXG5pbXBvcnQgcm91dGVzIGZyb20gXCIuL3JvdXRlc1wiO1xyXG5pbXBvcnQgXCIuL3Bhc3Nwb3J0XCI7IC8vcGFzc3BvcnQg7ISk7KCVIO2MjOydvOydhCDqsIDsoLjsmLQuXHJcblxyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcblxyXG5jb25zdCBDb29raWVTdG9yZSA9IE1vbmdvU3RvcmUoc2Vzc2lvbik7XHJcblxyXG5hcHAudXNlKGhlbG1ldCgpKTtcclxuYXBwLnNldCgndmlldyBlbmdpbmUnLCdwdWcnKTtcclxuYXBwLnVzZShcIi91cGxvYWRzXCIsZXhwcmVzcy5zdGF0aWMoXCJ1cGxvYWRzXCIpKTtcclxuYXBwLnVzZShcIi9zdGF0aWNcIixleHByZXNzLnN0YXRpYyhcInN0YXRpY1wiKSk7XHJcbmFwcC51c2UoY29va2llUGFyc2VyKCkpO1xyXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcclxuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoe2V4dGVuZGVkOnRydWV9KSk7XHJcbmFwcC51c2UobW9yZ2FuKFwiZGV2XCIpKTtcclxuYXBwLnVzZShcclxuICAgIHNlc3Npb24oe1xyXG4gICAgICAgIHNlY3JldDpwcm9jZXNzLmVudi5DT09LSUVfU0VDUkVULFxyXG4gICAgICAgIHJlc2F2ZTp0cnVlLFxyXG4gICAgICAgIHNhdmVVbmluaXRpYWxpemVkOmZhbHNlLFxyXG4gICAgICAgIHN0b3JlOm5ldyBDb29raWVTdG9yZSh7bW9uZ29vc2VDb25uZWN0aW9uOiBtb25nb29zZS5jb25uZWN0aW9ufSkgLy/snbQg7KCA7J6l7IaM66W8IG1vbmdv7JmAIOyXsOqysOyLnOy8nOyVvCDtlZzri6QuXHJcbiAgICB9KVxyXG4pO1xyXG5hcHAudXNlKHBhc3Nwb3J0LmluaXRpYWxpemUoKSk7IC8vcGFzc3BvcnTqsIAg7LSI6riw7ZmUIOuQqC5cclxuYXBwLnVzZShwYXNzcG9ydC5zZXNzaW9uKCkpOyAvL3Bhc3Nwb3J06rCAIOy/oO2CpOulvCDrk6Tsl6zri6Trs7Tqs6Ag7KCV67O07JeQIO2VtOuLue2VmOuKlCDsgqzsmqnsnpDrpbwg6rKA7IOJ7ZWoLlxyXG5cclxuYXBwLnVzZShsb2NhbHNNaWRkbGV3YXJlKTtcclxuXHJcbmFwcC51c2Uocm91dGVzLmhvbWUsIGdsb2JhbFJvdXRlcik7XHJcbmFwcC51c2Uocm91dGVzLnVzZXJzLCB1c2VyUm91dGVyKTtcclxuYXBwLnVzZShyb3V0ZXMudmlkZW9zLCB2aWRlb1JvdXRlcik7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBhcHA7Il19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "CookieStore",
        "session",
        "use",
        "set",
        "express",
        "bodyParser",
        "json",
        "urlencoded",
        "extended",
        "secret",
        "process",
        "env",
        "COOKIE_SECRET",
        "resave",
        "saveUninitialized",
        "store",
        "mongooseConnection",
        "mongoose",
        "connection",
        "passport",
        "initialize",
        "localsMiddleware",
        "routes",
        "home",
        "globalRouter",
        "users",
        "userRouter",
        "videos",
        "videoRouter"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAAqB;AAErB,IAAMA,GAAG,GAAG,0BAAZ;AAEA,IAAMC,WAAW,GAAG,8BAAWC,0BAAX,CAApB;AAEAF,GAAG,CAACG,GAAJ,CAAQ,yBAAR;AACAH,GAAG,CAACI,GAAJ,CAAQ,aAAR,EAAsB,KAAtB;AACAJ,GAAG,CAACG,GAAJ,CAAQ,UAAR,EAAmBE,8BAAe,SAAf,CAAnB;AACAL,GAAG,CAACG,GAAJ,CAAQ,SAAR,EAAkBE,8BAAe,QAAf,CAAlB;AACAL,GAAG,CAACG,GAAJ,CAAQ,+BAAR;AACAH,GAAG,CAACG,GAAJ,CAAQG,uBAAWC,IAAX,EAAR;AACAP,GAAG,CAACG,GAAJ,CAAQG,uBAAWE,UAAX,CAAsB;AAACC,EAAAA,QAAQ,EAAC;AAAV,CAAtB,CAAR;AACAT,GAAG,CAACG,GAAJ,CAAQ,wBAAO,KAAP,CAAR;AACAH,GAAG,CAACG,GAAJ,CACI,gCAAQ;AACJO,EAAAA,MAAM,EAACC,OAAO,CAACC,GAAR,CAAYC,aADf;AAEJC,EAAAA,MAAM,EAAC,IAFH;AAGJC,EAAAA,iBAAiB,EAAC,KAHd;AAIJC,EAAAA,KAAK,EAAC,IAAIf,WAAJ,CAAgB;AAACgB,IAAAA,kBAAkB,EAAEC,qBAASC;AAA9B,GAAhB,CAJF,CAI6D;;AAJ7D,CAAR,CADJ;AAQAnB,GAAG,CAACG,GAAJ,CAAQiB,qBAASC,UAAT,EAAR,E,CAAgC;;AAChCrB,GAAG,CAACG,GAAJ,CAAQiB,qBAASlB,OAAT,EAAR,E,CAA6B;;AAE7BF,GAAG,CAACG,GAAJ,CAAQmB,6BAAR;AAEAtB,GAAG,CAACG,GAAJ,CAAQoB,mBAAOC,IAAf,EAAqBC,wBAArB;AACAzB,GAAG,CAACG,GAAJ,CAAQoB,mBAAOG,KAAf,EAAsBC,sBAAtB;AACA3B,GAAG,CAACG,GAAJ,CAAQoB,mBAAOK,MAAf,EAAuBC,uBAAvB;eAEe7B,G",
      "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "sourcesContent": [
        "import express from \"express\";\r\nimport morgan from \"morgan\";\r\nimport helmet from \"helmet\";\r\nimport cookieParser from \"cookie-parser\";\r\nimport bodyParser from \"body-parser\";\r\nimport passport from \"passport\";\r\nimport mongoose from \"mongoose\";\r\nimport session from \"express-session\";\r\nimport MongoStore from \"connect-mongo\";\r\nimport {localsMiddleware} from \"./middlewares\";\r\nimport userRouter from \"./routers/userRouter\";\r\nimport videoRouter from \"./routers/videoRouter\";\r\nimport globalRouter from \"./routers/globalRouter\";\r\nimport routes from \"./routes\";\r\nimport \"./passport\"; //passport 설정 파일을 가져옴.\r\n\r\nconst app = express();\r\n\r\nconst CookieStore = MongoStore(session);\r\n\r\napp.use(helmet());\r\napp.set('view engine','pug');\r\napp.use(\"/uploads\",express.static(\"uploads\"));\r\napp.use(\"/static\",express.static(\"static\"));\r\napp.use(cookieParser());\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({extended:true}));\r\napp.use(morgan(\"dev\"));\r\napp.use(\r\n    session({\r\n        secret:process.env.COOKIE_SECRET,\r\n        resave:true,\r\n        saveUninitialized:false,\r\n        store:new CookieStore({mongooseConnection: mongoose.connection}) //이 저장소를 mongo와 연결시켜야 한다.\r\n    })\r\n);\r\napp.use(passport.initialize()); //passport가 초기화 됨.\r\napp.use(passport.session()); //passport가 쿠키를 들여다보고 정보에 해당하는 사용자를 검색함.\r\n\r\napp.use(localsMiddleware);\r\n\r\napp.use(routes.home, globalRouter);\r\napp.use(routes.users, userRouter);\r\napp.use(routes.videos, videoRouter);\r\n\r\nexport default app;"
      ]
    },
    "sourceType": "script",
    "mtime": 1578182369568
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\\\\routers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"filename\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\\\\routers\\\\userRouter.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\routers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "filename": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\routers\\userRouter.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\routers\\userRouter.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\routers\\userRouter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\routers",
        "sourceFileName": "userRouter.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _routes = _interopRequireDefault(require(\"../routes\"));\n\nvar _userController = require(\"../controllers/userController\");\n\nvar _middlewares = require(\"../middlewares\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar userRouter = _express[\"default\"].Router(); //userRouter.get(routes.users,users);\n\n\nuserRouter.get(_routes[\"default\"].editProfile, _middlewares.onlyPrivate, _userController.getEditProfile);\nuserRouter.post(_routes[\"default\"].editProfile, _middlewares.onlyPrivate, _middlewares.uploadAvatar, _userController.postEditProfile);\nuserRouter.get(_routes[\"default\"].changePassword, _middlewares.onlyPrivate, _userController.getChangePassword);\nuserRouter.post(_routes[\"default\"].changePassword, _middlewares.onlyPrivate, _userController.postChangePassword);\nuserRouter.get(_routes[\"default\"].userDetail(), _userController.userDetail);\nvar _default = userRouter;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJSb3V0ZXIuanMiXSwibmFtZXMiOlsidXNlclJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJnZXQiLCJyb3V0ZXMiLCJlZGl0UHJvZmlsZSIsIm9ubHlQcml2YXRlIiwiZ2V0RWRpdFByb2ZpbGUiLCJwb3N0IiwidXBsb2FkQXZhdGFyIiwicG9zdEVkaXRQcm9maWxlIiwiY2hhbmdlUGFzc3dvcmQiLCJnZXRDaGFuZ2VQYXNzd29yZCIsInBvc3RDaGFuZ2VQYXNzd29yZCIsInVzZXJEZXRhaWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFRQTs7OztBQUVBLElBQU1BLFVBQVUsR0FBR0Msb0JBQVFDLE1BQVIsRUFBbkIsQyxDQUVBOzs7QUFDQUYsVUFBVSxDQUFDRyxHQUFYLENBQWVDLG1CQUFPQyxXQUF0QixFQUFrQ0Msd0JBQWxDLEVBQThDQyw4QkFBOUM7QUFDQVAsVUFBVSxDQUFDUSxJQUFYLENBQWdCSixtQkFBT0MsV0FBdkIsRUFBbUNDLHdCQUFuQyxFQUErQ0cseUJBQS9DLEVBQTREQywrQkFBNUQ7QUFFQVYsVUFBVSxDQUFDRyxHQUFYLENBQWVDLG1CQUFPTyxjQUF0QixFQUFxQ0wsd0JBQXJDLEVBQWlETSxpQ0FBakQ7QUFDQVosVUFBVSxDQUFDUSxJQUFYLENBQWdCSixtQkFBT08sY0FBdkIsRUFBc0NMLHdCQUF0QyxFQUFrRE8sa0NBQWxEO0FBQ0FiLFVBQVUsQ0FBQ0csR0FBWCxDQUFlQyxtQkFBT1UsVUFBUCxFQUFmLEVBQW1DQSwwQkFBbkM7ZUFFZWQsVSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEp1bmcgaHUgS2ltXFxEb2N1bWVudHNcXHdldHViZVxccm91dGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XHJcbmltcG9ydCByb3V0ZXMgZnJvbSBcIi4uL3JvdXRlc1wiO1xyXG5pbXBvcnQge1xyXG4vLyAgICB1c2VycyxcclxuICAgIHVzZXJEZXRhaWwsXHJcbiAgICBnZXRFZGl0UHJvZmlsZSxcclxuICAgIHBvc3RFZGl0UHJvZmlsZSxcclxuICAgIGdldENoYW5nZVBhc3N3b3JkLFxyXG4gICAgcG9zdENoYW5nZVBhc3N3b3JkXHJcbn0gZnJvbSBcIi4uL2NvbnRyb2xsZXJzL3VzZXJDb250cm9sbGVyXCI7XHJcbmltcG9ydCB7b25seVByaXZhdGUsdXBsb2FkQXZhdGFyfSBmcm9tIFwiLi4vbWlkZGxld2FyZXNcIjtcclxuXHJcbmNvbnN0IHVzZXJSb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xyXG5cclxuLy91c2VyUm91dGVyLmdldChyb3V0ZXMudXNlcnMsdXNlcnMpO1xyXG51c2VyUm91dGVyLmdldChyb3V0ZXMuZWRpdFByb2ZpbGUsb25seVByaXZhdGUsZ2V0RWRpdFByb2ZpbGUpO1xyXG51c2VyUm91dGVyLnBvc3Qocm91dGVzLmVkaXRQcm9maWxlLG9ubHlQcml2YXRlLHVwbG9hZEF2YXRhcixwb3N0RWRpdFByb2ZpbGUpO1xyXG5cclxudXNlclJvdXRlci5nZXQocm91dGVzLmNoYW5nZVBhc3N3b3JkLG9ubHlQcml2YXRlLGdldENoYW5nZVBhc3N3b3JkKTtcclxudXNlclJvdXRlci5wb3N0KHJvdXRlcy5jaGFuZ2VQYXNzd29yZCxvbmx5UHJpdmF0ZSxwb3N0Q2hhbmdlUGFzc3dvcmQpO1xyXG51c2VyUm91dGVyLmdldChyb3V0ZXMudXNlckRldGFpbCgpLHVzZXJEZXRhaWwpO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgdXNlclJvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "userRouter.js"
      ],
      "names": [
        "userRouter",
        "express",
        "Router",
        "get",
        "routes",
        "editProfile",
        "onlyPrivate",
        "getEditProfile",
        "post",
        "uploadAvatar",
        "postEditProfile",
        "changePassword",
        "getChangePassword",
        "postChangePassword",
        "userDetail"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AAQA;;;;AAEA,IAAMA,UAAU,GAAGC,oBAAQC,MAAR,EAAnB,C,CAEA;;;AACAF,UAAU,CAACG,GAAX,CAAeC,mBAAOC,WAAtB,EAAkCC,wBAAlC,EAA8CC,8BAA9C;AACAP,UAAU,CAACQ,IAAX,CAAgBJ,mBAAOC,WAAvB,EAAmCC,wBAAnC,EAA+CG,yBAA/C,EAA4DC,+BAA5D;AAEAV,UAAU,CAACG,GAAX,CAAeC,mBAAOO,cAAtB,EAAqCL,wBAArC,EAAiDM,iCAAjD;AACAZ,UAAU,CAACQ,IAAX,CAAgBJ,mBAAOO,cAAvB,EAAsCL,wBAAtC,EAAkDO,kCAAlD;AACAb,UAAU,CAACG,GAAX,CAAeC,mBAAOU,UAAP,EAAf,EAAmCA,0BAAnC;eAEed,U",
      "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\routers",
      "sourcesContent": [
        "import express from \"express\";\r\nimport routes from \"../routes\";\r\nimport {\r\n//    users,\r\n    userDetail,\r\n    getEditProfile,\r\n    postEditProfile,\r\n    getChangePassword,\r\n    postChangePassword\r\n} from \"../controllers/userController\";\r\nimport {onlyPrivate,uploadAvatar} from \"../middlewares\";\r\n\r\nconst userRouter = express.Router();\r\n\r\n//userRouter.get(routes.users,users);\r\nuserRouter.get(routes.editProfile,onlyPrivate,getEditProfile);\r\nuserRouter.post(routes.editProfile,onlyPrivate,uploadAvatar,postEditProfile);\r\n\r\nuserRouter.get(routes.changePassword,onlyPrivate,getChangePassword);\r\nuserRouter.post(routes.changePassword,onlyPrivate,postChangePassword);\r\nuserRouter.get(routes.userDetail(),userDetail);\r\n\r\nexport default userRouter;"
      ]
    },
    "sourceType": "script",
    "mtime": 1578206513981
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"filename\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\\\\routes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "filename": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\routes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\routes.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
        "sourceFileName": "routes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n//Global\nvar HOME = \"/\";\nvar JOIN = \"/join\";\nvar LOGIN = \"/login\";\nvar LOGOUT = \"/logout\";\nvar SEARCH = \"/search\"; //Users\n\nvar USERS = \"/users\";\nvar USER_DETAIL = \"/:id\";\nvar EDIT_PROFILE = \"/edit-profile\";\nvar CHANGE_PASSWORD = \"/change-password\";\nvar ME = \"/me\"; //Videos\n\nvar VIDEOS = \"/videos\";\nvar UPLOAD = \"/upload\";\nvar VIDEO_DETAIL = \"/:id\";\nvar EDIT_VIDEO = \"/:id/edit\";\nvar DELETE_VIDEO = \"/:id/delete\"; //Github\n\nvar GITHUB = \"/auth/github\";\nvar GITHUB_CALLBACK = \"/auth/github/callback\"; //Facebook\n\nvar FB = \"/auth/facebook\";\nvar FB_CALLBACK = \"/auth/facebook/callback\";\nvar routes = {\n  home: HOME,\n  join: JOIN,\n  login: LOGIN,\n  logout: LOGOUT,\n  search: SEARCH,\n  users: USERS,\n  userDetail: function userDetail(id) {\n    if (id) {\n      return \"/users/\".concat(id);\n    } else {\n      return USER_DETAIL;\n    }\n  },\n  editProfile: EDIT_PROFILE,\n  changePassword: CHANGE_PASSWORD,\n  videos: VIDEOS,\n  upload: UPLOAD,\n  videoDetail: function videoDetail(id) {\n    if (id) {\n      return \"/videos/\".concat(id);\n    } else {\n      return VIDEO_DETAIL;\n    }\n  },\n  editVideo: function editVideo(id) {\n    if (id) {\n      return \"/videos/\".concat(id, \"/edit\");\n    } else {\n      return EDIT_VIDEO;\n    }\n  },\n  deleteVideo: function deleteVideo(id) {\n    if (id) {\n      return \"/videos/\".concat(id, \"/delete\");\n    } else {\n      return DELETE_VIDEO;\n    }\n  },\n  gitHub: GITHUB,\n  githubCallback: GITHUB_CALLBACK,\n  me: ME,\n  facebook: FB,\n  facebookCallback: FB_CALLBACK\n};\nvar _default = routes;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlcy5qcyJdLCJuYW1lcyI6WyJIT01FIiwiSk9JTiIsIkxPR0lOIiwiTE9HT1VUIiwiU0VBUkNIIiwiVVNFUlMiLCJVU0VSX0RFVEFJTCIsIkVESVRfUFJPRklMRSIsIkNIQU5HRV9QQVNTV09SRCIsIk1FIiwiVklERU9TIiwiVVBMT0FEIiwiVklERU9fREVUQUlMIiwiRURJVF9WSURFTyIsIkRFTEVURV9WSURFTyIsIkdJVEhVQiIsIkdJVEhVQl9DQUxMQkFDSyIsIkZCIiwiRkJfQ0FMTEJBQ0siLCJyb3V0ZXMiLCJob21lIiwiam9pbiIsImxvZ2luIiwibG9nb3V0Iiwic2VhcmNoIiwidXNlcnMiLCJ1c2VyRGV0YWlsIiwiaWQiLCJlZGl0UHJvZmlsZSIsImNoYW5nZVBhc3N3b3JkIiwidmlkZW9zIiwidXBsb2FkIiwidmlkZW9EZXRhaWwiLCJlZGl0VmlkZW8iLCJkZWxldGVWaWRlbyIsImdpdEh1YiIsImdpdGh1YkNhbGxiYWNrIiwibWUiLCJmYWNlYm9vayIsImZhY2Vib29rQ2FsbGJhY2siXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0EsSUFBTUEsSUFBSSxHQUFHLEdBQWI7QUFDQSxJQUFNQyxJQUFJLEdBQUcsT0FBYjtBQUNBLElBQU1DLEtBQUssR0FBRyxRQUFkO0FBQ0EsSUFBTUMsTUFBTSxHQUFHLFNBQWY7QUFDQSxJQUFNQyxNQUFNLEdBQUcsU0FBZixDLENBRUE7O0FBQ0EsSUFBTUMsS0FBSyxHQUFHLFFBQWQ7QUFDQSxJQUFNQyxXQUFXLEdBQUcsTUFBcEI7QUFDQSxJQUFNQyxZQUFZLEdBQUcsZUFBckI7QUFDQSxJQUFNQyxlQUFlLEdBQUcsa0JBQXhCO0FBQ0EsSUFBTUMsRUFBRSxHQUFHLEtBQVgsQyxDQUVBOztBQUNBLElBQU1DLE1BQU0sR0FBRyxTQUFmO0FBQ0EsSUFBTUMsTUFBTSxHQUFHLFNBQWY7QUFDQSxJQUFNQyxZQUFZLEdBQUcsTUFBckI7QUFDQSxJQUFNQyxVQUFVLEdBQUcsV0FBbkI7QUFDQSxJQUFNQyxZQUFZLEdBQUcsYUFBckIsQyxDQUVBOztBQUNBLElBQU1DLE1BQU0sR0FBRyxjQUFmO0FBQ0EsSUFBTUMsZUFBZSxHQUFHLHVCQUF4QixDLENBRUE7O0FBQ0EsSUFBTUMsRUFBRSxHQUFHLGdCQUFYO0FBQ0EsSUFBTUMsV0FBVyxHQUFHLHlCQUFwQjtBQUVBLElBQU1DLE1BQU0sR0FBRztBQUNYQyxFQUFBQSxJQUFJLEVBQUVwQixJQURLO0FBRVhxQixFQUFBQSxJQUFJLEVBQUVwQixJQUZLO0FBR1hxQixFQUFBQSxLQUFLLEVBQUVwQixLQUhJO0FBSVhxQixFQUFBQSxNQUFNLEVBQUVwQixNQUpHO0FBS1hxQixFQUFBQSxNQUFNLEVBQUVwQixNQUxHO0FBTVhxQixFQUFBQSxLQUFLLEVBQUVwQixLQU5JO0FBT1hxQixFQUFBQSxVQUFVLEVBQUUsb0JBQUNDLEVBQUQsRUFBTTtBQUNkLFFBQUdBLEVBQUgsRUFBTTtBQUNGLDhCQUFpQkEsRUFBakI7QUFDSCxLQUZELE1BRUs7QUFDRCxhQUFPckIsV0FBUDtBQUNIO0FBQ0osR0FiVTtBQWNYc0IsRUFBQUEsV0FBVyxFQUFFckIsWUFkRjtBQWVYc0IsRUFBQUEsY0FBYyxFQUFFckIsZUFmTDtBQWdCWHNCLEVBQUFBLE1BQU0sRUFBQ3BCLE1BaEJJO0FBaUJYcUIsRUFBQUEsTUFBTSxFQUFFcEIsTUFqQkc7QUFrQlhxQixFQUFBQSxXQUFXLEVBQUUscUJBQUNMLEVBQUQsRUFBTTtBQUNmLFFBQUdBLEVBQUgsRUFBTTtBQUNGLCtCQUFrQkEsRUFBbEI7QUFDSCxLQUZELE1BRUs7QUFDRCxhQUFPZixZQUFQO0FBQ0g7QUFDSixHQXhCVTtBQXlCWHFCLEVBQUFBLFNBQVMsRUFBRSxtQkFBQ04sRUFBRCxFQUFNO0FBQ2YsUUFBR0EsRUFBSCxFQUFNO0FBQ0YsK0JBQWtCQSxFQUFsQjtBQUNILEtBRkQsTUFFTztBQUNILGFBQU9kLFVBQVA7QUFDSDtBQUNGLEdBL0JVO0FBZ0NYcUIsRUFBQUEsV0FBVyxFQUFFLHFCQUFDUCxFQUFELEVBQU07QUFDZixRQUFHQSxFQUFILEVBQU07QUFDRiwrQkFBa0JBLEVBQWxCO0FBQ0gsS0FGRCxNQUVLO0FBQ0QsYUFBT2IsWUFBUDtBQUNIO0FBQ0osR0F0Q1U7QUF1Q1hxQixFQUFBQSxNQUFNLEVBQUNwQixNQXZDSTtBQXdDWHFCLEVBQUFBLGNBQWMsRUFBQ3BCLGVBeENKO0FBeUNYcUIsRUFBQUEsRUFBRSxFQUFDNUIsRUF6Q1E7QUEwQ1g2QixFQUFBQSxRQUFRLEVBQUVyQixFQTFDQztBQTJDWHNCLEVBQUFBLGdCQUFnQixFQUFFckI7QUEzQ1AsQ0FBZjtlQThDZUMsTSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEp1bmcgaHUgS2ltXFxEb2N1bWVudHNcXHdldHViZSIsInNvdXJjZXNDb250ZW50IjpbIi8vR2xvYmFsXHJcbmNvbnN0IEhPTUUgPSBcIi9cIjtcclxuY29uc3QgSk9JTiA9IFwiL2pvaW5cIjtcclxuY29uc3QgTE9HSU4gPSBcIi9sb2dpblwiO1xyXG5jb25zdCBMT0dPVVQgPSBcIi9sb2dvdXRcIjtcclxuY29uc3QgU0VBUkNIID0gXCIvc2VhcmNoXCI7XHJcblxyXG4vL1VzZXJzXHJcbmNvbnN0IFVTRVJTID0gXCIvdXNlcnNcIjtcclxuY29uc3QgVVNFUl9ERVRBSUwgPSBcIi86aWRcIjtcclxuY29uc3QgRURJVF9QUk9GSUxFID0gXCIvZWRpdC1wcm9maWxlXCI7XHJcbmNvbnN0IENIQU5HRV9QQVNTV09SRCA9IFwiL2NoYW5nZS1wYXNzd29yZFwiO1xyXG5jb25zdCBNRSA9IFwiL21lXCI7XHJcblxyXG4vL1ZpZGVvc1xyXG5jb25zdCBWSURFT1MgPSBcIi92aWRlb3NcIjtcclxuY29uc3QgVVBMT0FEID0gXCIvdXBsb2FkXCI7XHJcbmNvbnN0IFZJREVPX0RFVEFJTCA9IFwiLzppZFwiO1xyXG5jb25zdCBFRElUX1ZJREVPID0gXCIvOmlkL2VkaXRcIjtcclxuY29uc3QgREVMRVRFX1ZJREVPID0gXCIvOmlkL2RlbGV0ZVwiO1xyXG5cclxuLy9HaXRodWJcclxuY29uc3QgR0lUSFVCID0gXCIvYXV0aC9naXRodWJcIjtcclxuY29uc3QgR0lUSFVCX0NBTExCQUNLID0gXCIvYXV0aC9naXRodWIvY2FsbGJhY2tcIjtcclxuXHJcbi8vRmFjZWJvb2tcclxuY29uc3QgRkIgPSBcIi9hdXRoL2ZhY2Vib29rXCI7XHJcbmNvbnN0IEZCX0NBTExCQUNLID0gXCIvYXV0aC9mYWNlYm9vay9jYWxsYmFja1wiO1xyXG5cclxuY29uc3Qgcm91dGVzID0ge1xyXG4gICAgaG9tZTogSE9NRSxcclxuICAgIGpvaW46IEpPSU4sXHJcbiAgICBsb2dpbjogTE9HSU4sXHJcbiAgICBsb2dvdXQ6IExPR09VVCxcclxuICAgIHNlYXJjaDogU0VBUkNILFxyXG4gICAgdXNlcnM6IFVTRVJTLFxyXG4gICAgdXNlckRldGFpbDogKGlkKT0+e1xyXG4gICAgICAgIGlmKGlkKXtcclxuICAgICAgICAgICAgcmV0dXJuIGAvdXNlcnMvJHtpZH1gO1xyXG4gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICByZXR1cm4gVVNFUl9ERVRBSUw7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIGVkaXRQcm9maWxlOiBFRElUX1BST0ZJTEUsXHJcbiAgICBjaGFuZ2VQYXNzd29yZDogQ0hBTkdFX1BBU1NXT1JELFxyXG4gICAgdmlkZW9zOlZJREVPUyxcclxuICAgIHVwbG9hZDogVVBMT0FELFxyXG4gICAgdmlkZW9EZXRhaWw6IChpZCk9PntcclxuICAgICAgICBpZihpZCl7XHJcbiAgICAgICAgICAgIHJldHVybiBgL3ZpZGVvcy8ke2lkfWA7XHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgIHJldHVybiBWSURFT19ERVRBSUw7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIGVkaXRWaWRlbzogKGlkKT0+e1xyXG4gICAgICBpZihpZCl7XHJcbiAgICAgICAgICByZXR1cm4gYC92aWRlb3MvJHtpZH0vZWRpdGA7XHJcbiAgICAgIH0gIGVsc2V7XHJcbiAgICAgICAgICByZXR1cm4gRURJVF9WSURFTztcclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIGRlbGV0ZVZpZGVvOiAoaWQpPT57XHJcbiAgICAgICAgaWYoaWQpe1xyXG4gICAgICAgICAgICByZXR1cm4gYC92aWRlb3MvJHtpZH0vZGVsZXRlYDtcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgcmV0dXJuIERFTEVURV9WSURFTztcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgZ2l0SHViOkdJVEhVQixcclxuICAgIGdpdGh1YkNhbGxiYWNrOkdJVEhVQl9DQUxMQkFDSyxcclxuICAgIG1lOk1FLFxyXG4gICAgZmFjZWJvb2s6IEZCLFxyXG4gICAgZmFjZWJvb2tDYWxsYmFjazogRkJfQ0FMTEJBQ0tcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHJvdXRlczsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "routes.js"
      ],
      "names": [
        "HOME",
        "JOIN",
        "LOGIN",
        "LOGOUT",
        "SEARCH",
        "USERS",
        "USER_DETAIL",
        "EDIT_PROFILE",
        "CHANGE_PASSWORD",
        "ME",
        "VIDEOS",
        "UPLOAD",
        "VIDEO_DETAIL",
        "EDIT_VIDEO",
        "DELETE_VIDEO",
        "GITHUB",
        "GITHUB_CALLBACK",
        "FB",
        "FB_CALLBACK",
        "routes",
        "home",
        "join",
        "login",
        "logout",
        "search",
        "users",
        "userDetail",
        "id",
        "editProfile",
        "changePassword",
        "videos",
        "upload",
        "videoDetail",
        "editVideo",
        "deleteVideo",
        "gitHub",
        "githubCallback",
        "me",
        "facebook",
        "facebookCallback"
      ],
      "mappings": ";;;;;;AAAA;AACA,IAAMA,IAAI,GAAG,GAAb;AACA,IAAMC,IAAI,GAAG,OAAb;AACA,IAAMC,KAAK,GAAG,QAAd;AACA,IAAMC,MAAM,GAAG,SAAf;AACA,IAAMC,MAAM,GAAG,SAAf,C,CAEA;;AACA,IAAMC,KAAK,GAAG,QAAd;AACA,IAAMC,WAAW,GAAG,MAApB;AACA,IAAMC,YAAY,GAAG,eAArB;AACA,IAAMC,eAAe,GAAG,kBAAxB;AACA,IAAMC,EAAE,GAAG,KAAX,C,CAEA;;AACA,IAAMC,MAAM,GAAG,SAAf;AACA,IAAMC,MAAM,GAAG,SAAf;AACA,IAAMC,YAAY,GAAG,MAArB;AACA,IAAMC,UAAU,GAAG,WAAnB;AACA,IAAMC,YAAY,GAAG,aAArB,C,CAEA;;AACA,IAAMC,MAAM,GAAG,cAAf;AACA,IAAMC,eAAe,GAAG,uBAAxB,C,CAEA;;AACA,IAAMC,EAAE,GAAG,gBAAX;AACA,IAAMC,WAAW,GAAG,yBAApB;AAEA,IAAMC,MAAM,GAAG;AACXC,EAAAA,IAAI,EAAEpB,IADK;AAEXqB,EAAAA,IAAI,EAAEpB,IAFK;AAGXqB,EAAAA,KAAK,EAAEpB,KAHI;AAIXqB,EAAAA,MAAM,EAAEpB,MAJG;AAKXqB,EAAAA,MAAM,EAAEpB,MALG;AAMXqB,EAAAA,KAAK,EAAEpB,KANI;AAOXqB,EAAAA,UAAU,EAAE,oBAACC,EAAD,EAAM;AACd,QAAGA,EAAH,EAAM;AACF,8BAAiBA,EAAjB;AACH,KAFD,MAEK;AACD,aAAOrB,WAAP;AACH;AACJ,GAbU;AAcXsB,EAAAA,WAAW,EAAErB,YAdF;AAeXsB,EAAAA,cAAc,EAAErB,eAfL;AAgBXsB,EAAAA,MAAM,EAACpB,MAhBI;AAiBXqB,EAAAA,MAAM,EAAEpB,MAjBG;AAkBXqB,EAAAA,WAAW,EAAE,qBAACL,EAAD,EAAM;AACf,QAAGA,EAAH,EAAM;AACF,+BAAkBA,EAAlB;AACH,KAFD,MAEK;AACD,aAAOf,YAAP;AACH;AACJ,GAxBU;AAyBXqB,EAAAA,SAAS,EAAE,mBAACN,EAAD,EAAM;AACf,QAAGA,EAAH,EAAM;AACF,+BAAkBA,EAAlB;AACH,KAFD,MAEO;AACH,aAAOd,UAAP;AACH;AACF,GA/BU;AAgCXqB,EAAAA,WAAW,EAAE,qBAACP,EAAD,EAAM;AACf,QAAGA,EAAH,EAAM;AACF,+BAAkBA,EAAlB;AACH,KAFD,MAEK;AACD,aAAOb,YAAP;AACH;AACJ,GAtCU;AAuCXqB,EAAAA,MAAM,EAACpB,MAvCI;AAwCXqB,EAAAA,cAAc,EAACpB,eAxCJ;AAyCXqB,EAAAA,EAAE,EAAC5B,EAzCQ;AA0CX6B,EAAAA,QAAQ,EAAErB,EA1CC;AA2CXsB,EAAAA,gBAAgB,EAAErB;AA3CP,CAAf;eA8CeC,M",
      "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "sourcesContent": [
        "//Global\r\nconst HOME = \"/\";\r\nconst JOIN = \"/join\";\r\nconst LOGIN = \"/login\";\r\nconst LOGOUT = \"/logout\";\r\nconst SEARCH = \"/search\";\r\n\r\n//Users\r\nconst USERS = \"/users\";\r\nconst USER_DETAIL = \"/:id\";\r\nconst EDIT_PROFILE = \"/edit-profile\";\r\nconst CHANGE_PASSWORD = \"/change-password\";\r\nconst ME = \"/me\";\r\n\r\n//Videos\r\nconst VIDEOS = \"/videos\";\r\nconst UPLOAD = \"/upload\";\r\nconst VIDEO_DETAIL = \"/:id\";\r\nconst EDIT_VIDEO = \"/:id/edit\";\r\nconst DELETE_VIDEO = \"/:id/delete\";\r\n\r\n//Github\r\nconst GITHUB = \"/auth/github\";\r\nconst GITHUB_CALLBACK = \"/auth/github/callback\";\r\n\r\n//Facebook\r\nconst FB = \"/auth/facebook\";\r\nconst FB_CALLBACK = \"/auth/facebook/callback\";\r\n\r\nconst routes = {\r\n    home: HOME,\r\n    join: JOIN,\r\n    login: LOGIN,\r\n    logout: LOGOUT,\r\n    search: SEARCH,\r\n    users: USERS,\r\n    userDetail: (id)=>{\r\n        if(id){\r\n            return `/users/${id}`;\r\n        }else{\r\n            return USER_DETAIL;\r\n        }\r\n    },\r\n    editProfile: EDIT_PROFILE,\r\n    changePassword: CHANGE_PASSWORD,\r\n    videos:VIDEOS,\r\n    upload: UPLOAD,\r\n    videoDetail: (id)=>{\r\n        if(id){\r\n            return `/videos/${id}`;\r\n        }else{\r\n            return VIDEO_DETAIL;\r\n        }\r\n    },\r\n    editVideo: (id)=>{\r\n      if(id){\r\n          return `/videos/${id}/edit`;\r\n      }  else{\r\n          return EDIT_VIDEO;\r\n      }\r\n    },\r\n    deleteVideo: (id)=>{\r\n        if(id){\r\n            return `/videos/${id}/delete`;\r\n        }else{\r\n            return DELETE_VIDEO;\r\n        }\r\n    },\r\n    gitHub:GITHUB,\r\n    githubCallback:GITHUB_CALLBACK,\r\n    me:ME,\r\n    facebook: FB,\r\n    facebookCallback: FB_CALLBACK\r\n};\r\n\r\nexport default routes;"
      ]
    },
    "sourceType": "script",
    "mtime": 1578194645778
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"filename\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\\\\controllers\\\\userController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "filename": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\controllers\\userController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\controllers\\userController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\controllers\\userController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\controllers",
        "sourceFileName": "userController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.postChangePassword = exports.getChangePassword = exports.userDetail = exports.postEditProfile = exports.getEditProfile = exports.getMe = exports.logout = exports.postFacebookLogin = exports.facebookLoginCallback = exports.facebookLogin = exports.postGithubLogIn = exports.githubLoginCallback = exports.githubLogin = exports.postLogin = exports.getLogin = exports.postJoin = exports.getJoin = void 0;\n\nvar _passport = _interopRequireDefault(require(\"passport\"));\n\nvar _routes = _interopRequireDefault(require(\"../routes\"));\n\nvar _User = _interopRequireDefault(require(\"../models/User\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar getJoin = function getJoin(req, res) {\n  res.render(\"join\", {\n    pageTitle: \"Join\"\n  });\n};\n\nexports.getJoin = getJoin;\n\nvar postJoin =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res, next) {\n    var _req$body, name, email, password, password2, user;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _req$body = req.body, name = _req$body.name, email = _req$body.email, password = _req$body.password, password2 = _req$body.password2;\n\n            if (!(password !== password2)) {\n              _context.next = 6;\n              break;\n            }\n\n            res.status(400); //비밀번호, 비밀번호 재입력 값이 다르면 400 상태코드를 반환함.\n\n            res.render(\"join\", {\n              pageTitle: \"Join\"\n            });\n            _context.next = 19;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.next = 9;\n            return (0, _User[\"default\"])({\n              name: name,\n              email: email\n            });\n\n          case 9:\n            user = _context.sent;\n            _context.next = 12;\n            return _User[\"default\"].register(user, password);\n\n          case 12:\n            next(); //미들웨어는 next()를 호출하는것으로 res로 컨트롤을 넘긴다\n\n            _context.next = 19;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](6);\n            console.log(_context.t0);\n            res.redirect(_routes[\"default\"].home); //TO DO: Register User, Log user in\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[6, 15]]);\n  }));\n\n  return function postJoin(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.postJoin = postJoin;\n\nvar getLogin = function getLogin(req, res) {\n  return res.render(\"login\", {\n    pageTitle: \"Log In\"\n  });\n};\n\nexports.getLogin = getLogin;\n\nvar postLogin = _passport[\"default\"].authenticate('local', {\n  failureRedirect: _routes[\"default\"].login,\n  successRedirect: _routes[\"default\"].home\n}); //깃허브 로그인을 시도했을때 github로 보내는데 사용됨.\n\n\nexports.postLogin = postLogin;\n\nvar githubLogin = _passport[\"default\"].authenticate(\"github\"); //깃허브 로그인을 해서 사용자 정보를 받아왔을때 실행됨. \n\n\nexports.githubLogin = githubLogin;\n\nvar githubLoginCallback =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(accessToken, refreshToken, profile, cb) {\n    var _profile$_json, id, avatarUrl, name, email, user, newUser;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            //깃허브 인증을 승인하면 깃허브에서 내 페이지로 승인을 기다리는 상태가 된다.\n            _profile$_json = profile._json, id = _profile$_json.id, avatarUrl = _profile$_json.avatar_url, name = _profile$_json.name, email = _profile$_json.email;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _User[\"default\"].findOne({\n              email: email\n            });\n\n          case 4:\n            user = _context2.sent;\n\n            if (!user) {\n              _context2.next = 11;\n              break;\n            }\n\n            //유저를 찾았으면 유저정보를 update\n            user.githubId = id;\n            user.save();\n            return _context2.abrupt(\"return\", cb(null, user));\n\n          case 11:\n            _context2.next = 13;\n            return _User[\"default\"].create({\n              email: email,\n              name: name,\n              githubId: id,\n              avatarUrl: avatarUrl\n            });\n\n          case 13:\n            newUser = _context2.sent;\n            return _context2.abrupt(\"return\", cb(null, newUser));\n\n          case 15:\n            _context2.next = 20;\n            break;\n\n          case 17:\n            _context2.prev = 17;\n            _context2.t0 = _context2[\"catch\"](1);\n            return _context2.abrupt(\"return\", cb(_context2.t0));\n\n          case 20:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 17]]);\n  }));\n\n  return function githubLoginCallback(_x4, _x5, _x6, _x7) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.githubLoginCallback = githubLoginCallback;\n\nvar postGithubLogIn = function postGithubLogIn(req, res) {\n  res.redirect(_routes[\"default\"].home); //깃허브로 로그인한후 홈으로 리다이렉트 시킴.\n};\n\nexports.postGithubLogIn = postGithubLogIn;\n\nvar facebookLogin = _passport[\"default\"].authenticate(\"facebook\");\n\nexports.facebookLogin = facebookLogin;\n\nvar facebookLoginCallback =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(accessToken, refreshToken, profile, cb) {\n    var _profile$_json2, id, name, email, user, newUser;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _profile$_json2 = profile._json, id = _profile$_json2.id, name = _profile$_json2.name, email = _profile$_json2.email;\n            _context3.prev = 1;\n            _context3.next = 4;\n            return _User[\"default\"].findOne({\n              email: email\n            });\n\n          case 4:\n            user = _context3.sent;\n\n            if (!user) {\n              _context3.next = 12;\n              break;\n            }\n\n            user.id = id; //영상에서는 facebookId를 사용.\n\n            user.avatarUrl = \"https://graph.facebook.com/\".concat(id, \"/picture?type=large\");\n            user.save();\n            return _context3.abrupt(\"return\", cb(null, user));\n\n          case 12:\n            _context3.next = 14;\n            return _User[\"default\"].create({\n              email: email,\n              name: name,\n              id: id,\n              //영상에서는 facebookId를 사용.\n              avatarUrl: \"https://graph.facebook.com/\".concat(id, \"/picture?type=large\")\n            });\n\n          case 14:\n            newUser = _context3.sent;\n            return _context3.abrupt(\"return\", cb(null, newUser));\n\n          case 16:\n            _context3.next = 21;\n            break;\n\n          case 18:\n            _context3.prev = 18;\n            _context3.t0 = _context3[\"catch\"](1);\n            return _context3.abrupt(\"return\", cb(_context3.t0));\n\n          case 21:\n            console.log(accessToken, refreshToken, profile, cb);\n\n          case 22:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 18]]);\n  }));\n\n  return function facebookLoginCallback(_x8, _x9, _x10, _x11) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexports.facebookLoginCallback = facebookLoginCallback;\n\nvar postFacebookLogin = function postFacebookLogin(req, res, next) {\n  res.redirect(_routes[\"default\"].home);\n};\n\nexports.postFacebookLogin = postFacebookLogin;\n\nvar logout = function logout(req, res) {\n  req.logout(); //passport를 사용한 로그아웃.\n\n  res.redirect(_routes[\"default\"].home);\n};\n\nexports.logout = logout;\n\nvar getMe = function getMe(req, res, next) {\n  //userDetail과 하는 일을 같지만 userDetail에서는 user를 DB에서 찾아야 함.\n  res.render(\"userDetail\", {\n    pageTitle: \"User Detail\",\n    user: req.user\n  });\n};\n\nexports.getMe = getMe;\n\nvar getEditProfile = function getEditProfile(req, res) {\n  return res.render(\"editProfile\", {\n    pageTitle: \"Edit Profile\"\n  });\n};\n\nexports.getEditProfile = getEditProfile;\n\nvar postEditProfile =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(req, res) {\n    var _req$body2, name, email, file;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _req$body2 = req.body, name = _req$body2.name, email = _req$body2.email, file = req.file;\n            _context4.prev = 1;\n            _context4.next = 4;\n            return _User[\"default\"].findByIdAndUpdate(req.user.id, {\n              name: name,\n              email: email,\n              avatarUrl: file ? file.path : req.user.avatarUrl //file이 존재하면 file.path를 저장. 없으면 그대로 저장\n\n            });\n\n          case 4:\n            res.redirect(_routes[\"default\"].me);\n            console.log(req.params.id);\n            _context4.next = 11;\n            break;\n\n          case 8:\n            _context4.prev = 8;\n            _context4.t0 = _context4[\"catch\"](1);\n            res.render(\"editProfile\", {\n              pageTitle: \"Edit Profile\"\n            });\n\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[1, 8]]);\n  }));\n\n  return function postEditProfile(_x12, _x13) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nexports.postEditProfile = postEditProfile;\n\nvar userDetail =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(req, res) {\n    var id, user;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            id = req.params.id;\n            _context5.prev = 1;\n            _context5.next = 4;\n            return _User[\"default\"].findById(id);\n\n          case 4:\n            user = _context5.sent;\n            res.render(\"userDetail\", {\n              pageTitle: \"User Detail\",\n              user: user\n            });\n            _context5.next = 11;\n            break;\n\n          case 8:\n            _context5.prev = 8;\n            _context5.t0 = _context5[\"catch\"](1);\n            //랜덤 id 패러미터를 입력하거나 해서 에러가 발생하면 홈으로 리다이렉트 시킴.\n            res.redirect(_routes[\"default\"].editProfile);\n\n          case 11:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[1, 8]]);\n  }));\n\n  return function userDetail(_x14, _x15) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nexports.userDetail = userDetail;\n\nvar getChangePassword = function getChangePassword(req, res) {\n  return res.render(\"changePassword\", {\n    pageTitle: \"Change Password\"\n  });\n};\n\nexports.getChangePassword = getChangePassword;\n\nvar postChangePassword =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6(req, res) {\n    var _req$body3, oldPassword, newPassword, newPassword1;\n\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _req$body3 = req.body, oldPassword = _req$body3.oldPassword, newPassword = _req$body3.newPassword, newPassword1 = _req$body3.newPassword1;\n            _context6.prev = 1;\n\n            if (!(newPassword !== newPassword1)) {\n              _context6.next = 8;\n              break;\n            }\n\n            res.status(400);\n            res.redirect(\"/users/\".concat(_routes[\"default\"].changePassword));\n            return _context6.abrupt(\"return\");\n\n          case 8:\n            _context6.next = 10;\n            return req.user.changePassword(oldPassword, newPassword);\n\n          case 10:\n            res.redirect(_routes[\"default\"].me);\n\n          case 11:\n            _context6.next = 18;\n            break;\n\n          case 13:\n            _context6.prev = 13;\n            _context6.t0 = _context6[\"catch\"](1);\n            console.log(_context6.t0);\n            res.status(400);\n            res.redirect(\"/users/\".concat(_routes[\"default\"].changePassword));\n\n          case 18:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[1, 13]]);\n  }));\n\n  return function postChangePassword(_x16, _x17) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nexports.postChangePassword = postChangePassword;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJDb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbImdldEpvaW4iLCJyZXEiLCJyZXMiLCJyZW5kZXIiLCJwYWdlVGl0bGUiLCJwb3N0Sm9pbiIsIm5leHQiLCJib2R5IiwibmFtZSIsImVtYWlsIiwicGFzc3dvcmQiLCJwYXNzd29yZDIiLCJzdGF0dXMiLCJ1c2VyIiwiVXNlciIsInJlZ2lzdGVyIiwiY29uc29sZSIsImxvZyIsInJlZGlyZWN0Iiwicm91dGVzIiwiaG9tZSIsImdldExvZ2luIiwicG9zdExvZ2luIiwicGFzc3BvcnQiLCJhdXRoZW50aWNhdGUiLCJmYWlsdXJlUmVkaXJlY3QiLCJsb2dpbiIsInN1Y2Nlc3NSZWRpcmVjdCIsImdpdGh1YkxvZ2luIiwiZ2l0aHViTG9naW5DYWxsYmFjayIsImFjY2Vzc1Rva2VuIiwicmVmcmVzaFRva2VuIiwicHJvZmlsZSIsImNiIiwiX2pzb24iLCJpZCIsImF2YXRhclVybCIsImF2YXRhcl91cmwiLCJmaW5kT25lIiwiZ2l0aHViSWQiLCJzYXZlIiwiY3JlYXRlIiwibmV3VXNlciIsInBvc3RHaXRodWJMb2dJbiIsImZhY2Vib29rTG9naW4iLCJmYWNlYm9va0xvZ2luQ2FsbGJhY2siLCJwb3N0RmFjZWJvb2tMb2dpbiIsImxvZ291dCIsImdldE1lIiwiZ2V0RWRpdFByb2ZpbGUiLCJwb3N0RWRpdFByb2ZpbGUiLCJmaWxlIiwiZmluZEJ5SWRBbmRVcGRhdGUiLCJwYXRoIiwibWUiLCJwYXJhbXMiLCJ1c2VyRGV0YWlsIiwiZmluZEJ5SWQiLCJlZGl0UHJvZmlsZSIsImdldENoYW5nZVBhc3N3b3JkIiwicG9zdENoYW5nZVBhc3N3b3JkIiwib2xkUGFzc3dvcmQiLCJuZXdQYXNzd29yZCIsIm5ld1Bhc3N3b3JkMSIsImNoYW5nZVBhc3N3b3JkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBRU8sSUFBTUEsT0FBTyxHQUFHLFNBQVZBLE9BQVUsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDakNBLEVBQUFBLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLE1BQVgsRUFBa0I7QUFBQ0MsSUFBQUEsU0FBUyxFQUFFO0FBQVosR0FBbEI7QUFDSCxDQUZNOzs7O0FBSUEsSUFBTUMsUUFBUTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsMEJBQUcsaUJBQU9KLEdBQVAsRUFBV0MsR0FBWCxFQUFlSSxJQUFmO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSx3QkFHbEJMLEdBSGtCLENBRWhCTSxJQUZnQixFQUVWQyxJQUZVLGFBRVZBLElBRlUsRUFFTEMsS0FGSyxhQUVMQSxLQUZLLEVBRUNDLFFBRkQsYUFFQ0EsUUFGRCxFQUVVQyxTQUZWLGFBRVVBLFNBRlY7O0FBQUEsa0JBSWpCRCxRQUFRLEtBQUtDLFNBSkk7QUFBQTtBQUFBO0FBQUE7O0FBS2hCVCxZQUFBQSxHQUFHLENBQUNVLE1BQUosQ0FBVyxHQUFYLEVBTGdCLENBS0k7O0FBQ3BCVixZQUFBQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxNQUFYLEVBQWtCO0FBQUNDLGNBQUFBLFNBQVMsRUFBQztBQUFYLGFBQWxCO0FBTmdCO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBU08sc0JBQUs7QUFDcEJJLGNBQUFBLElBQUksRUFBSkEsSUFEb0I7QUFFcEJDLGNBQUFBLEtBQUssRUFBTEE7QUFGb0IsYUFBTCxDQVRQOztBQUFBO0FBU05JLFlBQUFBLElBVE07QUFBQTtBQUFBLG1CQWFOQyxpQkFBS0MsUUFBTCxDQUFjRixJQUFkLEVBQW9CSCxRQUFwQixDQWJNOztBQUFBO0FBY1pKLFlBQUFBLElBQUksR0FkUSxDQWNKOztBQWRJO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBZ0JaVSxZQUFBQSxPQUFPLENBQUNDLEdBQVI7QUFDQWYsWUFBQUEsR0FBRyxDQUFDZ0IsUUFBSixDQUFhQyxtQkFBT0MsSUFBcEIsRUFqQlksQ0FpQmdCOztBQWpCaEI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBSDs7QUFBQSxrQkFBUmYsUUFBUTtBQUFBO0FBQUE7QUFBQSxHQUFkOzs7O0FBdUJBLElBQU1nQixRQUFRLEdBQUcsU0FBWEEsUUFBVyxDQUFDcEIsR0FBRCxFQUFNQyxHQUFOO0FBQUEsU0FDcEJBLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLE9BQVgsRUFBbUI7QUFBQ0MsSUFBQUEsU0FBUyxFQUFFO0FBQVosR0FBbkIsQ0FEb0I7QUFBQSxDQUFqQjs7OztBQUdBLElBQU1rQixTQUFTLEdBQUdDLHFCQUFTQyxZQUFULENBQXNCLE9BQXRCLEVBQThCO0FBQ25EQyxFQUFBQSxlQUFlLEVBQUVOLG1CQUFPTyxLQUQyQjtBQUVuREMsRUFBQUEsZUFBZSxFQUFDUixtQkFBT0M7QUFGNEIsQ0FBOUIsQ0FBbEIsQyxDQUlQOzs7OztBQUNPLElBQU1RLFdBQVcsR0FBR0wscUJBQVNDLFlBQVQsQ0FBc0IsUUFBdEIsQ0FBcEIsQyxDQUNQOzs7OztBQUNPLElBQU1LLG1CQUFtQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsMEJBQUcsa0JBQU9DLFdBQVAsRUFBbUJDLFlBQW5CLEVBQWdDQyxPQUFoQyxFQUF3Q0MsRUFBeEM7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUMvQjtBQUQrQiw2QkFFb0JELE9BRnBCLENBRXpCRSxLQUZ5QixFQUVsQkMsRUFGa0Isa0JBRWxCQSxFQUZrQixFQUVIQyxTQUZHLGtCQUVmQyxVQUZlLEVBRU83QixJQUZQLGtCQUVPQSxJQUZQLEVBRVlDLEtBRlosa0JBRVlBLEtBRlo7QUFBQTtBQUFBO0FBQUEsbUJBSVJLLGlCQUFLd0IsT0FBTCxDQUFhO0FBQUM3QixjQUFBQSxLQUFLLEVBQUxBO0FBQUQsYUFBYixDQUpROztBQUFBO0FBSXJCSSxZQUFBQSxJQUpxQjs7QUFBQSxpQkFLeEJBLElBTHdCO0FBQUE7QUFBQTtBQUFBOztBQUtqQjtBQUNOQSxZQUFBQSxJQUFJLENBQUMwQixRQUFMLEdBQWdCSixFQUFoQjtBQUNBdEIsWUFBQUEsSUFBSSxDQUFDMkIsSUFBTDtBQVB1Qiw4Q0FRaEJQLEVBQUUsQ0FBQyxJQUFELEVBQU9wQixJQUFQLENBUmM7O0FBQUE7QUFBQTtBQUFBLG1CQVVEQyxpQkFBSzJCLE1BQUwsQ0FBWTtBQUM5QmhDLGNBQUFBLEtBQUssRUFBTEEsS0FEOEI7QUFFOUJELGNBQUFBLElBQUksRUFBSkEsSUFGOEI7QUFHOUIrQixjQUFBQSxRQUFRLEVBQUVKLEVBSG9CO0FBSTlCQyxjQUFBQSxTQUFTLEVBQVRBO0FBSjhCLGFBQVosQ0FWQzs7QUFBQTtBQVVqQk0sWUFBQUEsT0FWaUI7QUFBQSw4Q0FnQmhCVCxFQUFFLENBQUMsSUFBRCxFQUFNUyxPQUFOLENBaEJjOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQSw4Q0FtQnBCVCxFQUFFLGNBbkJrQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFIOztBQUFBLGtCQUFuQkosbUJBQW1CO0FBQUE7QUFBQTtBQUFBLEdBQXpCOzs7O0FBdUJBLElBQU1jLGVBQWUsR0FBRyxTQUFsQkEsZUFBa0IsQ0FBQzFDLEdBQUQsRUFBS0MsR0FBTCxFQUFZO0FBQ3ZDQSxFQUFBQSxHQUFHLENBQUNnQixRQUFKLENBQWFDLG1CQUFPQyxJQUFwQixFQUR1QyxDQUNaO0FBQzlCLENBRk07Ozs7QUFJQSxJQUFNd0IsYUFBYSxHQUFHckIscUJBQVNDLFlBQVQsQ0FBc0IsVUFBdEIsQ0FBdEI7Ozs7QUFFQSxJQUFNcUIscUJBQXFCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwwQkFBRyxrQkFBT2YsV0FBUCxFQUFvQkMsWUFBcEIsRUFBa0NDLE9BQWxDLEVBQTJDQyxFQUEzQztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsOEJBQ0ZELE9BREUsQ0FDekJFLEtBRHlCLEVBQ2xCQyxFQURrQixtQkFDbEJBLEVBRGtCLEVBQ2YzQixJQURlLG1CQUNmQSxJQURlLEVBQ1ZDLEtBRFUsbUJBQ1ZBLEtBRFU7QUFBQTtBQUFBO0FBQUEsbUJBR1ZLLGlCQUFLd0IsT0FBTCxDQUFhO0FBQUM3QixjQUFBQSxLQUFLLEVBQUxBO0FBQUQsYUFBYixDQUhVOztBQUFBO0FBR3ZCSSxZQUFBQSxJQUh1Qjs7QUFBQSxpQkFJMUJBLElBSjBCO0FBQUE7QUFBQTtBQUFBOztBQUt6QkEsWUFBQUEsSUFBSSxDQUFDc0IsRUFBTCxHQUFRQSxFQUFSLENBTHlCLENBS2I7O0FBQ1p0QixZQUFBQSxJQUFJLENBQUN1QixTQUFMLHdDQUE2Q0QsRUFBN0M7QUFDQXRCLFlBQUFBLElBQUksQ0FBQzJCLElBQUw7QUFQeUIsOENBUWxCUCxFQUFFLENBQUMsSUFBRCxFQUFNcEIsSUFBTixDQVJnQjs7QUFBQTtBQUFBO0FBQUEsbUJBVUhDLGlCQUFLMkIsTUFBTCxDQUFZO0FBQzlCaEMsY0FBQUEsS0FBSyxFQUFMQSxLQUQ4QjtBQUU5QkQsY0FBQUEsSUFBSSxFQUFKQSxJQUY4QjtBQUc5QjJCLGNBQUFBLEVBQUUsRUFBRkEsRUFIOEI7QUFHM0I7QUFDSEMsY0FBQUEsU0FBUyx1Q0FBZ0NELEVBQWhDO0FBSnFCLGFBQVosQ0FWRzs7QUFBQTtBQVVuQk8sWUFBQUEsT0FWbUI7QUFBQSw4Q0FnQmxCVCxFQUFFLENBQUMsSUFBRCxFQUFNUyxPQUFOLENBaEJnQjs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUEsOENBbUJ0QlQsRUFBRSxjQW5Cb0I7O0FBQUE7QUFxQmpDakIsWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlhLFdBQVosRUFBeUJDLFlBQXpCLEVBQXVDQyxPQUF2QyxFQUFnREMsRUFBaEQ7O0FBckJpQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFIOztBQUFBLGtCQUFyQlkscUJBQXFCO0FBQUE7QUFBQTtBQUFBLEdBQTNCOzs7O0FBd0JBLElBQU1DLGlCQUFpQixHQUFHLFNBQXBCQSxpQkFBb0IsQ0FBQzdDLEdBQUQsRUFBS0MsR0FBTCxFQUFTSSxJQUFULEVBQWdCO0FBQzdDSixFQUFBQSxHQUFHLENBQUNnQixRQUFKLENBQWFDLG1CQUFPQyxJQUFwQjtBQUNILENBRk07Ozs7QUFJQSxJQUFNMkIsTUFBTSxHQUFHLFNBQVRBLE1BQVMsQ0FBQzlDLEdBQUQsRUFBTUMsR0FBTixFQUFhO0FBQy9CRCxFQUFBQSxHQUFHLENBQUM4QyxNQUFKLEdBRCtCLENBQ2pCOztBQUNkN0MsRUFBQUEsR0FBRyxDQUFDZ0IsUUFBSixDQUFhQyxtQkFBT0MsSUFBcEI7QUFDSCxDQUhNOzs7O0FBS0EsSUFBTTRCLEtBQUssR0FBRyxTQUFSQSxLQUFRLENBQUMvQyxHQUFELEVBQUtDLEdBQUwsRUFBU0ksSUFBVCxFQUFnQjtBQUNqQztBQUNBSixFQUFBQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxZQUFYLEVBQXlCO0FBQUNDLElBQUFBLFNBQVMsRUFBQyxhQUFYO0FBQTBCUyxJQUFBQSxJQUFJLEVBQUVaLEdBQUcsQ0FBQ1k7QUFBcEMsR0FBekI7QUFDSCxDQUhNOzs7O0FBS0EsSUFBTW9DLGNBQWMsR0FBRyxTQUFqQkEsY0FBaUIsQ0FBQ2hELEdBQUQsRUFBTUMsR0FBTjtBQUFBLFNBQzFCQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxhQUFYLEVBQXlCO0FBQUNDLElBQUFBLFNBQVMsRUFBRTtBQUFaLEdBQXpCLENBRDBCO0FBQUEsQ0FBdkI7Ozs7QUFHQSxJQUFNOEMsZUFBZTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsMEJBQUcsa0JBQU9qRCxHQUFQLEVBQVdDLEdBQVg7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHlCQUl6QkQsR0FKeUIsQ0FFdkJNLElBRnVCLEVBRWhCQyxJQUZnQixjQUVoQkEsSUFGZ0IsRUFFWEMsS0FGVyxjQUVYQSxLQUZXLEVBR3ZCMEMsSUFIdUIsR0FJekJsRCxHQUp5QixDQUd2QmtELElBSHVCO0FBQUE7QUFBQTtBQUFBLG1CQU9qQnJDLGlCQUFLc0MsaUJBQUwsQ0FBdUJuRCxHQUFHLENBQUNZLElBQUosQ0FBU3NCLEVBQWhDLEVBQ047QUFDSTNCLGNBQUFBLElBQUksRUFBSkEsSUFESjtBQUVJQyxjQUFBQSxLQUFLLEVBQUxBLEtBRko7QUFHSTJCLGNBQUFBLFNBQVMsRUFBRWUsSUFBSSxHQUFHQSxJQUFJLENBQUNFLElBQVIsR0FBYXBELEdBQUcsQ0FBQ1ksSUFBSixDQUFTdUIsU0FIekMsQ0FHbUQ7O0FBSG5ELGFBRE0sQ0FQaUI7O0FBQUE7QUFjdkJsQyxZQUFBQSxHQUFHLENBQUNnQixRQUFKLENBQWFDLG1CQUFPbUMsRUFBcEI7QUFDQXRDLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZaEIsR0FBRyxDQUFDc0QsTUFBSixDQUFXcEIsRUFBdkI7QUFmdUI7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFpQnZCakMsWUFBQUEsR0FBRyxDQUFDQyxNQUFKLENBQVcsYUFBWCxFQUF5QjtBQUFDQyxjQUFBQSxTQUFTLEVBQUM7QUFBWCxhQUF6Qjs7QUFqQnVCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUg7O0FBQUEsa0JBQWY4QyxlQUFlO0FBQUE7QUFBQTtBQUFBLEdBQXJCOzs7O0FBc0JBLElBQU1NLFVBQVU7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDBCQUFHLGtCQUFPdkQsR0FBUCxFQUFZQyxHQUFaO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNQaUMsWUFBQUEsRUFETyxHQUNGbEMsR0FERSxDQUNmc0QsTUFEZSxDQUNQcEIsRUFETztBQUFBO0FBQUE7QUFBQSxtQkFHQ3JCLGlCQUFLMkMsUUFBTCxDQUFjdEIsRUFBZCxDQUhEOztBQUFBO0FBR1p0QixZQUFBQSxJQUhZO0FBSWxCWCxZQUFBQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxZQUFYLEVBQXdCO0FBQUNDLGNBQUFBLFNBQVMsRUFBRSxhQUFaO0FBQTJCUyxjQUFBQSxJQUFJLEVBQUpBO0FBQTNCLGFBQXhCO0FBSmtCO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBS1A7QUFDWFgsWUFBQUEsR0FBRyxDQUFDZ0IsUUFBSixDQUFhQyxtQkFBT3VDLFdBQXBCOztBQU5rQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFIOztBQUFBLGtCQUFWRixVQUFVO0FBQUE7QUFBQTtBQUFBLEdBQWhCOzs7O0FBU0EsSUFBTUcsaUJBQWlCLEdBQUcsU0FBcEJBLGlCQUFvQixDQUFDMUQsR0FBRCxFQUFNQyxHQUFOO0FBQUEsU0FDL0JBLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLGdCQUFYLEVBQTZCO0FBQUVDLElBQUFBLFNBQVMsRUFBRTtBQUFiLEdBQTdCLENBRCtCO0FBQUEsQ0FBMUI7Ozs7QUFHQSxJQUFNd0Qsa0JBQWtCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSwwQkFBRyxrQkFBTzNELEdBQVAsRUFBWUMsR0FBWjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEseUJBRzVCRCxHQUg0QixDQUU5Qk0sSUFGOEIsRUFFdEJzRCxXQUZzQixjQUV0QkEsV0FGc0IsRUFFVEMsV0FGUyxjQUVUQSxXQUZTLEVBRUlDLFlBRkosY0FFSUEsWUFGSjtBQUFBOztBQUFBLGtCQUsxQkQsV0FBVyxLQUFLQyxZQUxVO0FBQUE7QUFBQTtBQUFBOztBQU8xQjdELFlBQUFBLEdBQUcsQ0FBQ1UsTUFBSixDQUFXLEdBQVg7QUFDQVYsWUFBQUEsR0FBRyxDQUFDZ0IsUUFBSixrQkFBdUJDLG1CQUFPNkMsY0FBOUI7QUFSMEI7O0FBQUE7QUFBQTtBQUFBLG1CQVdwQi9ELEdBQUcsQ0FBQ1ksSUFBSixDQUFTbUQsY0FBVCxDQUF3QkgsV0FBeEIsRUFBcUNDLFdBQXJDLENBWG9COztBQUFBO0FBWTFCNUQsWUFBQUEsR0FBRyxDQUFDZ0IsUUFBSixDQUFhQyxtQkFBT21DLEVBQXBCOztBQVowQjtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBZ0I5QnRDLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUjtBQUNBZixZQUFBQSxHQUFHLENBQUNVLE1BQUosQ0FBVyxHQUFYO0FBQ0FWLFlBQUFBLEdBQUcsQ0FBQ2dCLFFBQUosa0JBQXVCQyxtQkFBTzZDLGNBQTlCOztBQWxCOEI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBSDs7QUFBQSxrQkFBbEJKLGtCQUFrQjtBQUFBO0FBQUE7QUFBQSxHQUF4QiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEp1bmcgaHUgS2ltXFxEb2N1bWVudHNcXHdldHViZVxcY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcGFzc3BvcnQgZnJvbSBcInBhc3Nwb3J0XCI7XHJcbmltcG9ydCByb3V0ZXMgZnJvbSBcIi4uL3JvdXRlc1wiXHJcbmltcG9ydCBVc2VyIGZyb20gXCIuLi9tb2RlbHMvVXNlclwiO1xyXG5cclxuZXhwb3J0IGNvbnN0IGdldEpvaW4gPSAocmVxLCByZXMpID0+IHtcclxuICAgIHJlcy5yZW5kZXIoXCJqb2luXCIse3BhZ2VUaXRsZTogXCJKb2luXCJ9KTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBwb3N0Sm9pbiA9IGFzeW5jIChyZXEscmVzLG5leHQpID0+IHtcclxuICAgIGNvbnN0IHtcclxuICAgICAgICBib2R5OntuYW1lLGVtYWlsLHBhc3N3b3JkLHBhc3N3b3JkMn1cclxuICAgIH09cmVxO1xyXG4gICAgaWYocGFzc3dvcmQgIT09IHBhc3N3b3JkMil7XHJcbiAgICAgICAgcmVzLnN0YXR1cyg0MDApOyAgICAvL+u5hOuwgOuyiO2YuCwg67mE67CA67KI7Zi4IOyerOyeheugpSDqsJLsnbQg64uk66W066m0IDQwMCDsg4Htg5zsvZTrk5zrpbwg67CY7ZmY7ZWoLlxyXG4gICAgICAgIHJlcy5yZW5kZXIoXCJqb2luXCIse3BhZ2VUaXRsZTpcIkpvaW5cIn0pO1xyXG4gICAgfWVsc2V7XHJcbiAgICAgICAgdHJ5e1xyXG4gICAgICAgICAgICBjb25zdCB1c2VyID0gYXdhaXQgVXNlcih7XHJcbiAgICAgICAgICAgICAgICBuYW1lLFxyXG4gICAgICAgICAgICAgICAgZW1haWxcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGF3YWl0IFVzZXIucmVnaXN0ZXIodXNlciwgcGFzc3dvcmQpO1xyXG4gICAgICAgICAgICBuZXh0KCk7IC8v66+465Ok7Juo7Ja064qUIG5leHQoKeulvCDtmLjstpztlZjripTqsoPsnLzroZwgcmVz66GcIOy7qO2KuOuhpOydhCDrhJjquLTri6RcclxuICAgICAgICB9Y2F0Y2goZXJyb3Ipe1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XHJcbiAgICAgICAgICAgIHJlcy5yZWRpcmVjdChyb3V0ZXMuaG9tZSk7ICAvL1RPIERPOiBSZWdpc3RlciBVc2VyLCBMb2cgdXNlciBpblxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0TG9naW4gPSAocmVxLCByZXMpID0+XHJcbiAgICByZXMucmVuZGVyKFwibG9naW5cIix7cGFnZVRpdGxlOiBcIkxvZyBJblwifSk7XHJcblxyXG5leHBvcnQgY29uc3QgcG9zdExvZ2luID0gcGFzc3BvcnQuYXV0aGVudGljYXRlKCdsb2NhbCcse1xyXG4gICAgZmFpbHVyZVJlZGlyZWN0OiByb3V0ZXMubG9naW4sXHJcbiAgICBzdWNjZXNzUmVkaXJlY3Q6cm91dGVzLmhvbWVcclxufSk7XHJcbi8v6rmD7ZeI67iMIOuhnOq3uOyduOydhCDsi5zrj4TtlojsnYTrlYwgZ2l0aHVi66GcIOuztOuCtOuKlOuNsCDsgqzsmqnrkKguXHJcbmV4cG9ydCBjb25zdCBnaXRodWJMb2dpbiA9IHBhc3Nwb3J0LmF1dGhlbnRpY2F0ZShcImdpdGh1YlwiKTtcclxuLy/quYPtl4jruIwg66Gc6re47J247J2EIO2VtOyEnCDsgqzsmqnsnpAg7KCV67O066W8IOuwm+yVhOyZlOydhOuVjCDsi6TtlonrkKguIFxyXG5leHBvcnQgY29uc3QgZ2l0aHViTG9naW5DYWxsYmFjayA9IGFzeW5jIChhY2Nlc3NUb2tlbixyZWZyZXNoVG9rZW4scHJvZmlsZSxjYik9PntcclxuICAgIC8v6rmD7ZeI67iMIOyduOymneydhCDsirnsnbjtlZjrqbQg6rmD7ZeI67iM7JeQ7IScIOuCtCDtjpjsnbTsp4DroZwg7Iq57J247J2EIOq4sOuLpOumrOuKlCDsg4Htg5zqsIAg65Cc64ukLlxyXG4gICAgY29uc3R7X2pzb246e2lkLGF2YXRhcl91cmw6IGF2YXRhclVybCxuYW1lLGVtYWlsfX09cHJvZmlsZTtcclxuICAgIHRyeXtcclxuICAgICAgICBjb25zdCB1c2VyID0gYXdhaXQgVXNlci5maW5kT25lKHtlbWFpbH0pOyAvL2VtYWls66GcIO2VnCDqsJzsnZggZG9jdW1lbnTrpbwg7YOQ7IOJ7ZWY64qUIE1vbmdvREIg7L+866asXHJcbiAgICAgICAgaWYodXNlcil7IC8v7Jyg7KCA66W8IOywvuyVmOycvOuptCDsnKDsoIDsoJXrs7TrpbwgdXBkYXRlXHJcbiAgICAgICAgICAgIHVzZXIuZ2l0aHViSWQgPSBpZDtcclxuICAgICAgICAgICAgdXNlci5zYXZlKCk7XHJcbiAgICAgICAgICAgIHJldHVybiBjYihudWxsLCB1c2VyKTsgLy/svZzrsLHtlajsiJgg7Zi47LacLiDsv6DtgqTsl5Ag7KCA7J6lLlxyXG4gICAgICAgIH1lbHNleyAvL+ycoOyggOulvCDssL7sp4Ag66q77ZaI7Jy866m0IOyDiOuhnCDrk7HroZ3tlahcclxuICAgICAgICAgICAgY29uc3QgbmV3VXNlciA9IGF3YWl0IFVzZXIuY3JlYXRlKHtcclxuICAgICAgICAgICAgICAgIGVtYWlsLFxyXG4gICAgICAgICAgICAgICAgbmFtZSxcclxuICAgICAgICAgICAgICAgIGdpdGh1YklkOiBpZCxcclxuICAgICAgICAgICAgICAgIGF2YXRhclVybFxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgcmV0dXJuIGNiKG51bGwsbmV3VXNlcik7XHJcbiAgICAgICAgfVxyXG4gICAgfWNhdGNoKGVycm9yKXtcclxuICAgICAgICByZXR1cm4gY2IoZXJyb3IpO1xyXG4gICAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHBvc3RHaXRodWJMb2dJbiA9IChyZXEscmVzKSA9PntcclxuICAgIHJlcy5yZWRpcmVjdChyb3V0ZXMuaG9tZSk7IC8v6rmD7ZeI67iM66GcIOuhnOq3uOyduO2VnO2bhCDtmYjsnLzroZwg66as64uk7J2066CJ7Yq4IOyLnO2CtC5cclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBmYWNlYm9va0xvZ2luID0gcGFzc3BvcnQuYXV0aGVudGljYXRlKFwiZmFjZWJvb2tcIik7XHJcblxyXG5leHBvcnQgY29uc3QgZmFjZWJvb2tMb2dpbkNhbGxiYWNrID0gYXN5bmMgKGFjY2Vzc1Rva2VuLCByZWZyZXNoVG9rZW4sIHByb2ZpbGUsIGNiKT0+e1xyXG4gICAgY29uc3QgeyBfanNvbjp7aWQsbmFtZSxlbWFpbH19PXByb2ZpbGU7XHJcbiAgICB0cnl7XHJcbiAgICAgICAgY29uc3QgdXNlciA9IGF3YWl0IFVzZXIuZmluZE9uZSh7ZW1haWx9KTtcclxuICAgICAgICBpZih1c2VyKXtcclxuICAgICAgICAgICAgdXNlci5pZD1pZDsgLy/smIHsg4Hsl5DshJzripQgZmFjZWJvb2tJZOulvCDsgqzsmqkuXHJcbiAgICAgICAgICAgIHVzZXIuYXZhdGFyVXJsPWBodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8ke2lkfS9waWN0dXJlP3R5cGU9bGFyZ2VgO1xyXG4gICAgICAgICAgICB1c2VyLnNhdmUoKTtcclxuICAgICAgICAgICAgcmV0dXJuIGNiKG51bGwsdXNlcik7XHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgIGNvbnN0IG5ld1VzZXIgPSBhd2FpdCBVc2VyLmNyZWF0ZSh7XHJcbiAgICAgICAgICAgICAgICBlbWFpbCxcclxuICAgICAgICAgICAgICAgIG5hbWUsXHJcbiAgICAgICAgICAgICAgICBpZCwvL+yYgeyDgeyXkOyEnOuKlCBmYWNlYm9va0lk66W8IOyCrOyaqS5cclxuICAgICAgICAgICAgICAgIGF2YXRhclVybDogYGh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyR7aWR9L3BpY3R1cmU/dHlwZT1sYXJnZWBcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHJldHVybiBjYihudWxsLG5ld1VzZXIpO1xyXG4gICAgICAgIH1cclxuICAgIH1jYXRjaChlcnJvcil7XHJcbiAgICAgICAgcmV0dXJuIGNiKGVycm9yKTtcclxuICAgIH1cclxuICAgIGNvbnNvbGUubG9nKGFjY2Vzc1Rva2VuLCByZWZyZXNoVG9rZW4sIHByb2ZpbGUsIGNiKTtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IHBvc3RGYWNlYm9va0xvZ2luID0gKHJlcSxyZXMsbmV4dCk9PntcclxuICAgIHJlcy5yZWRpcmVjdChyb3V0ZXMuaG9tZSk7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBsb2dvdXQgPSAocmVxLCByZXMpID0+e1xyXG4gICAgcmVxLmxvZ291dCgpOyAvL3Bhc3Nwb3J066W8IOyCrOyaqe2VnCDroZzqt7jslYTsm4MuXHJcbiAgICByZXMucmVkaXJlY3Qocm91dGVzLmhvbWUpO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGdldE1lID0gKHJlcSxyZXMsbmV4dCk9PntcclxuICAgIC8vdXNlckRldGFpbOqzvCDtlZjripQg7J287J2EIOqwmeyngOunjCB1c2VyRGV0YWls7JeQ7ISc64qUIHVzZXLrpbwgRELsl5DshJwg7LC+7JWE7JW8IO2VqC5cclxuICAgIHJlcy5yZW5kZXIoXCJ1c2VyRGV0YWlsXCIsIHtwYWdlVGl0bGU6XCJVc2VyIERldGFpbFwiLCB1c2VyOiByZXEudXNlcn0pO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGdldEVkaXRQcm9maWxlID0gKHJlcSwgcmVzKSA9PiBcclxuICAgIHJlcy5yZW5kZXIoXCJlZGl0UHJvZmlsZVwiLHtwYWdlVGl0bGU6IFwiRWRpdCBQcm9maWxlXCJ9KTtcclxuXHJcbmV4cG9ydCBjb25zdCBwb3N0RWRpdFByb2ZpbGUgPSBhc3luYyAocmVxLHJlcyk9PntcclxuICAgIGNvbnN0e1xyXG4gICAgICAgIGJvZHk6IHtuYW1lLGVtYWlsfSxcclxuICAgICAgICBmaWxlXHJcbiAgICB9PXJlcTtcclxuICAgIHRyeXtcclxuICAgICAgICBcclxuICAgICAgICBhd2FpdCBVc2VyLmZpbmRCeUlkQW5kVXBkYXRlKHJlcS51c2VyLmlkLFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgbmFtZSxcclxuICAgICAgICAgICAgZW1haWwsXHJcbiAgICAgICAgICAgIGF2YXRhclVybDogZmlsZSA/IGZpbGUucGF0aDpyZXEudXNlci5hdmF0YXJVcmwgLy9maWxl7J20IOyhtOyerO2VmOuptCBmaWxlLnBhdGjrpbwg7KCA7J6lLiDsl4bsnLzrqbQg6re464yA66GcIOyggOyepVxyXG5cclxuICAgICAgICB9KTtcclxuICAgICAgICByZXMucmVkaXJlY3Qocm91dGVzLm1lKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhyZXEucGFyYW1zLmlkKTtcclxuICAgIH1jYXRjaChlcnJvcil7XHJcbiAgICAgICAgcmVzLnJlbmRlcihcImVkaXRQcm9maWxlXCIse3BhZ2VUaXRsZTpcIkVkaXQgUHJvZmlsZVwifSk7XHJcbiAgICB9XHJcbn07XHJcbiAgIFxyXG5cclxuZXhwb3J0IGNvbnN0IHVzZXJEZXRhaWwgPSBhc3luYyAocmVxLCByZXMpID0+e1xyXG4gICAgY29uc3Qge3BhcmFtczp7aWR9fT1yZXE7XHJcbiAgICB0cnl7XHJcbiAgICAgICAgY29uc3QgdXNlciA9IGF3YWl0IFVzZXIuZmluZEJ5SWQoaWQpO1xyXG4gICAgICAgIHJlcy5yZW5kZXIoXCJ1c2VyRGV0YWlsXCIse3BhZ2VUaXRsZTogXCJVc2VyIERldGFpbFwiLCB1c2VyfSk7XHJcbiAgICB9Y2F0Y2goZXJyb3IpeyAvL+uenOuNpCBpZCDtjKjrn6zrr7jthLDrpbwg7J6F66Cl7ZWY6rGw64KYIO2VtOyEnCDsl5Drn6zqsIAg67Cc7IOd7ZWY66m0IO2ZiOycvOuhnCDrpqzri6TsnbTroIntirgg7Iuc7YK0LlxyXG4gICAgICAgIHJlcy5yZWRpcmVjdChyb3V0ZXMuZWRpdFByb2ZpbGUpO1xyXG4gICAgfVxyXG59O1xyXG5leHBvcnQgY29uc3QgZ2V0Q2hhbmdlUGFzc3dvcmQgPSAocmVxLCByZXMpID0+XHJcbiAgcmVzLnJlbmRlcihcImNoYW5nZVBhc3N3b3JkXCIsIHsgcGFnZVRpdGxlOiBcIkNoYW5nZSBQYXNzd29yZFwiIH0pO1xyXG5cclxuZXhwb3J0IGNvbnN0IHBvc3RDaGFuZ2VQYXNzd29yZCA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gIGNvbnN0IHtcclxuICAgIGJvZHk6IHsgb2xkUGFzc3dvcmQsIG5ld1Bhc3N3b3JkLCBuZXdQYXNzd29yZDEgfVxyXG4gIH0gPSByZXE7XHJcbiAgdHJ5IHtcclxuICAgIGlmIChuZXdQYXNzd29yZCAhPT0gbmV3UGFzc3dvcmQxKSB7XHJcblxyXG4gICAgICAgIHJlcy5zdGF0dXMoNDAwKTtcclxuICAgICAgICByZXMucmVkaXJlY3QoYC91c2Vycy8ke3JvdXRlcy5jaGFuZ2VQYXNzd29yZH1gKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9ZWxzZXtcclxuICAgICAgICBhd2FpdCByZXEudXNlci5jaGFuZ2VQYXNzd29yZChvbGRQYXNzd29yZCwgbmV3UGFzc3dvcmQpO1xyXG4gICAgICAgIHJlcy5yZWRpcmVjdChyb3V0ZXMubWUpO1xyXG4gICAgICAgIFxyXG4gICAgfVxyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmxvZyhlcnJvcik7XHJcbiAgICByZXMuc3RhdHVzKDQwMCk7XHJcbiAgICByZXMucmVkaXJlY3QoYC91c2Vycy8ke3JvdXRlcy5jaGFuZ2VQYXNzd29yZH1gKTtcclxuICB9XHJcbn07XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "userController.js"
      ],
      "names": [
        "getJoin",
        "req",
        "res",
        "render",
        "pageTitle",
        "postJoin",
        "next",
        "body",
        "name",
        "email",
        "password",
        "password2",
        "status",
        "user",
        "User",
        "register",
        "console",
        "log",
        "redirect",
        "routes",
        "home",
        "getLogin",
        "postLogin",
        "passport",
        "authenticate",
        "failureRedirect",
        "login",
        "successRedirect",
        "githubLogin",
        "githubLoginCallback",
        "accessToken",
        "refreshToken",
        "profile",
        "cb",
        "_json",
        "id",
        "avatarUrl",
        "avatar_url",
        "findOne",
        "githubId",
        "save",
        "create",
        "newUser",
        "postGithubLogIn",
        "facebookLogin",
        "facebookLoginCallback",
        "postFacebookLogin",
        "logout",
        "getMe",
        "getEditProfile",
        "postEditProfile",
        "file",
        "findByIdAndUpdate",
        "path",
        "me",
        "params",
        "userDetail",
        "findById",
        "editProfile",
        "getChangePassword",
        "postChangePassword",
        "oldPassword",
        "newPassword",
        "newPassword1",
        "changePassword"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAEO,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAAMC,GAAN,EAAc;AACjCA,EAAAA,GAAG,CAACC,MAAJ,CAAW,MAAX,EAAkB;AAACC,IAAAA,SAAS,EAAE;AAAZ,GAAlB;AACH,CAFM;;;;AAIA,IAAMC,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAOJ,GAAP,EAAWC,GAAX,EAAeI,IAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBAGlBL,GAHkB,CAEhBM,IAFgB,EAEVC,IAFU,aAEVA,IAFU,EAELC,KAFK,aAELA,KAFK,EAECC,QAFD,aAECA,QAFD,EAEUC,SAFV,aAEUA,SAFV;;AAAA,kBAIjBD,QAAQ,KAAKC,SAJI;AAAA;AAAA;AAAA;;AAKhBT,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EALgB,CAKI;;AACpBV,YAAAA,GAAG,CAACC,MAAJ,CAAW,MAAX,EAAkB;AAACC,cAAAA,SAAS,EAAC;AAAX,aAAlB;AANgB;AAAA;;AAAA;AAAA;AAAA;AAAA,mBASO,sBAAK;AACpBI,cAAAA,IAAI,EAAJA,IADoB;AAEpBC,cAAAA,KAAK,EAALA;AAFoB,aAAL,CATP;;AAAA;AASNI,YAAAA,IATM;AAAA;AAAA,mBAaNC,iBAAKC,QAAL,CAAcF,IAAd,EAAoBH,QAApB,CAbM;;AAAA;AAcZJ,YAAAA,IAAI,GAdQ,CAcJ;;AAdI;AAAA;;AAAA;AAAA;AAAA;AAgBZU,YAAAA,OAAO,CAACC,GAAR;AACAf,YAAAA,GAAG,CAACgB,QAAJ,CAAaC,mBAAOC,IAApB,EAjBY,CAiBgB;;AAjBhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARf,QAAQ;AAAA;AAAA;AAAA,GAAd;;;;AAuBA,IAAMgB,QAAQ,GAAG,SAAXA,QAAW,CAACpB,GAAD,EAAMC,GAAN;AAAA,SACpBA,GAAG,CAACC,MAAJ,CAAW,OAAX,EAAmB;AAACC,IAAAA,SAAS,EAAE;AAAZ,GAAnB,CADoB;AAAA,CAAjB;;;;AAGA,IAAMkB,SAAS,GAAGC,qBAASC,YAAT,CAAsB,OAAtB,EAA8B;AACnDC,EAAAA,eAAe,EAAEN,mBAAOO,KAD2B;AAEnDC,EAAAA,eAAe,EAACR,mBAAOC;AAF4B,CAA9B,CAAlB,C,CAIP;;;;;AACO,IAAMQ,WAAW,GAAGL,qBAASC,YAAT,CAAsB,QAAtB,CAApB,C,CACP;;;;;AACO,IAAMK,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOC,WAAP,EAAmBC,YAAnB,EAAgCC,OAAhC,EAAwCC,EAAxC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC/B;AAD+B,6BAEoBD,OAFpB,CAEzBE,KAFyB,EAElBC,EAFkB,kBAElBA,EAFkB,EAEHC,SAFG,kBAEfC,UAFe,EAEO7B,IAFP,kBAEOA,IAFP,EAEYC,KAFZ,kBAEYA,KAFZ;AAAA;AAAA;AAAA,mBAIRK,iBAAKwB,OAAL,CAAa;AAAC7B,cAAAA,KAAK,EAALA;AAAD,aAAb,CAJQ;;AAAA;AAIrBI,YAAAA,IAJqB;;AAAA,iBAKxBA,IALwB;AAAA;AAAA;AAAA;;AAKjB;AACNA,YAAAA,IAAI,CAAC0B,QAAL,GAAgBJ,EAAhB;AACAtB,YAAAA,IAAI,CAAC2B,IAAL;AAPuB,8CAQhBP,EAAE,CAAC,IAAD,EAAOpB,IAAP,CARc;;AAAA;AAAA;AAAA,mBAUDC,iBAAK2B,MAAL,CAAY;AAC9BhC,cAAAA,KAAK,EAALA,KAD8B;AAE9BD,cAAAA,IAAI,EAAJA,IAF8B;AAG9B+B,cAAAA,QAAQ,EAAEJ,EAHoB;AAI9BC,cAAAA,SAAS,EAATA;AAJ8B,aAAZ,CAVC;;AAAA;AAUjBM,YAAAA,OAViB;AAAA,8CAgBhBT,EAAE,CAAC,IAAD,EAAMS,OAAN,CAhBc;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,8CAmBpBT,EAAE,cAnBkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAnBJ,mBAAmB;AAAA;AAAA;AAAA,GAAzB;;;;AAuBA,IAAMc,eAAe,GAAG,SAAlBA,eAAkB,CAAC1C,GAAD,EAAKC,GAAL,EAAY;AACvCA,EAAAA,GAAG,CAACgB,QAAJ,CAAaC,mBAAOC,IAApB,EADuC,CACZ;AAC9B,CAFM;;;;AAIA,IAAMwB,aAAa,GAAGrB,qBAASC,YAAT,CAAsB,UAAtB,CAAtB;;;;AAEA,IAAMqB,qBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOf,WAAP,EAAoBC,YAApB,EAAkCC,OAAlC,EAA2CC,EAA3C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,8BACFD,OADE,CACzBE,KADyB,EAClBC,EADkB,mBAClBA,EADkB,EACf3B,IADe,mBACfA,IADe,EACVC,KADU,mBACVA,KADU;AAAA;AAAA;AAAA,mBAGVK,iBAAKwB,OAAL,CAAa;AAAC7B,cAAAA,KAAK,EAALA;AAAD,aAAb,CAHU;;AAAA;AAGvBI,YAAAA,IAHuB;;AAAA,iBAI1BA,IAJ0B;AAAA;AAAA;AAAA;;AAKzBA,YAAAA,IAAI,CAACsB,EAAL,GAAQA,EAAR,CALyB,CAKb;;AACZtB,YAAAA,IAAI,CAACuB,SAAL,wCAA6CD,EAA7C;AACAtB,YAAAA,IAAI,CAAC2B,IAAL;AAPyB,8CAQlBP,EAAE,CAAC,IAAD,EAAMpB,IAAN,CARgB;;AAAA;AAAA;AAAA,mBAUHC,iBAAK2B,MAAL,CAAY;AAC9BhC,cAAAA,KAAK,EAALA,KAD8B;AAE9BD,cAAAA,IAAI,EAAJA,IAF8B;AAG9B2B,cAAAA,EAAE,EAAFA,EAH8B;AAG3B;AACHC,cAAAA,SAAS,uCAAgCD,EAAhC;AAJqB,aAAZ,CAVG;;AAAA;AAUnBO,YAAAA,OAVmB;AAAA,8CAgBlBT,EAAE,CAAC,IAAD,EAAMS,OAAN,CAhBgB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,8CAmBtBT,EAAE,cAnBoB;;AAAA;AAqBjCjB,YAAAA,OAAO,CAACC,GAAR,CAAYa,WAAZ,EAAyBC,YAAzB,EAAuCC,OAAvC,EAAgDC,EAAhD;;AArBiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAArBY,qBAAqB;AAAA;AAAA;AAAA,GAA3B;;;;AAwBA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAC7C,GAAD,EAAKC,GAAL,EAASI,IAAT,EAAgB;AAC7CJ,EAAAA,GAAG,CAACgB,QAAJ,CAAaC,mBAAOC,IAApB;AACH,CAFM;;;;AAIA,IAAM2B,MAAM,GAAG,SAATA,MAAS,CAAC9C,GAAD,EAAMC,GAAN,EAAa;AAC/BD,EAAAA,GAAG,CAAC8C,MAAJ,GAD+B,CACjB;;AACd7C,EAAAA,GAAG,CAACgB,QAAJ,CAAaC,mBAAOC,IAApB;AACH,CAHM;;;;AAKA,IAAM4B,KAAK,GAAG,SAARA,KAAQ,CAAC/C,GAAD,EAAKC,GAAL,EAASI,IAAT,EAAgB;AACjC;AACAJ,EAAAA,GAAG,CAACC,MAAJ,CAAW,YAAX,EAAyB;AAACC,IAAAA,SAAS,EAAC,aAAX;AAA0BS,IAAAA,IAAI,EAAEZ,GAAG,CAACY;AAApC,GAAzB;AACH,CAHM;;;;AAKA,IAAMoC,cAAc,GAAG,SAAjBA,cAAiB,CAAChD,GAAD,EAAMC,GAAN;AAAA,SAC1BA,GAAG,CAACC,MAAJ,CAAW,aAAX,EAAyB;AAACC,IAAAA,SAAS,EAAE;AAAZ,GAAzB,CAD0B;AAAA,CAAvB;;;;AAGA,IAAM8C,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOjD,GAAP,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBAIzBD,GAJyB,CAEvBM,IAFuB,EAEhBC,IAFgB,cAEhBA,IAFgB,EAEXC,KAFW,cAEXA,KAFW,EAGvB0C,IAHuB,GAIzBlD,GAJyB,CAGvBkD,IAHuB;AAAA;AAAA;AAAA,mBAOjBrC,iBAAKsC,iBAAL,CAAuBnD,GAAG,CAACY,IAAJ,CAASsB,EAAhC,EACN;AACI3B,cAAAA,IAAI,EAAJA,IADJ;AAEIC,cAAAA,KAAK,EAALA,KAFJ;AAGI2B,cAAAA,SAAS,EAAEe,IAAI,GAAGA,IAAI,CAACE,IAAR,GAAapD,GAAG,CAACY,IAAJ,CAASuB,SAHzC,CAGmD;;AAHnD,aADM,CAPiB;;AAAA;AAcvBlC,YAAAA,GAAG,CAACgB,QAAJ,CAAaC,mBAAOmC,EAApB;AACAtC,YAAAA,OAAO,CAACC,GAAR,CAAYhB,GAAG,CAACsD,MAAJ,CAAWpB,EAAvB;AAfuB;AAAA;;AAAA;AAAA;AAAA;AAiBvBjC,YAAAA,GAAG,CAACC,MAAJ,CAAW,aAAX,EAAyB;AAACC,cAAAA,SAAS,EAAC;AAAX,aAAzB;;AAjBuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAf8C,eAAe;AAAA;AAAA;AAAA,GAArB;;;;AAsBA,IAAMM,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOvD,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACPiC,YAAAA,EADO,GACFlC,GADE,CACfsD,MADe,CACPpB,EADO;AAAA;AAAA;AAAA,mBAGCrB,iBAAK2C,QAAL,CAActB,EAAd,CAHD;;AAAA;AAGZtB,YAAAA,IAHY;AAIlBX,YAAAA,GAAG,CAACC,MAAJ,CAAW,YAAX,EAAwB;AAACC,cAAAA,SAAS,EAAE,aAAZ;AAA2BS,cAAAA,IAAI,EAAJA;AAA3B,aAAxB;AAJkB;AAAA;;AAAA;AAAA;AAAA;AAKP;AACXX,YAAAA,GAAG,CAACgB,QAAJ,CAAaC,mBAAOuC,WAApB;;AANkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVF,UAAU;AAAA;AAAA;AAAA,GAAhB;;;;AASA,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAAC1D,GAAD,EAAMC,GAAN;AAAA,SAC/BA,GAAG,CAACC,MAAJ,CAAW,gBAAX,EAA6B;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAA7B,CAD+B;AAAA,CAA1B;;;;AAGA,IAAMwD,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAO3D,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBAG5BD,GAH4B,CAE9BM,IAF8B,EAEtBsD,WAFsB,cAEtBA,WAFsB,EAETC,WAFS,cAETA,WAFS,EAEIC,YAFJ,cAEIA,YAFJ;AAAA;;AAAA,kBAK1BD,WAAW,KAAKC,YALU;AAAA;AAAA;AAAA;;AAO1B7D,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX;AACAV,YAAAA,GAAG,CAACgB,QAAJ,kBAAuBC,mBAAO6C,cAA9B;AAR0B;;AAAA;AAAA;AAAA,mBAWpB/D,GAAG,CAACY,IAAJ,CAASmD,cAAT,CAAwBH,WAAxB,EAAqCC,WAArC,CAXoB;;AAAA;AAY1B5D,YAAAA,GAAG,CAACgB,QAAJ,CAAaC,mBAAOmC,EAApB;;AAZ0B;AAAA;AAAA;;AAAA;AAAA;AAAA;AAgB9BtC,YAAAA,OAAO,CAACC,GAAR;AACAf,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX;AACAV,YAAAA,GAAG,CAACgB,QAAJ,kBAAuBC,mBAAO6C,cAA9B;;AAlB8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAlBJ,kBAAkB;AAAA;AAAA;AAAA,GAAxB",
      "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\controllers",
      "sourcesContent": [
        "import passport from \"passport\";\r\nimport routes from \"../routes\"\r\nimport User from \"../models/User\";\r\n\r\nexport const getJoin = (req, res) => {\r\n    res.render(\"join\",{pageTitle: \"Join\"});\r\n};\r\n\r\nexport const postJoin = async (req,res,next) => {\r\n    const {\r\n        body:{name,email,password,password2}\r\n    }=req;\r\n    if(password !== password2){\r\n        res.status(400);    //비밀번호, 비밀번호 재입력 값이 다르면 400 상태코드를 반환함.\r\n        res.render(\"join\",{pageTitle:\"Join\"});\r\n    }else{\r\n        try{\r\n            const user = await User({\r\n                name,\r\n                email\r\n            });\r\n            await User.register(user, password);\r\n            next(); //미들웨어는 next()를 호출하는것으로 res로 컨트롤을 넘긴다\r\n        }catch(error){\r\n            console.log(error);\r\n            res.redirect(routes.home);  //TO DO: Register User, Log user in\r\n        }\r\n    }\r\n\r\n};\r\n\r\nexport const getLogin = (req, res) =>\r\n    res.render(\"login\",{pageTitle: \"Log In\"});\r\n\r\nexport const postLogin = passport.authenticate('local',{\r\n    failureRedirect: routes.login,\r\n    successRedirect:routes.home\r\n});\r\n//깃허브 로그인을 시도했을때 github로 보내는데 사용됨.\r\nexport const githubLogin = passport.authenticate(\"github\");\r\n//깃허브 로그인을 해서 사용자 정보를 받아왔을때 실행됨. \r\nexport const githubLoginCallback = async (accessToken,refreshToken,profile,cb)=>{\r\n    //깃허브 인증을 승인하면 깃허브에서 내 페이지로 승인을 기다리는 상태가 된다.\r\n    const{_json:{id,avatar_url: avatarUrl,name,email}}=profile;\r\n    try{\r\n        const user = await User.findOne({email}); //email로 한 개의 document를 탐색하는 MongoDB 쿼리\r\n        if(user){ //유저를 찾았으면 유저정보를 update\r\n            user.githubId = id;\r\n            user.save();\r\n            return cb(null, user); //콜백함수 호출. 쿠키에 저장.\r\n        }else{ //유저를 찾지 못했으면 새로 등록함\r\n            const newUser = await User.create({\r\n                email,\r\n                name,\r\n                githubId: id,\r\n                avatarUrl\r\n            });\r\n            return cb(null,newUser);\r\n        }\r\n    }catch(error){\r\n        return cb(error);\r\n    }\r\n};\r\n\r\nexport const postGithubLogIn = (req,res) =>{\r\n    res.redirect(routes.home); //깃허브로 로그인한후 홈으로 리다이렉트 시킴.\r\n};\r\n\r\nexport const facebookLogin = passport.authenticate(\"facebook\");\r\n\r\nexport const facebookLoginCallback = async (accessToken, refreshToken, profile, cb)=>{\r\n    const { _json:{id,name,email}}=profile;\r\n    try{\r\n        const user = await User.findOne({email});\r\n        if(user){\r\n            user.id=id; //영상에서는 facebookId를 사용.\r\n            user.avatarUrl=`https://graph.facebook.com/${id}/picture?type=large`;\r\n            user.save();\r\n            return cb(null,user);\r\n        }else{\r\n            const newUser = await User.create({\r\n                email,\r\n                name,\r\n                id,//영상에서는 facebookId를 사용.\r\n                avatarUrl: `https://graph.facebook.com/${id}/picture?type=large`\r\n            });\r\n            return cb(null,newUser);\r\n        }\r\n    }catch(error){\r\n        return cb(error);\r\n    }\r\n    console.log(accessToken, refreshToken, profile, cb);\r\n}\r\n\r\nexport const postFacebookLogin = (req,res,next)=>{\r\n    res.redirect(routes.home);\r\n}\r\n\r\nexport const logout = (req, res) =>{\r\n    req.logout(); //passport를 사용한 로그아웃.\r\n    res.redirect(routes.home);\r\n};\r\n\r\nexport const getMe = (req,res,next)=>{\r\n    //userDetail과 하는 일을 같지만 userDetail에서는 user를 DB에서 찾아야 함.\r\n    res.render(\"userDetail\", {pageTitle:\"User Detail\", user: req.user});\r\n};\r\n\r\nexport const getEditProfile = (req, res) => \r\n    res.render(\"editProfile\",{pageTitle: \"Edit Profile\"});\r\n\r\nexport const postEditProfile = async (req,res)=>{\r\n    const{\r\n        body: {name,email},\r\n        file\r\n    }=req;\r\n    try{\r\n        \r\n        await User.findByIdAndUpdate(req.user.id,\r\n        {\r\n            name,\r\n            email,\r\n            avatarUrl: file ? file.path:req.user.avatarUrl //file이 존재하면 file.path를 저장. 없으면 그대로 저장\r\n\r\n        });\r\n        res.redirect(routes.me);\r\n        console.log(req.params.id);\r\n    }catch(error){\r\n        res.render(\"editProfile\",{pageTitle:\"Edit Profile\"});\r\n    }\r\n};\r\n   \r\n\r\nexport const userDetail = async (req, res) =>{\r\n    const {params:{id}}=req;\r\n    try{\r\n        const user = await User.findById(id);\r\n        res.render(\"userDetail\",{pageTitle: \"User Detail\", user});\r\n    }catch(error){ //랜덤 id 패러미터를 입력하거나 해서 에러가 발생하면 홈으로 리다이렉트 시킴.\r\n        res.redirect(routes.editProfile);\r\n    }\r\n};\r\nexport const getChangePassword = (req, res) =>\r\n  res.render(\"changePassword\", { pageTitle: \"Change Password\" });\r\n\r\nexport const postChangePassword = async (req, res) => {\r\n  const {\r\n    body: { oldPassword, newPassword, newPassword1 }\r\n  } = req;\r\n  try {\r\n    if (newPassword !== newPassword1) {\r\n\r\n        res.status(400);\r\n        res.redirect(`/users/${routes.changePassword}`);\r\n        return;\r\n    }else{\r\n        await req.user.changePassword(oldPassword, newPassword);\r\n        res.redirect(routes.me);\r\n        \r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    res.status(400);\r\n    res.redirect(`/users/${routes.changePassword}`);\r\n  }\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578207283899
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\\\\routers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"filename\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\\\\routers\\\\videoRouter.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\routers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "filename": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\routers\\videoRouter.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\routers\\videoRouter.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\routers\\videoRouter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\routers",
        "sourceFileName": "videoRouter.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _routes = _interopRequireDefault(require(\"../routes\"));\n\nvar _videoController = require(\"../controllers/videoController\");\n\nvar _middlewares = require(\"../middlewares\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar videoRouter = _express[\"default\"].Router(); //업로도\n\n\nvideoRouter.get(_routes[\"default\"].upload, _middlewares.onlyPrivate, _videoController.getUpload);\nvideoRouter.post(_routes[\"default\"].upload, _middlewares.onlyPrivate, _middlewares.uploadVideo, _videoController.postUpload); //파일을 업로드하면 미들웨어인 uploadVideo에 의해 서버상의 폴더에 저장된. postUpload는 이 폴더안의 파일의 경로를 DB에 저장함.\n//비디오 디테일\n\nvideoRouter.get(_routes[\"default\"].videoDetail(), _videoController.videoDetail); //비디오 수정\n\nvideoRouter.get(_routes[\"default\"].editVideo(), _middlewares.onlyPrivate, _videoController.getEditVideo);\nvideoRouter.post(_routes[\"default\"].editVideo(), _middlewares.onlyPrivate, _videoController.postEditVideo); //비디오 삭제\n\nvideoRouter.get(_routes[\"default\"].deleteVideo(), _middlewares.onlyPrivate, _videoController.deleteVideo);\nvar _default = videoRouter;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZpZGVvUm91dGVyLmpzIl0sIm5hbWVzIjpbInZpZGVvUm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsImdldCIsInJvdXRlcyIsInVwbG9hZCIsIm9ubHlQcml2YXRlIiwiZ2V0VXBsb2FkIiwicG9zdCIsInVwbG9hZFZpZGVvIiwicG9zdFVwbG9hZCIsInZpZGVvRGV0YWlsIiwiZWRpdFZpZGVvIiwiZ2V0RWRpdFZpZGVvIiwicG9zdEVkaXRWaWRlbyIsImRlbGV0ZVZpZGVvIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBUUE7Ozs7QUFFQSxJQUFNQSxXQUFXLEdBQUdDLG9CQUFRQyxNQUFSLEVBQXBCLEMsQ0FFQTs7O0FBQ0FGLFdBQVcsQ0FBQ0csR0FBWixDQUFnQkMsbUJBQU9DLE1BQXZCLEVBQStCQyx3QkFBL0IsRUFBMkNDLDBCQUEzQztBQUNBUCxXQUFXLENBQUNRLElBQVosQ0FBaUJKLG1CQUFPQyxNQUF4QixFQUFnQ0Msd0JBQWhDLEVBQTRDRyx3QkFBNUMsRUFBeURDLDJCQUF6RCxFLENBQXNFO0FBRXRFOztBQUNBVixXQUFXLENBQUNHLEdBQVosQ0FBZ0JDLG1CQUFPTyxXQUFQLEVBQWhCLEVBQXNDQSw0QkFBdEMsRSxDQUVBOztBQUNBWCxXQUFXLENBQUNHLEdBQVosQ0FBZ0JDLG1CQUFPUSxTQUFQLEVBQWhCLEVBQW9DTix3QkFBcEMsRUFBZ0RPLDZCQUFoRDtBQUNBYixXQUFXLENBQUNRLElBQVosQ0FBaUJKLG1CQUFPUSxTQUFQLEVBQWpCLEVBQW9DTix3QkFBcEMsRUFBZ0RRLDhCQUFoRCxFLENBRUE7O0FBQ0FkLFdBQVcsQ0FBQ0csR0FBWixDQUFnQkMsbUJBQU9XLFdBQVAsRUFBaEIsRUFBc0NULHdCQUF0QyxFQUFrRFMsNEJBQWxEO2VBRWVmLFciLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxKdW5nIGh1IEtpbVxcRG9jdW1lbnRzXFx3ZXR1YmVcXHJvdXRlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiO1xyXG5pbXBvcnQgcm91dGVzIGZyb20gXCIuLi9yb3V0ZXNcIjtcclxuaW1wb3J0IHtcclxuICAgIGdldFVwbG9hZCxcclxuICAgIHBvc3RVcGxvYWQsXHJcbiAgICB2aWRlb0RldGFpbCxcclxuICAgIGdldEVkaXRWaWRlbyxcclxuICAgIHBvc3RFZGl0VmlkZW8sXHJcbiAgICBkZWxldGVWaWRlb1xyXG59IGZyb20gXCIuLi9jb250cm9sbGVycy92aWRlb0NvbnRyb2xsZXJcIjtcclxuaW1wb3J0IHt1cGxvYWRWaWRlbyxvbmx5UHJpdmF0ZX0gZnJvbSBcIi4uL21pZGRsZXdhcmVzXCI7XHJcblxyXG5jb25zdCB2aWRlb1JvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XHJcblxyXG4vL+yXheuhnOuPhFxyXG52aWRlb1JvdXRlci5nZXQocm91dGVzLnVwbG9hZCwgb25seVByaXZhdGUsZ2V0VXBsb2FkKTtcclxudmlkZW9Sb3V0ZXIucG9zdChyb3V0ZXMudXBsb2FkLCBvbmx5UHJpdmF0ZSx1cGxvYWRWaWRlbywgcG9zdFVwbG9hZCk7IC8v7YyM7J287J2EIOyXheuhnOuTnO2VmOuptCDrr7jrk6Tsm6jslrTsnbggdXBsb2FkVmlkZW/sl5Ag7J2Y7ZW0IOyEnOuyhOyDgeydmCDtj7TrjZTsl5Ag7KCA7J6l65CcLiBwb3N0VXBsb2Fk64qUIOydtCDtj7TrjZTslYjsnZgg7YyM7J287J2YIOqyveuhnOulvCBEQuyXkCDsoIDsnqXtlaguXHJcblxyXG4vL+u5hOuUlOyYpCDrlJTthYzsnbxcclxudmlkZW9Sb3V0ZXIuZ2V0KHJvdXRlcy52aWRlb0RldGFpbCgpLCB2aWRlb0RldGFpbCk7XHJcblxyXG4vL+u5hOuUlOyYpCDsiJjsoJVcclxudmlkZW9Sb3V0ZXIuZ2V0KHJvdXRlcy5lZGl0VmlkZW8oKSwgb25seVByaXZhdGUsZ2V0RWRpdFZpZGVvKTtcclxudmlkZW9Sb3V0ZXIucG9zdChyb3V0ZXMuZWRpdFZpZGVvKCksb25seVByaXZhdGUscG9zdEVkaXRWaWRlbyk7XHJcblxyXG4vL+u5hOuUlOyYpCDsgq3soJxcclxudmlkZW9Sb3V0ZXIuZ2V0KHJvdXRlcy5kZWxldGVWaWRlbygpLCBvbmx5UHJpdmF0ZSxkZWxldGVWaWRlbyk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCB2aWRlb1JvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "videoRouter.js"
      ],
      "names": [
        "videoRouter",
        "express",
        "Router",
        "get",
        "routes",
        "upload",
        "onlyPrivate",
        "getUpload",
        "post",
        "uploadVideo",
        "postUpload",
        "videoDetail",
        "editVideo",
        "getEditVideo",
        "postEditVideo",
        "deleteVideo"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AAQA;;;;AAEA,IAAMA,WAAW,GAAGC,oBAAQC,MAAR,EAApB,C,CAEA;;;AACAF,WAAW,CAACG,GAAZ,CAAgBC,mBAAOC,MAAvB,EAA+BC,wBAA/B,EAA2CC,0BAA3C;AACAP,WAAW,CAACQ,IAAZ,CAAiBJ,mBAAOC,MAAxB,EAAgCC,wBAAhC,EAA4CG,wBAA5C,EAAyDC,2BAAzD,E,CAAsE;AAEtE;;AACAV,WAAW,CAACG,GAAZ,CAAgBC,mBAAOO,WAAP,EAAhB,EAAsCA,4BAAtC,E,CAEA;;AACAX,WAAW,CAACG,GAAZ,CAAgBC,mBAAOQ,SAAP,EAAhB,EAAoCN,wBAApC,EAAgDO,6BAAhD;AACAb,WAAW,CAACQ,IAAZ,CAAiBJ,mBAAOQ,SAAP,EAAjB,EAAoCN,wBAApC,EAAgDQ,8BAAhD,E,CAEA;;AACAd,WAAW,CAACG,GAAZ,CAAgBC,mBAAOW,WAAP,EAAhB,EAAsCT,wBAAtC,EAAkDS,4BAAlD;eAEef,W",
      "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\routers",
      "sourcesContent": [
        "import express from \"express\";\r\nimport routes from \"../routes\";\r\nimport {\r\n    getUpload,\r\n    postUpload,\r\n    videoDetail,\r\n    getEditVideo,\r\n    postEditVideo,\r\n    deleteVideo\r\n} from \"../controllers/videoController\";\r\nimport {uploadVideo,onlyPrivate} from \"../middlewares\";\r\n\r\nconst videoRouter = express.Router();\r\n\r\n//업로도\r\nvideoRouter.get(routes.upload, onlyPrivate,getUpload);\r\nvideoRouter.post(routes.upload, onlyPrivate,uploadVideo, postUpload); //파일을 업로드하면 미들웨어인 uploadVideo에 의해 서버상의 폴더에 저장된. postUpload는 이 폴더안의 파일의 경로를 DB에 저장함.\r\n\r\n//비디오 디테일\r\nvideoRouter.get(routes.videoDetail(), videoDetail);\r\n\r\n//비디오 수정\r\nvideoRouter.get(routes.editVideo(), onlyPrivate,getEditVideo);\r\nvideoRouter.post(routes.editVideo(),onlyPrivate,postEditVideo);\r\n\r\n//비디오 삭제\r\nvideoRouter.get(routes.deleteVideo(), onlyPrivate,deleteVideo);\r\n\r\nexport default videoRouter;"
      ]
    },
    "sourceType": "script",
    "mtime": 1578192784109
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"filename\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\\\\controllers\\\\videoController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "filename": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\controllers\\videoController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\controllers\\videoController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\controllers\\videoController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\controllers",
        "sourceFileName": "videoController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deleteVideo = exports.postEditVideo = exports.getEditVideo = exports.videoDetail = exports.postUpload = exports.getUpload = exports.search = exports.home = void 0;\n\nvar _routes = _interopRequireDefault(require(\"../routes\"));\n\nvar _Video = _interopRequireDefault(require(\"../models/Video\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar home =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    var videos;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _Video[\"default\"].find({}).sort({\n              _id: -1\n            });\n\n          case 3:\n            videos = _context.sent;\n            //-1은 위 아래 순서를 뒤바꾸겠다는 뜻.\n            res.render(\"home\", {\n              pageTitle: \"Home\",\n              videos: videos\n            });\n            _context.next = 11;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n            res.render(\"home\", {\n              pageTitle: \"Home\",\n              videos: []\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n\n  return function home(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.home = home;\n\nvar search =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    var searchingBy, videos;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            searchingBy = req.query.term; //const searchingBy = req.query.term; 과 같다.\n\n            videos = [];\n            _context2.prev = 2;\n            _context2.next = 5;\n            return _Video[\"default\"].find({\n              title: {\n                $regex: searchingBy,\n                $options: \"i\"\n              }\n            });\n\n          case 5:\n            videos = _context2.sent;\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](2);\n            console.log(_context2.t0);\n\n          case 11:\n            res.render(\"search\", {\n              pageTitle: \"Search\",\n              searchingBy: searchingBy,\n              videos: videos\n            }); //검색으로 해당하는 영상을 찾지 못한 경우는 videos는 빈 배열 상태를 갖는다.\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 8]]);\n  }));\n\n  return function search(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.search = search;\n\nvar getUpload = function getUpload(req, res) {\n  return res.render(\"upload\", {\n    pageTitle: \"Upload\"\n  });\n};\n\nexports.getUpload = getUpload;\n\nvar postUpload =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(req, res) {\n    var _req$body, title, description, path, newVideo;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _req$body = req.body, title = _req$body.title, description = _req$body.description, path = req.file.path;\n            _context3.next = 3;\n            return _Video[\"default\"].create({\n              fileUrl: path,\n              title: title,\n              description: description\n            });\n\n          case 3:\n            newVideo = _context3.sent;\n            console.log(newVideo); //TO DO: upload and save video\n\n            res.redirect(_routes[\"default\"].videoDetail(newVideo.id));\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function postUpload(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexports.postUpload = postUpload;\n\nvar videoDetail =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(req, res) {\n    var id, video;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            id = req.params.id;\n            _context4.prev = 1;\n            _context4.next = 4;\n            return _Video[\"default\"].findById(id);\n\n          case 4:\n            video = _context4.sent;\n            res.render(\"videoDetail\", {\n              pageTitle: video.title,\n              video: video\n            });\n            _context4.next = 12;\n            break;\n\n          case 8:\n            _context4.prev = 8;\n            _context4.t0 = _context4[\"catch\"](1);\n            console.log(_context4.t0);\n            res.redirect(_routes[\"default\"].home);\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[1, 8]]);\n  }));\n\n  return function videoDetail(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nexports.videoDetail = videoDetail;\n\nvar getEditVideo =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(req, res) {\n    var id, video;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            id = req.params.id;\n            _context5.prev = 1;\n            _context5.next = 4;\n            return _Video[\"default\"].findById(id);\n\n          case 4:\n            video = _context5.sent;\n            res.render(\"editVideo\", {\n              pageTitle: \"Edit \".concat(video.title),\n              video: video\n            });\n            _context5.next = 11;\n            break;\n\n          case 8:\n            _context5.prev = 8;\n            _context5.t0 = _context5[\"catch\"](1);\n            res.redirect(_routes[\"default\"].home);\n\n          case 11:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[1, 8]]);\n  }));\n\n  return function getEditVideo(_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nexports.getEditVideo = getEditVideo;\n\nvar postEditVideo =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6(req, res) {\n    var id, _req$body2, title, description;\n\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            id = req.params.id, _req$body2 = req.body, title = _req$body2.title, description = _req$body2.description;\n            _context6.prev = 1;\n            _context6.next = 4;\n            return _Video[\"default\"].findOneAndUpdate({\n              _id: id\n            }, {\n              title: title,\n              description: description\n            });\n\n          case 4:\n            //동일한 id를 가진 document를 찾아서 update 수행\n            res.redirect(_routes[\"default\"].videoDetail(id));\n            _context6.next = 10;\n            break;\n\n          case 7:\n            _context6.prev = 7;\n            _context6.t0 = _context6[\"catch\"](1);\n            res.redirect(_routes[\"default\"].home); //에러가 발생하면 홈으로 리다이렉트 함.\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[1, 7]]);\n  }));\n\n  return function postEditVideo(_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nexports.postEditVideo = postEditVideo;\n\nvar deleteVideo =\n/*#__PURE__*/\nfunction () {\n  var _ref7 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee7(req, res) {\n    var id;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            id = req.params.id;\n            _context7.prev = 1;\n            _context7.next = 4;\n            return _Video[\"default\"].findOneAndRemove({\n              _id: id\n            });\n\n          case 4:\n            _context7.next = 9;\n            break;\n\n          case 6:\n            _context7.prev = 6;\n            _context7.t0 = _context7[\"catch\"](1);\n            console.log(_context7.t0);\n\n          case 9:\n            res.redirect(_routes[\"default\"].home);\n\n          case 10:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[1, 6]]);\n  }));\n\n  return function deleteVideo(_x13, _x14) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nexports.deleteVideo = deleteVideo;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "videoController.js"
      ],
      "names": [
        "home",
        "req",
        "res",
        "Video",
        "find",
        "sort",
        "_id",
        "videos",
        "render",
        "pageTitle",
        "console",
        "log",
        "search",
        "searchingBy",
        "query",
        "term",
        "title",
        "$regex",
        "$options",
        "getUpload",
        "postUpload",
        "body",
        "description",
        "path",
        "file",
        "create",
        "fileUrl",
        "newVideo",
        "redirect",
        "routes",
        "videoDetail",
        "id",
        "params",
        "findById",
        "video",
        "getEditVideo",
        "postEditVideo",
        "findOneAndUpdate",
        "deleteVideo",
        "findOneAndRemove"
      ],
      "mappings": ";;;;;;;AACA;;AACA;;;;;;;;AAEO,IAAMA,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAOC,GAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAESC,kBAAMC,IAAN,CAAW,EAAX,EAAeC,IAAf,CAAoB;AAACC,cAAAA,GAAG,EAAE,CAAC;AAAP,aAApB,CAFT;;AAAA;AAENC,YAAAA,MAFM;AAEyC;AACrDL,YAAAA,GAAG,CAACM,MAAJ,CAAW,MAAX,EAAkB;AAACC,cAAAA,SAAS,EAAC,MAAX;AAAmBF,cAAAA,MAAM,EAANA;AAAnB,aAAlB;AAHY;AAAA;;AAAA;AAAA;AAAA;AAKZG,YAAAA,OAAO,CAACC,GAAR;AACAT,YAAAA,GAAG,CAACM,MAAJ,CAAW,MAAX,EAAmB;AAACC,cAAAA,SAAS,EAAC,MAAX;AAAkBF,cAAAA,MAAM,EAAC;AAAzB,aAAnB;;AANY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAJP,IAAI;AAAA;AAAA;AAAA,GAAV;;;;AASA,IAAMY,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOX,GAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAEDW,YAAAA,WAFC,GAGdZ,GAHc,CAEda,KAFc,CAEPC,IAFO,EAIlB;;AACIR,YAAAA,MALc,GAKL,EALK;AAAA;AAAA;AAAA,mBAOCJ,kBAAMC,IAAN,CAAW;AAACY,cAAAA,KAAK,EAAC;AAACC,gBAAAA,MAAM,EAAEJ,WAAT;AAAsBK,gBAAAA,QAAQ,EAAE;AAAhC;AAAP,aAAX,CAPD;;AAAA;AAOdX,YAAAA,MAPc;AAAA;AAAA;;AAAA;AAAA;AAAA;AASdG,YAAAA,OAAO,CAACC,GAAR;;AATc;AAWlBT,YAAAA,GAAG,CAACM,MAAJ,CAAW,QAAX,EAAoB;AAACC,cAAAA,SAAS,EAAC,QAAX;AAAqBI,cAAAA,WAAW,EAAXA,WAArB;AAAiCN,cAAAA,MAAM,EAANA;AAAjC,aAApB,EAXkB,CAW8C;;AAX9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANK,MAAM;AAAA;AAAA;AAAA,GAAZ;;;;AAaA,IAAMO,SAAS,GAAG,SAAZA,SAAY,CAAClB,GAAD,EAAKC,GAAL;AAAA,SACrBA,GAAG,CAACM,MAAJ,CAAW,QAAX,EAAoB;AAACC,IAAAA,SAAS,EAAC;AAAX,GAApB,CADqB;AAAA,CAAlB;;;;AAGA,IAAMW,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOnB,GAAP,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIlBD,GAJkB,CAElBoB,IAFkB,EAEZL,KAFY,aAEZA,KAFY,EAENM,WAFM,aAENA,WAFM,EAGZC,IAHY,GAIlBtB,GAJkB,CAGlBuB,IAHkB,CAGZD,IAHY;AAAA;AAAA,mBAKCpB,kBAAMsB,MAAN,CAAa;AAChCC,cAAAA,OAAO,EAAEH,IADuB;AAEhCP,cAAAA,KAAK,EAALA,KAFgC;AAGhCM,cAAAA,WAAW,EAAXA;AAHgC,aAAb,CALD;;AAAA;AAKhBK,YAAAA,QALgB;AAUtBjB,YAAAA,OAAO,CAACC,GAAR,CAAYgB,QAAZ,EAVsB,CAWtB;;AACAzB,YAAAA,GAAG,CAAC0B,QAAJ,CAAaC,mBAAOC,WAAP,CAAmBH,QAAQ,CAACI,EAA5B,CAAb;;AAZsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVX,UAAU;AAAA;AAAA;AAAA,GAAhB;;;;AAgBA,IAAMU,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAO7B,GAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAEV6B,YAAAA,EAFU,GAGnB9B,GAHmB,CAEnB+B,MAFmB,CAEVD,EAFU;AAAA;AAAA;AAAA,mBAKC5B,kBAAM8B,QAAN,CAAeF,EAAf,CALD;;AAAA;AAKbG,YAAAA,KALa;AAMnBhC,YAAAA,GAAG,CAACM,MAAJ,CAAW,aAAX,EAAyB;AAACC,cAAAA,SAAS,EAAEyB,KAAK,CAAClB,KAAlB;AAAyBkB,cAAAA,KAAK,EAALA;AAAzB,aAAzB;AANmB;AAAA;;AAAA;AAAA;AAAA;AAQnBxB,YAAAA,OAAO,CAACC,GAAR;AACAT,YAAAA,GAAG,CAAC0B,QAAJ,CAAaC,mBAAO7B,IAApB;;AATmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAX8B,WAAW;AAAA;AAAA;AAAA,GAAjB;;;;AAYA,IAAMK,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOlC,GAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAEZ6B,YAAAA,EAFY,GAGpB9B,GAHoB,CAEpB+B,MAFoB,CAEZD,EAFY;AAAA;AAAA;AAAA,mBAKA5B,kBAAM8B,QAAN,CAAeF,EAAf,CALA;;AAAA;AAKdG,YAAAA,KALc;AAMpBhC,YAAAA,GAAG,CAACM,MAAJ,CAAW,WAAX,EAAuB;AAACC,cAAAA,SAAS,iBAAUyB,KAAK,CAAClB,KAAhB,CAAV;AAAmCkB,cAAAA,KAAK,EAALA;AAAnC,aAAvB;AANoB;AAAA;;AAAA;AAAA;AAAA;AAQpBhC,YAAAA,GAAG,CAAC0B,QAAJ,CAAaC,mBAAO7B,IAApB;;AARoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZmC,YAAY;AAAA;AAAA;AAAA,GAAlB;;;;AAaA,IAAMC,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOnC,GAAP,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEb6B,YAAAA,EAFa,GAIrB9B,GAJqB,CAErB+B,MAFqB,CAEbD,EAFa,eAIrB9B,GAJqB,CAGrBoB,IAHqB,EAGfL,KAHe,cAGfA,KAHe,EAGRM,WAHQ,cAGRA,WAHQ;AAAA;AAAA;AAAA,mBAMfnB,kBAAMkC,gBAAN,CAAuB;AAAC/B,cAAAA,GAAG,EAACyB;AAAL,aAAvB,EAAgC;AAACf,cAAAA,KAAK,EAALA,KAAD;AAAOM,cAAAA,WAAW,EAAXA;AAAP,aAAhC,CANe;;AAAA;AAMuC;AAC5DpB,YAAAA,GAAG,CAAC0B,QAAJ,CAAaC,mBAAOC,WAAP,CAAmBC,EAAnB,CAAb;AAPqB;AAAA;;AAAA;AAAA;AAAA;AASrB7B,YAAAA,GAAG,CAAC0B,QAAJ,CAAaC,mBAAO7B,IAApB,EATqB,CASM;;AATN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAboC,aAAa;AAAA;AAAA;AAAA,GAAnB;;;;AAYA,IAAME,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOrC,GAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAEX6B,YAAAA,EAFW,GAGrB9B,GAHqB,CAEnB+B,MAFmB,CAEXD,EAFW;AAAA;AAAA;AAAA,mBAKb5B,kBAAMoC,gBAAN,CAAuB;AAACjC,cAAAA,GAAG,EAACyB;AAAL,aAAvB,CALa;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOnBrB,YAAAA,OAAO,CAACC,GAAR;;AAPmB;AASvBT,YAAAA,GAAG,CAAC0B,QAAJ,CAAaC,mBAAO7B,IAApB;;AATuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXsC,WAAW;AAAA;AAAA;AAAA,GAAjB",
      "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\controllers",
      "sourcesContent": [
        "//import {videos} from \"../db\"\r\nimport routes from \"../routes\"\r\nimport Video from \"../models/Video\"\r\n\r\nexport const home = async (req,res)=>{\r\n    try{\r\n        const videos = await Video.find({}).sort({_id: -1}); //-1은 위 아래 순서를 뒤바꾸겠다는 뜻.\r\n        res.render(\"home\",{pageTitle:\"Home\", videos});\r\n    }catch(error){\r\n        console.log(error);\r\n        res.render(\"home\", {pageTitle:\"Home\",videos:[]});\r\n    }\r\n}\r\nexport const search = async (req,res)=>{\r\n    const {\r\n        query:{term: searchingBy}\r\n    } = req;\r\n    //const searchingBy = req.query.term; 과 같다.\r\n    let videos = [];\r\n    try{\r\n        videos = await Video.find({title:{$regex: searchingBy, $options: \"i\"}});    //option : i 는 대소문자를 구분하지 않겠다는 뜻임. regex는 해당 문자열이 포함되어있는지 체크해줌.\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n    res.render(\"search\",{pageTitle:\"Search\", searchingBy,videos});  //검색으로 해당하는 영상을 찾지 못한 경우는 videos는 빈 배열 상태를 갖는다.\r\n}\r\nexport const getUpload = (req,res)=>\r\n    res.render(\"upload\",{pageTitle:\"Upload\"});\r\n\r\nexport const postUpload = async (req,res)=> {\r\n    const{\r\n        body:{title,description},\r\n        file:{path}\r\n    } = req;\r\n    const newVideo = await Video.create({\r\n        fileUrl: path,\r\n        title,\r\n        description\r\n    });\r\n    console.log(newVideo);\r\n    //TO DO: upload and save video\r\n    res.redirect(routes.videoDetail(newVideo.id));\r\n};\r\n\r\n\r\nexport const videoDetail = async (req,res)=>{\r\n    const {\r\n        params: {id}\r\n    } = req;\r\n    try{\r\n        const video = await Video.findById(id);\r\n        res.render(\"videoDetail\",{pageTitle: video.title, video});\r\n    }catch(error){\r\n        console.log(error);\r\n        res.redirect(routes.home);\r\n    }\r\n};\r\nexport const getEditVideo = async (req,res)=>{\r\n    const{\r\n        params:{id}\r\n    } = req;\r\n    try{\r\n        const video = await Video.findById(id);\r\n        res.render(\"editVideo\",{pageTitle: `Edit ${video.title}`, video});\r\n    }catch(error){\r\n        res.redirect(routes.home);\r\n    }\r\n}\r\n\r\n\r\nexport const postEditVideo = async (req,res) => {\r\n    const {\r\n        params:{id},\r\n        body:{title, description}\r\n    } = req;\r\n    try{\r\n        await Video.findOneAndUpdate({_id:id},{title,description}); //동일한 id를 가진 document를 찾아서 update 수행\r\n        res.redirect(routes.videoDetail(id));\r\n    }catch(error){\r\n        res.redirect(routes.home); //에러가 발생하면 홈으로 리다이렉트 함.\r\n    }\r\n};\r\nexport const deleteVideo = async (req,res)=> {\r\n    const {\r\n        params:{id}\r\n    }=req;\r\n    try{\r\n        await Video.findOneAndRemove({_id:id}); //동일한 id를 가진 document를 찾아서 delete 수행\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n    res.redirect(routes.home);\r\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1578137156495
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\\\\routers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"filename\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\\\\routers\\\\globalRouter.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\routers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "filename": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\routers\\globalRouter.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\routers\\globalRouter.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\routers\\globalRouter.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\routers",
        "sourceFileName": "globalRouter.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _routes = _interopRequireDefault(require(\"../routes\"));\n\nvar _passport = _interopRequireDefault(require(\"passport\"));\n\nvar _videoController = require(\"../controllers/videoController\");\n\nvar _userController = require(\"../controllers/userController\");\n\nvar _middlewares = require(\"../middlewares\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar globalRouter = _express[\"default\"].Router();\n\nglobalRouter.get(_routes[\"default\"].join, _middlewares.onlyPublic, _userController.getJoin);\nglobalRouter.post(_routes[\"default\"].join, _middlewares.onlyPublic, _userController.postJoin, _userController.postLogin); //postJoin에서 입력된 아이디 비밀번호는 next()호출로 postLogin으로 값을 넘겨줌.\n\nglobalRouter.get(_routes[\"default\"].login, _middlewares.onlyPublic, _userController.getLogin);\nglobalRouter.post(_routes[\"default\"].login, _middlewares.onlyPublic, _userController.postLogin);\nglobalRouter.get(_routes[\"default\"].home, _videoController.home);\nglobalRouter.get(_routes[\"default\"].search, _videoController.search);\nglobalRouter.get(_routes[\"default\"].logout, _middlewares.onlyPrivate, _userController.logout);\nglobalRouter.get(_routes[\"default\"].gitHub, _userController.githubLogin); // \"/auth/github\"로 들어가면 githubLogin을 써서 인증함.\n\nglobalRouter.get(_routes[\"default\"].githubCallback, _passport[\"default\"].authenticate(\"github\", {\n  failureRedirect: \"/login\"\n}), //인증에 실패하면 /login 페이지로 리다이렉트 된다.\n_userController.postGithubLogIn);\nglobalRouter.get(_routes[\"default\"].me, _userController.getMe);\nglobalRouter.get(_routes[\"default\"].facebook, _userController.facebookLogin);\nglobalRouter.get(_routes[\"default\"].facebookCallback, _passport[\"default\"].authenticate(\"facebook\", {\n  failureRedirect: \"/login\"\n}), _userController.postFacebookLogin);\nvar _default = globalRouter;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdsb2JhbFJvdXRlci5qcyJdLCJuYW1lcyI6WyJnbG9iYWxSb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIiwiZ2V0Iiwicm91dGVzIiwiam9pbiIsIm9ubHlQdWJsaWMiLCJnZXRKb2luIiwicG9zdCIsInBvc3RKb2luIiwicG9zdExvZ2luIiwibG9naW4iLCJnZXRMb2dpbiIsImhvbWUiLCJzZWFyY2giLCJsb2dvdXQiLCJvbmx5UHJpdmF0ZSIsImdpdEh1YiIsImdpdGh1YkxvZ2luIiwiZ2l0aHViQ2FsbGJhY2siLCJwYXNzcG9ydCIsImF1dGhlbnRpY2F0ZSIsImZhaWx1cmVSZWRpcmVjdCIsInBvc3RHaXRodWJMb2dJbiIsIm1lIiwiZ2V0TWUiLCJmYWNlYm9vayIsImZhY2Vib29rTG9naW4iLCJmYWNlYm9va0NhbGxiYWNrIiwicG9zdEZhY2Vib29rTG9naW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUNBLElBQU1BLFlBQVksR0FBR0Msb0JBQVFDLE1BQVIsRUFBckI7O0FBRUFGLFlBQVksQ0FBQ0csR0FBYixDQUFpQkMsbUJBQU9DLElBQXhCLEVBQTZCQyx1QkFBN0IsRUFBd0NDLHVCQUF4QztBQUNBUCxZQUFZLENBQUNRLElBQWIsQ0FBa0JKLG1CQUFPQyxJQUF6QixFQUE4QkMsdUJBQTlCLEVBQXlDRyx3QkFBekMsRUFBa0RDLHlCQUFsRCxFLENBQ0E7O0FBRUFWLFlBQVksQ0FBQ0csR0FBYixDQUFpQkMsbUJBQU9PLEtBQXhCLEVBQThCTCx1QkFBOUIsRUFBeUNNLHdCQUF6QztBQUNBWixZQUFZLENBQUNRLElBQWIsQ0FBa0JKLG1CQUFPTyxLQUF6QixFQUErQkwsdUJBQS9CLEVBQTBDSSx5QkFBMUM7QUFHQVYsWUFBWSxDQUFDRyxHQUFiLENBQWlCQyxtQkFBT1MsSUFBeEIsRUFBNkJBLHFCQUE3QjtBQUNBYixZQUFZLENBQUNHLEdBQWIsQ0FBaUJDLG1CQUFPVSxNQUF4QixFQUErQkEsdUJBQS9CO0FBQ0FkLFlBQVksQ0FBQ0csR0FBYixDQUFpQkMsbUJBQU9XLE1BQXhCLEVBQStCQyx3QkFBL0IsRUFBMkNELHNCQUEzQztBQUVBZixZQUFZLENBQUNHLEdBQWIsQ0FBaUJDLG1CQUFPYSxNQUF4QixFQUErQkMsMkJBQS9CLEUsQ0FBNkM7O0FBRTdDbEIsWUFBWSxDQUFDRyxHQUFiLENBQ0lDLG1CQUFPZSxjQURYLEVBRUlDLHFCQUFTQyxZQUFULENBQXNCLFFBQXRCLEVBQStCO0FBQUNDLEVBQUFBLGVBQWUsRUFBQztBQUFqQixDQUEvQixDQUZKLEVBRWdFO0FBQzVEQywrQkFISjtBQU1BdkIsWUFBWSxDQUFDRyxHQUFiLENBQWlCQyxtQkFBT29CLEVBQXhCLEVBQTJCQyxxQkFBM0I7QUFFQXpCLFlBQVksQ0FBQ0csR0FBYixDQUFpQkMsbUJBQU9zQixRQUF4QixFQUFrQ0MsNkJBQWxDO0FBQ0EzQixZQUFZLENBQUNHLEdBQWIsQ0FDSUMsbUJBQU93QixnQkFEWCxFQUVJUixxQkFBU0MsWUFBVCxDQUFzQixVQUF0QixFQUFpQztBQUFDQyxFQUFBQSxlQUFlLEVBQUM7QUFBakIsQ0FBakMsQ0FGSixFQUdJTyxpQ0FISjtlQUtlN0IsWSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEp1bmcgaHUgS2ltXFxEb2N1bWVudHNcXHdldHViZVxccm91dGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XHJcbmltcG9ydCByb3V0ZXMgZnJvbSBcIi4uL3JvdXRlc1wiO1xyXG5pbXBvcnQgcGFzc3BvcnQgZnJvbSBcInBhc3Nwb3J0XCI7XHJcbmltcG9ydCB7aG9tZSxzZWFyY2h9IGZyb20gXCIuLi9jb250cm9sbGVycy92aWRlb0NvbnRyb2xsZXJcIjtcclxuaW1wb3J0IHtnZXRKb2luLHBvc3RKb2luLGdldExvZ2luLHBvc3RMb2dpbixnaXRodWJMb2dpbixwb3N0R2l0aHViTG9nSW4sbG9nb3V0LGdldE1lLCBmYWNlYm9va0xvZ2luLCBwb3N0RmFjZWJvb2tMb2dpbn0gZnJvbSBcIi4uL2NvbnRyb2xsZXJzL3VzZXJDb250cm9sbGVyXCI7XHJcbmltcG9ydCB7b25seVB1YmxpYyxvbmx5UHJpdmF0ZX0gZnJvbSBcIi4uL21pZGRsZXdhcmVzXCI7XHJcbmNvbnN0IGdsb2JhbFJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XHJcblxyXG5nbG9iYWxSb3V0ZXIuZ2V0KHJvdXRlcy5qb2luLG9ubHlQdWJsaWMsZ2V0Sm9pbik7XHJcbmdsb2JhbFJvdXRlci5wb3N0KHJvdXRlcy5qb2luLG9ubHlQdWJsaWMscG9zdEpvaW4scG9zdExvZ2luKTtcclxuLy9wb3N0Sm9pbuyXkOyEnCDsnoXroKXrkJwg7JWE7J2065SUIOu5hOuwgOuyiO2YuOuKlCBuZXh0KCntmLjstpzroZwgcG9zdExvZ2lu7Jy866GcIOqwkuydhCDrhJjqsqjspIwuXHJcblxyXG5nbG9iYWxSb3V0ZXIuZ2V0KHJvdXRlcy5sb2dpbixvbmx5UHVibGljLGdldExvZ2luKTtcclxuZ2xvYmFsUm91dGVyLnBvc3Qocm91dGVzLmxvZ2luLG9ubHlQdWJsaWMscG9zdExvZ2luKTtcclxuXHJcblxyXG5nbG9iYWxSb3V0ZXIuZ2V0KHJvdXRlcy5ob21lLGhvbWUpO1xyXG5nbG9iYWxSb3V0ZXIuZ2V0KHJvdXRlcy5zZWFyY2gsc2VhcmNoKTtcclxuZ2xvYmFsUm91dGVyLmdldChyb3V0ZXMubG9nb3V0LG9ubHlQcml2YXRlLGxvZ291dCk7XHJcblxyXG5nbG9iYWxSb3V0ZXIuZ2V0KHJvdXRlcy5naXRIdWIsZ2l0aHViTG9naW4pOyAvLyBcIi9hdXRoL2dpdGh1Ylwi66GcIOuTpOyWtOqwgOuptCBnaXRodWJMb2dpbuydhCDsjajshJwg7J247Kad7ZWoLlxyXG5cclxuZ2xvYmFsUm91dGVyLmdldChcclxuICAgIHJvdXRlcy5naXRodWJDYWxsYmFjayxcclxuICAgIHBhc3Nwb3J0LmF1dGhlbnRpY2F0ZShcImdpdGh1YlwiLHtmYWlsdXJlUmVkaXJlY3Q6XCIvbG9naW5cIn0pLCAvL+yduOymneyXkCDsi6TtjKjtlZjrqbQgL2xvZ2luIO2OmOydtOyngOuhnCDrpqzri6TsnbTroIntirgg65Cc64ukLlxyXG4gICAgcG9zdEdpdGh1YkxvZ0luXHJcbik7XHJcblxyXG5nbG9iYWxSb3V0ZXIuZ2V0KHJvdXRlcy5tZSxnZXRNZSk7XHJcblxyXG5nbG9iYWxSb3V0ZXIuZ2V0KHJvdXRlcy5mYWNlYm9vaywgZmFjZWJvb2tMb2dpbik7XHJcbmdsb2JhbFJvdXRlci5nZXQoXHJcbiAgICByb3V0ZXMuZmFjZWJvb2tDYWxsYmFjayxcclxuICAgIHBhc3Nwb3J0LmF1dGhlbnRpY2F0ZShcImZhY2Vib29rXCIse2ZhaWx1cmVSZWRpcmVjdDpcIi9sb2dpblwifSksXHJcbiAgICBwb3N0RmFjZWJvb2tMb2dpblxyXG4pO1xyXG5leHBvcnQgZGVmYXVsdCBnbG9iYWxSb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "globalRouter.js"
      ],
      "names": [
        "globalRouter",
        "express",
        "Router",
        "get",
        "routes",
        "join",
        "onlyPublic",
        "getJoin",
        "post",
        "postJoin",
        "postLogin",
        "login",
        "getLogin",
        "home",
        "search",
        "logout",
        "onlyPrivate",
        "gitHub",
        "githubLogin",
        "githubCallback",
        "passport",
        "authenticate",
        "failureRedirect",
        "postGithubLogIn",
        "me",
        "getMe",
        "facebook",
        "facebookLogin",
        "facebookCallback",
        "postFacebookLogin"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACA,IAAMA,YAAY,GAAGC,oBAAQC,MAAR,EAArB;;AAEAF,YAAY,CAACG,GAAb,CAAiBC,mBAAOC,IAAxB,EAA6BC,uBAA7B,EAAwCC,uBAAxC;AACAP,YAAY,CAACQ,IAAb,CAAkBJ,mBAAOC,IAAzB,EAA8BC,uBAA9B,EAAyCG,wBAAzC,EAAkDC,yBAAlD,E,CACA;;AAEAV,YAAY,CAACG,GAAb,CAAiBC,mBAAOO,KAAxB,EAA8BL,uBAA9B,EAAyCM,wBAAzC;AACAZ,YAAY,CAACQ,IAAb,CAAkBJ,mBAAOO,KAAzB,EAA+BL,uBAA/B,EAA0CI,yBAA1C;AAGAV,YAAY,CAACG,GAAb,CAAiBC,mBAAOS,IAAxB,EAA6BA,qBAA7B;AACAb,YAAY,CAACG,GAAb,CAAiBC,mBAAOU,MAAxB,EAA+BA,uBAA/B;AACAd,YAAY,CAACG,GAAb,CAAiBC,mBAAOW,MAAxB,EAA+BC,wBAA/B,EAA2CD,sBAA3C;AAEAf,YAAY,CAACG,GAAb,CAAiBC,mBAAOa,MAAxB,EAA+BC,2BAA/B,E,CAA6C;;AAE7ClB,YAAY,CAACG,GAAb,CACIC,mBAAOe,cADX,EAEIC,qBAASC,YAAT,CAAsB,QAAtB,EAA+B;AAACC,EAAAA,eAAe,EAAC;AAAjB,CAA/B,CAFJ,EAEgE;AAC5DC,+BAHJ;AAMAvB,YAAY,CAACG,GAAb,CAAiBC,mBAAOoB,EAAxB,EAA2BC,qBAA3B;AAEAzB,YAAY,CAACG,GAAb,CAAiBC,mBAAOsB,QAAxB,EAAkCC,6BAAlC;AACA3B,YAAY,CAACG,GAAb,CACIC,mBAAOwB,gBADX,EAEIR,qBAASC,YAAT,CAAsB,UAAtB,EAAiC;AAACC,EAAAA,eAAe,EAAC;AAAjB,CAAjC,CAFJ,EAGIO,iCAHJ;eAKe7B,Y",
      "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\routers",
      "sourcesContent": [
        "import express from \"express\";\r\nimport routes from \"../routes\";\r\nimport passport from \"passport\";\r\nimport {home,search} from \"../controllers/videoController\";\r\nimport {getJoin,postJoin,getLogin,postLogin,githubLogin,postGithubLogIn,logout,getMe, facebookLogin, postFacebookLogin} from \"../controllers/userController\";\r\nimport {onlyPublic,onlyPrivate} from \"../middlewares\";\r\nconst globalRouter = express.Router();\r\n\r\nglobalRouter.get(routes.join,onlyPublic,getJoin);\r\nglobalRouter.post(routes.join,onlyPublic,postJoin,postLogin);\r\n//postJoin에서 입력된 아이디 비밀번호는 next()호출로 postLogin으로 값을 넘겨줌.\r\n\r\nglobalRouter.get(routes.login,onlyPublic,getLogin);\r\nglobalRouter.post(routes.login,onlyPublic,postLogin);\r\n\r\n\r\nglobalRouter.get(routes.home,home);\r\nglobalRouter.get(routes.search,search);\r\nglobalRouter.get(routes.logout,onlyPrivate,logout);\r\n\r\nglobalRouter.get(routes.gitHub,githubLogin); // \"/auth/github\"로 들어가면 githubLogin을 써서 인증함.\r\n\r\nglobalRouter.get(\r\n    routes.githubCallback,\r\n    passport.authenticate(\"github\",{failureRedirect:\"/login\"}), //인증에 실패하면 /login 페이지로 리다이렉트 된다.\r\n    postGithubLogIn\r\n);\r\n\r\nglobalRouter.get(routes.me,getMe);\r\n\r\nglobalRouter.get(routes.facebook, facebookLogin);\r\nglobalRouter.get(\r\n    routes.facebookCallback,\r\n    passport.authenticate(\"facebook\",{failureRedirect:\"/login\"}),\r\n    postFacebookLogin\r\n);\r\nexport default globalRouter;"
      ]
    },
    "sourceType": "script",
    "mtime": 1578195073418
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"filename\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\\\\middlewares.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "filename": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\middlewares.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\middlewares.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\middlewares.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
        "sourceFileName": "middlewares.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.uploadAvatar = exports.uploadVideo = exports.onlyPrivate = exports.onlyPublic = exports.localsMiddleware = void 0;\n\nvar _multer = _interopRequireDefault(require(\"multer\"));\n\nvar _routes = _interopRequireDefault(require(\"./routes\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar multerVideo = (0, _multer[\"default\"])({\n  dest: \"uploads/videos/\"\n});\nvar multerAvatar = (0, _multer[\"default\"])({\n  dest: \"uploads/avatars/\"\n});\n\nvar localsMiddleware = function localsMiddleware(req, res, next) {\n  res.locals.siteName = \"WeTube\";\n  res.locals.routes = _routes[\"default\"];\n  res.locals.loggedUser = req.user || null; //유저가 존재하지 않으면 빈 object를 줌.\n\n  next();\n}; //로그인 되어있는 상태에서 /login페이지에 다시 접근하는 것을 막아주는 미들웨어.\n\n\nexports.localsMiddleware = localsMiddleware;\n\nvar onlyPublic = function onlyPublic(req, res, next) {\n  if (req.user) {\n    res.redirect(_routes[\"default\"].home);\n  } else {\n    next();\n  }\n}; //로그인되어 있는 상태만 이용가능하게 하는 미들웨어.\n\n\nexports.onlyPublic = onlyPublic;\n\nvar onlyPrivate = function onlyPrivate(req, res, next) {\n  if (req.user) {\n    next();\n  } else {\n    res.redirect(_routes[\"default\"].home);\n  }\n};\n\nexports.onlyPrivate = onlyPrivate;\nvar uploadVideo = multerVideo.single(\"videoFile\");\nexports.uploadVideo = uploadVideo;\nvar uploadAvatar = multerAvatar.single(\"avatar\");\nexports.uploadAvatar = uploadAvatar;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1pZGRsZXdhcmVzLmpzIl0sIm5hbWVzIjpbIm11bHRlclZpZGVvIiwiZGVzdCIsIm11bHRlckF2YXRhciIsImxvY2Fsc01pZGRsZXdhcmUiLCJyZXEiLCJyZXMiLCJuZXh0IiwibG9jYWxzIiwic2l0ZU5hbWUiLCJyb3V0ZXMiLCJsb2dnZWRVc2VyIiwidXNlciIsIm9ubHlQdWJsaWMiLCJyZWRpcmVjdCIsImhvbWUiLCJvbmx5UHJpdmF0ZSIsInVwbG9hZFZpZGVvIiwic2luZ2xlIiwidXBsb2FkQXZhdGFyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxXQUFXLEdBQUcsd0JBQU87QUFBQ0MsRUFBQUEsSUFBSSxFQUFDO0FBQU4sQ0FBUCxDQUFwQjtBQUNBLElBQU1DLFlBQVksR0FBRyx3QkFBTztBQUFDRCxFQUFBQSxJQUFJLEVBQUM7QUFBTixDQUFQLENBQXJCOztBQUVPLElBQU1FLGdCQUFnQixHQUFHLFNBQW5CQSxnQkFBbUIsQ0FBQ0MsR0FBRCxFQUFLQyxHQUFMLEVBQVNDLElBQVQsRUFBZ0I7QUFDNUNELEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXQyxRQUFYLEdBQW9CLFFBQXBCO0FBQ0FILEVBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXRSxNQUFYLEdBQW9CQSxrQkFBcEI7QUFDQUosRUFBQUEsR0FBRyxDQUFDRSxNQUFKLENBQVdHLFVBQVgsR0FBd0JOLEdBQUcsQ0FBQ08sSUFBSixJQUFVLElBQWxDLENBSDRDLENBR0o7O0FBQ3hDTCxFQUFBQSxJQUFJO0FBQ1AsQ0FMTSxDLENBT1A7Ozs7O0FBQ08sSUFBTU0sVUFBVSxHQUFHLFNBQWJBLFVBQWEsQ0FBQ1IsR0FBRCxFQUFLQyxHQUFMLEVBQVNDLElBQVQsRUFBZ0I7QUFDdEMsTUFBR0YsR0FBRyxDQUFDTyxJQUFQLEVBQVk7QUFDUk4sSUFBQUEsR0FBRyxDQUFDUSxRQUFKLENBQWFKLG1CQUFPSyxJQUFwQjtBQUNILEdBRkQsTUFFSztBQUNEUixJQUFBQSxJQUFJO0FBQ1A7QUFDSixDQU5NLEMsQ0FRUDs7Ozs7QUFDTyxJQUFNUyxXQUFXLEdBQUMsU0FBWkEsV0FBWSxDQUFDWCxHQUFELEVBQUtDLEdBQUwsRUFBU0MsSUFBVCxFQUFnQjtBQUNyQyxNQUFHRixHQUFHLENBQUNPLElBQVAsRUFBWTtBQUNSTCxJQUFBQSxJQUFJO0FBQ1AsR0FGRCxNQUVLO0FBQ0RELElBQUFBLEdBQUcsQ0FBQ1EsUUFBSixDQUFhSixtQkFBT0ssSUFBcEI7QUFDSDtBQUNKLENBTk07OztBQVFBLElBQU1FLFdBQVcsR0FBR2hCLFdBQVcsQ0FBQ2lCLE1BQVosQ0FBbUIsV0FBbkIsQ0FBcEI7O0FBQ0EsSUFBTUMsWUFBWSxHQUFHaEIsWUFBWSxDQUFDZSxNQUFiLENBQW9CLFFBQXBCLENBQXJCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcSnVuZyBodSBLaW1cXERvY3VtZW50c1xcd2V0dWJlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG11bHRlciBmcm9tIFwibXVsdGVyXCI7XHJcbmltcG9ydCByb3V0ZXMgZnJvbSBcIi4vcm91dGVzXCI7XHJcblxyXG5jb25zdCBtdWx0ZXJWaWRlbyA9IG11bHRlcih7ZGVzdDpcInVwbG9hZHMvdmlkZW9zL1wifSk7XHJcbmNvbnN0IG11bHRlckF2YXRhciA9IG11bHRlcih7ZGVzdDpcInVwbG9hZHMvYXZhdGFycy9cIn0pO1xyXG5cclxuZXhwb3J0IGNvbnN0IGxvY2Fsc01pZGRsZXdhcmUgPSAocmVxLHJlcyxuZXh0KT0+e1xyXG4gICAgcmVzLmxvY2Fscy5zaXRlTmFtZT1cIldlVHViZVwiO1xyXG4gICAgcmVzLmxvY2Fscy5yb3V0ZXMgPSByb3V0ZXM7XHJcbiAgICByZXMubG9jYWxzLmxvZ2dlZFVzZXIgPSByZXEudXNlcnx8bnVsbDsgLy/snKDsoIDqsIAg7KG07J6s7ZWY7KeAIOyViuycvOuptCDruYggb2JqZWN066W8IOykjC5cclxuICAgIG5leHQoKTtcclxufTtcclxuXHJcbi8v66Gc6re47J24IOuQmOyWtOyeiOuKlCDsg4Htg5zsl5DshJwgL2xvZ2lu7Y6Y7J207KeA7JeQIOuLpOyLnCDsoJHqt7ztlZjripQg6rKD7J2EIOunieyVhOyjvOuKlCDrr7jrk6Tsm6jslrQuXHJcbmV4cG9ydCBjb25zdCBvbmx5UHVibGljID0gKHJlcSxyZXMsbmV4dCk9PntcclxuICAgIGlmKHJlcS51c2VyKXtcclxuICAgICAgICByZXMucmVkaXJlY3Qocm91dGVzLmhvbWUpO1xyXG4gICAgfWVsc2V7XHJcbiAgICAgICAgbmV4dCgpO1xyXG4gICAgfVxyXG59XHJcblxyXG4vL+uhnOq3uOyduOuQmOyWtCDsnojripQg7IOB7YOc66eMIOydtOyaqeqwgOuKpe2VmOqyjCDtlZjripQg66+465Ok7Juo7Ja0LlxyXG5leHBvcnQgY29uc3Qgb25seVByaXZhdGU9KHJlcSxyZXMsbmV4dCk9PntcclxuICAgIGlmKHJlcS51c2VyKXtcclxuICAgICAgICBuZXh0KCk7XHJcbiAgICB9ZWxzZXtcclxuICAgICAgICByZXMucmVkaXJlY3Qocm91dGVzLmhvbWUpO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgdXBsb2FkVmlkZW8gPSBtdWx0ZXJWaWRlby5zaW5nbGUoXCJ2aWRlb0ZpbGVcIik7XHJcbmV4cG9ydCBjb25zdCB1cGxvYWRBdmF0YXIgPSBtdWx0ZXJBdmF0YXIuc2luZ2xlKFwiYXZhdGFyXCIpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "middlewares.js"
      ],
      "names": [
        "multerVideo",
        "dest",
        "multerAvatar",
        "localsMiddleware",
        "req",
        "res",
        "next",
        "locals",
        "siteName",
        "routes",
        "loggedUser",
        "user",
        "onlyPublic",
        "redirect",
        "home",
        "onlyPrivate",
        "uploadVideo",
        "single",
        "uploadAvatar"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,WAAW,GAAG,wBAAO;AAACC,EAAAA,IAAI,EAAC;AAAN,CAAP,CAApB;AACA,IAAMC,YAAY,GAAG,wBAAO;AAACD,EAAAA,IAAI,EAAC;AAAN,CAAP,CAArB;;AAEO,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAgB;AAC5CD,EAAAA,GAAG,CAACE,MAAJ,CAAWC,QAAX,GAAoB,QAApB;AACAH,EAAAA,GAAG,CAACE,MAAJ,CAAWE,MAAX,GAAoBA,kBAApB;AACAJ,EAAAA,GAAG,CAACE,MAAJ,CAAWG,UAAX,GAAwBN,GAAG,CAACO,IAAJ,IAAU,IAAlC,CAH4C,CAGJ;;AACxCL,EAAAA,IAAI;AACP,CALM,C,CAOP;;;;;AACO,IAAMM,UAAU,GAAG,SAAbA,UAAa,CAACR,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAgB;AACtC,MAAGF,GAAG,CAACO,IAAP,EAAY;AACRN,IAAAA,GAAG,CAACQ,QAAJ,CAAaJ,mBAAOK,IAApB;AACH,GAFD,MAEK;AACDR,IAAAA,IAAI;AACP;AACJ,CANM,C,CAQP;;;;;AACO,IAAMS,WAAW,GAAC,SAAZA,WAAY,CAACX,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAgB;AACrC,MAAGF,GAAG,CAACO,IAAP,EAAY;AACRL,IAAAA,IAAI;AACP,GAFD,MAEK;AACDD,IAAAA,GAAG,CAACQ,QAAJ,CAAaJ,mBAAOK,IAApB;AACH;AACJ,CANM;;;AAQA,IAAME,WAAW,GAAGhB,WAAW,CAACiB,MAAZ,CAAmB,WAAnB,CAApB;;AACA,IAAMC,YAAY,GAAGhB,YAAY,CAACe,MAAb,CAAoB,QAApB,CAArB",
      "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "sourcesContent": [
        "import multer from \"multer\";\r\nimport routes from \"./routes\";\r\n\r\nconst multerVideo = multer({dest:\"uploads/videos/\"});\r\nconst multerAvatar = multer({dest:\"uploads/avatars/\"});\r\n\r\nexport const localsMiddleware = (req,res,next)=>{\r\n    res.locals.siteName=\"WeTube\";\r\n    res.locals.routes = routes;\r\n    res.locals.loggedUser = req.user||null; //유저가 존재하지 않으면 빈 object를 줌.\r\n    next();\r\n};\r\n\r\n//로그인 되어있는 상태에서 /login페이지에 다시 접근하는 것을 막아주는 미들웨어.\r\nexport const onlyPublic = (req,res,next)=>{\r\n    if(req.user){\r\n        res.redirect(routes.home);\r\n    }else{\r\n        next();\r\n    }\r\n}\r\n\r\n//로그인되어 있는 상태만 이용가능하게 하는 미들웨어.\r\nexport const onlyPrivate=(req,res,next)=>{\r\n    if(req.user){\r\n        next();\r\n    }else{\r\n        res.redirect(routes.home);\r\n    }\r\n}\r\n\r\nexport const uploadVideo = multerVideo.single(\"videoFile\");\r\nexport const uploadAvatar = multerAvatar.single(\"avatar\");"
      ]
    },
    "sourceType": "script",
    "mtime": 1578201453437
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"filename\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\\\\db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "filename": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\db.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_dotenv[\"default\"].config();\n\n_mongoose[\"default\"].connect(process.env.MONGO_URL, {\n  useNewUrlParser: true,\n  useFindAndModify: false\n});\n\nvar db = _mongoose[\"default\"].connection;\n\nvar handleOpen = function handleOpen() {\n  return console.log(\"Connected to DB\");\n};\n\nvar handleError = function handleError(error) {\n  return console.log(\"Error on DB Connection:\".concat(error));\n};\n\ndb.once(\"open\", handleOpen); //handleOpen은 커넥션이 성공했을때 수행되는 함수.\n\ndb.on(\"error\", handleError);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbImRvdGVudiIsImNvbmZpZyIsIm1vbmdvb3NlIiwiY29ubmVjdCIsInByb2Nlc3MiLCJlbnYiLCJNT05HT19VUkwiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ1c2VGaW5kQW5kTW9kaWZ5IiwiZGIiLCJjb25uZWN0aW9uIiwiaGFuZGxlT3BlbiIsImNvbnNvbGUiLCJsb2ciLCJoYW5kbGVFcnJvciIsImVycm9yIiwib25jZSIsIm9uIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOzs7O0FBQ0FBLG1CQUFPQyxNQUFQOztBQUVBQyxxQkFBU0MsT0FBVCxDQUNJQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsU0FEaEIsRUFFSTtBQUNJQyxFQUFBQSxlQUFlLEVBQUUsSUFEckI7QUFFSUMsRUFBQUEsZ0JBQWdCLEVBQUU7QUFGdEIsQ0FGSjs7QUFRQSxJQUFNQyxFQUFFLEdBQUdQLHFCQUFTUSxVQUFwQjs7QUFFQSxJQUFNQyxVQUFVLEdBQUcsU0FBYkEsVUFBYTtBQUFBLFNBQU1DLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGlCQUFaLENBQU47QUFBQSxDQUFuQjs7QUFDQSxJQUFNQyxXQUFXLEdBQUcsU0FBZEEsV0FBYyxDQUFDQyxLQUFEO0FBQUEsU0FBV0gsT0FBTyxDQUFDQyxHQUFSLGtDQUFzQ0UsS0FBdEMsRUFBWDtBQUFBLENBQXBCOztBQUVBTixFQUFFLENBQUNPLElBQUgsQ0FBUSxNQUFSLEVBQWdCTCxVQUFoQixFLENBQTZCOztBQUM3QkYsRUFBRSxDQUFDUSxFQUFILENBQU0sT0FBTixFQUFlSCxXQUFmIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcSnVuZyBodSBLaW1cXERvY3VtZW50c1xcd2V0dWJlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gXCJtb25nb29zZVwiO1xyXG5pbXBvcnQgZG90ZW52IGZyb20gXCJkb3RlbnZcIjtcclxuZG90ZW52LmNvbmZpZygpO1xyXG5cclxubW9uZ29vc2UuY29ubmVjdChcclxuICAgIHByb2Nlc3MuZW52Lk1PTkdPX1VSTCxcclxuICAgIHtcclxuICAgICAgICB1c2VOZXdVcmxQYXJzZXI6IHRydWUsXHJcbiAgICAgICAgdXNlRmluZEFuZE1vZGlmeTogZmFsc2VcclxuICAgIH1cclxuKTtcclxuXHJcbmNvbnN0IGRiID0gbW9uZ29vc2UuY29ubmVjdGlvbjtcclxuXHJcbmNvbnN0IGhhbmRsZU9wZW4gPSAoKSA9PiBjb25zb2xlLmxvZyhcIkNvbm5lY3RlZCB0byBEQlwiKTtcclxuY29uc3QgaGFuZGxlRXJyb3IgPSAoZXJyb3IpID0+IGNvbnNvbGUubG9nKGBFcnJvciBvbiBEQiBDb25uZWN0aW9uOiR7ZXJyb3J9YCk7XHJcblxyXG5kYi5vbmNlKFwib3BlblwiLCBoYW5kbGVPcGVuKTsgLy9oYW5kbGVPcGVu7J2AIOy7pOuEpeyFmOydtCDshLHqs7XtlojsnYTrlYwg7IiY7ZaJ65CY64qUIO2VqOyImC5cclxuZGIub24oXCJlcnJvclwiLCBoYW5kbGVFcnJvcik7XHJcblxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "dotenv",
        "config",
        "mongoose",
        "connect",
        "process",
        "env",
        "MONGO_URL",
        "useNewUrlParser",
        "useFindAndModify",
        "db",
        "connection",
        "handleOpen",
        "console",
        "log",
        "handleError",
        "error",
        "once",
        "on"
      ],
      "mappings": ";;AAAA;;AACA;;;;AACAA,mBAAOC,MAAP;;AAEAC,qBAASC,OAAT,CACIC,OAAO,CAACC,GAAR,CAAYC,SADhB,EAEI;AACIC,EAAAA,eAAe,EAAE,IADrB;AAEIC,EAAAA,gBAAgB,EAAE;AAFtB,CAFJ;;AAQA,IAAMC,EAAE,GAAGP,qBAASQ,UAApB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAMC,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAAN;AAAA,CAAnB;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD;AAAA,SAAWH,OAAO,CAACC,GAAR,kCAAsCE,KAAtC,EAAX;AAAA,CAApB;;AAEAN,EAAE,CAACO,IAAH,CAAQ,MAAR,EAAgBL,UAAhB,E,CAA6B;;AAC7BF,EAAE,CAACQ,EAAH,CAAM,OAAN,EAAeH,WAAf",
      "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "sourcesContent": [
        "import mongoose from \"mongoose\";\r\nimport dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\nmongoose.connect(\r\n    process.env.MONGO_URL,\r\n    {\r\n        useNewUrlParser: true,\r\n        useFindAndModify: false\r\n    }\r\n);\r\n\r\nconst db = mongoose.connection;\r\n\r\nconst handleOpen = () => console.log(\"Connected to DB\");\r\nconst handleError = (error) => console.log(`Error on DB Connection:${error}`);\r\n\r\ndb.once(\"open\", handleOpen); //handleOpen은 커넥션이 성공했을때 수행되는 함수.\r\ndb.on(\"error\", handleError);\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578125687425
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"filename\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\\\\models\\\\Video.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "filename": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\models\\Video.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\models\\Video.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\models\\Video.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\models",
        "sourceFileName": "Video.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar VideoSchema = new _mongoose[\"default\"].Schema({\n  fileUrl: {\n    type: String,\n    required: \"File URL is required\"\n  },\n  title: {\n    type: String,\n    required: \"Title is required\"\n  },\n  description: String,\n  views: {\n    type: Number,\n    \"default\": 0\n  },\n  createdAt: {\n    type: Date,\n    \"default\": Date.now\n  },\n  comments: [{\n    type: _mongoose[\"default\"].Schema.Types.ObjectId,\n    ref: \"Comment\"\n  }]\n});\n\nvar model = _mongoose[\"default\"].model(\"Video\", VideoSchema);\n\nvar _default = model;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlZpZGVvLmpzIl0sIm5hbWVzIjpbIlZpZGVvU2NoZW1hIiwibW9uZ29vc2UiLCJTY2hlbWEiLCJmaWxlVXJsIiwidHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsInZpZXdzIiwiTnVtYmVyIiwiY3JlYXRlZEF0IiwiRGF0ZSIsIm5vdyIsImNvbW1lbnRzIiwiVHlwZXMiLCJPYmplY3RJZCIsInJlZiIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFFQSxJQUFNQSxXQUFXLEdBQUcsSUFBSUMscUJBQVNDLE1BQWIsQ0FBb0I7QUFDcENDLEVBQUFBLE9BQU8sRUFBQztBQUNKQyxJQUFBQSxJQUFJLEVBQUVDLE1BREY7QUFFSkMsSUFBQUEsUUFBUSxFQUFFO0FBRk4sR0FENEI7QUFLcENDLEVBQUFBLEtBQUssRUFBQztBQUNGSCxJQUFBQSxJQUFJLEVBQUNDLE1BREg7QUFFRkMsSUFBQUEsUUFBUSxFQUFDO0FBRlAsR0FMOEI7QUFTcENFLEVBQUFBLFdBQVcsRUFBRUgsTUFUdUI7QUFVcENJLEVBQUFBLEtBQUssRUFBQztBQUNGTCxJQUFBQSxJQUFJLEVBQUVNLE1BREo7QUFFRixlQUFTO0FBRlAsR0FWOEI7QUFjcENDLEVBQUFBLFNBQVMsRUFBQztBQUNOUCxJQUFBQSxJQUFJLEVBQUNRLElBREM7QUFFTixlQUFRQSxJQUFJLENBQUNDO0FBRlAsR0FkMEI7QUFrQnBDQyxFQUFBQSxRQUFRLEVBQUMsQ0FBQztBQUNOVixJQUFBQSxJQUFJLEVBQUNILHFCQUFTQyxNQUFULENBQWdCYSxLQUFoQixDQUFzQkMsUUFEckI7QUFFTkMsSUFBQUEsR0FBRyxFQUFDO0FBRkUsR0FBRDtBQWxCMkIsQ0FBcEIsQ0FBcEI7O0FBMEJBLElBQU1DLEtBQUssR0FBR2pCLHFCQUFTaUIsS0FBVCxDQUFlLE9BQWYsRUFBd0JsQixXQUF4QixDQUFkOztlQUNla0IsSyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEp1bmcgaHUgS2ltXFxEb2N1bWVudHNcXHdldHViZVxcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gXCJtb25nb29zZVwiO1xyXG5cclxuY29uc3QgVmlkZW9TY2hlbWEgPSBuZXcgbW9uZ29vc2UuU2NoZW1hKHtcclxuICAgIGZpbGVVcmw6e1xyXG4gICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICByZXF1aXJlZDogXCJGaWxlIFVSTCBpcyByZXF1aXJlZFwiXHJcbiAgICB9LFxyXG4gICAgdGl0bGU6e1xyXG4gICAgICAgIHR5cGU6U3RyaW5nLFxyXG4gICAgICAgIHJlcXVpcmVkOlwiVGl0bGUgaXMgcmVxdWlyZWRcIlxyXG4gICAgfSxcclxuICAgIGRlc2NyaXB0aW9uOiBTdHJpbmcsXHJcbiAgICB2aWV3czp7XHJcbiAgICAgICAgdHlwZTogTnVtYmVyLFxyXG4gICAgICAgIGRlZmF1bHQ6IDBcclxuICAgIH0sXHJcbiAgICBjcmVhdGVkQXQ6e1xyXG4gICAgICAgIHR5cGU6RGF0ZSxcclxuICAgICAgICBkZWZhdWx0OkRhdGUubm93XHJcbiAgICB9LFxyXG4gICAgY29tbWVudHM6W3tcclxuICAgICAgICB0eXBlOm1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuICAgICAgICByZWY6XCJDb21tZW50XCJcclxuICAgIH1cclxuXVxyXG5cclxufSk7XHJcblxyXG5jb25zdCBtb2RlbCA9IG1vbmdvb3NlLm1vZGVsKFwiVmlkZW9cIiwgVmlkZW9TY2hlbWEpO1xyXG5leHBvcnQgZGVmYXVsdCBtb2RlbDtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "Video.js"
      ],
      "names": [
        "VideoSchema",
        "mongoose",
        "Schema",
        "fileUrl",
        "type",
        "String",
        "required",
        "title",
        "description",
        "views",
        "Number",
        "createdAt",
        "Date",
        "now",
        "comments",
        "Types",
        "ObjectId",
        "ref",
        "model"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAMA,WAAW,GAAG,IAAIC,qBAASC,MAAb,CAAoB;AACpCC,EAAAA,OAAO,EAAC;AACJC,IAAAA,IAAI,EAAEC,MADF;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GAD4B;AAKpCC,EAAAA,KAAK,EAAC;AACFH,IAAAA,IAAI,EAACC,MADH;AAEFC,IAAAA,QAAQ,EAAC;AAFP,GAL8B;AASpCE,EAAAA,WAAW,EAAEH,MATuB;AAUpCI,EAAAA,KAAK,EAAC;AACFL,IAAAA,IAAI,EAAEM,MADJ;AAEF,eAAS;AAFP,GAV8B;AAcpCC,EAAAA,SAAS,EAAC;AACNP,IAAAA,IAAI,EAACQ,IADC;AAEN,eAAQA,IAAI,CAACC;AAFP,GAd0B;AAkBpCC,EAAAA,QAAQ,EAAC,CAAC;AACNV,IAAAA,IAAI,EAACH,qBAASC,MAAT,CAAgBa,KAAhB,CAAsBC,QADrB;AAENC,IAAAA,GAAG,EAAC;AAFE,GAAD;AAlB2B,CAApB,CAApB;;AA0BA,IAAMC,KAAK,GAAGjB,qBAASiB,KAAT,CAAe,OAAf,EAAwBlB,WAAxB,CAAd;;eACekB,K",
      "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\models",
      "sourcesContent": [
        "import mongoose from \"mongoose\";\r\n\r\nconst VideoSchema = new mongoose.Schema({\r\n    fileUrl:{\r\n        type: String,\r\n        required: \"File URL is required\"\r\n    },\r\n    title:{\r\n        type:String,\r\n        required:\"Title is required\"\r\n    },\r\n    description: String,\r\n    views:{\r\n        type: Number,\r\n        default: 0\r\n    },\r\n    createdAt:{\r\n        type:Date,\r\n        default:Date.now\r\n    },\r\n    comments:[{\r\n        type:mongoose.Schema.Types.ObjectId,\r\n        ref:\"Comment\"\r\n    }\r\n]\r\n\r\n});\r\n\r\nconst model = mongoose.model(\"Video\", VideoSchema);\r\nexport default model;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578130023234
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"filename\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\\\\models\\\\Comment.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "filename": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\models\\Comment.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\models\\Comment.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\models\\Comment.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\models",
        "sourceFileName": "Comment.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar CommentSchema = new _mongoose[\"default\"].Schema({\n  text: {\n    type: String,\n    required: \"Text is required\"\n  },\n  createdAt: {\n    type: Date,\n    \"default\": Date.now\n  }\n});\n\nvar model = _mongoose[\"default\"].model(\"Comment\", CommentSchema);\n\nvar _default = model;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvbW1lbnQuanMiXSwibmFtZXMiOlsiQ29tbWVudFNjaGVtYSIsIm1vbmdvb3NlIiwiU2NoZW1hIiwidGV4dCIsInR5cGUiLCJTdHJpbmciLCJyZXF1aXJlZCIsImNyZWF0ZWRBdCIsIkRhdGUiLCJub3ciLCJtb2RlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBRUEsSUFBTUEsYUFBYSxHQUFHLElBQUlDLHFCQUFTQyxNQUFiLENBQW9CO0FBQ3RDQyxFQUFBQSxJQUFJLEVBQUM7QUFDREMsSUFBQUEsSUFBSSxFQUFDQyxNQURKO0FBRURDLElBQUFBLFFBQVEsRUFBRTtBQUZULEdBRGlDO0FBS3RDQyxFQUFBQSxTQUFTLEVBQUM7QUFDTkgsSUFBQUEsSUFBSSxFQUFDSSxJQURDO0FBRU4sZUFBUUEsSUFBSSxDQUFDQztBQUZQO0FBTDRCLENBQXBCLENBQXRCOztBQVdBLElBQU1DLEtBQUssR0FBR1QscUJBQVNTLEtBQVQsQ0FBZSxTQUFmLEVBQTBCVixhQUExQixDQUFkOztlQUNlVSxLIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcSnVuZyBodSBLaW1cXERvY3VtZW50c1xcd2V0dWJlXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSBcIm1vbmdvb3NlXCI7XHJcblxyXG5jb25zdCBDb21tZW50U2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XHJcbiAgICB0ZXh0OntcclxuICAgICAgICB0eXBlOlN0cmluZyxcclxuICAgICAgICByZXF1aXJlZDogXCJUZXh0IGlzIHJlcXVpcmVkXCJcclxuICAgIH0sXHJcbiAgICBjcmVhdGVkQXQ6e1xyXG4gICAgICAgIHR5cGU6RGF0ZSxcclxuICAgICAgICBkZWZhdWx0OkRhdGUubm93XHJcbiAgICB9XHJcbn0pO1xyXG5cclxuY29uc3QgbW9kZWwgPSBtb25nb29zZS5tb2RlbChcIkNvbW1lbnRcIiwgQ29tbWVudFNjaGVtYSk7XHJcbmV4cG9ydCBkZWZhdWx0IG1vZGVsOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Comment.js"
      ],
      "names": [
        "CommentSchema",
        "mongoose",
        "Schema",
        "text",
        "type",
        "String",
        "required",
        "createdAt",
        "Date",
        "now",
        "model"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAMA,aAAa,GAAG,IAAIC,qBAASC,MAAb,CAAoB;AACtCC,EAAAA,IAAI,EAAC;AACDC,IAAAA,IAAI,EAACC,MADJ;AAEDC,IAAAA,QAAQ,EAAE;AAFT,GADiC;AAKtCC,EAAAA,SAAS,EAAC;AACNH,IAAAA,IAAI,EAACI,IADC;AAEN,eAAQA,IAAI,CAACC;AAFP;AAL4B,CAApB,CAAtB;;AAWA,IAAMC,KAAK,GAAGT,qBAASS,KAAT,CAAe,SAAf,EAA0BV,aAA1B,CAAd;;eACeU,K",
      "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\models",
      "sourcesContent": [
        "import mongoose from \"mongoose\";\r\n\r\nconst CommentSchema = new mongoose.Schema({\r\n    text:{\r\n        type:String,\r\n        required: \"Text is required\"\r\n    },\r\n    createdAt:{\r\n        type:Date,\r\n        default:Date.now\r\n    }\r\n});\r\n\r\nconst model = mongoose.model(\"Comment\", CommentSchema);\r\nexport default model;"
      ]
    },
    "sourceType": "script",
    "mtime": 1578129251988
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"filename\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\\\\models\\\\User.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "filename": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\models\\User.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\models\\User.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\models\\User.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\models",
        "sourceFileName": "User.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _passportLocalMongoose = _interopRequireDefault(require(\"passport-local-mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar UserSchema = new _mongoose[\"default\"].Schema({\n  name: String,\n  email: String,\n  avatarUrl: String,\n  facebookId: Number,\n  githubId: Number\n});\nUserSchema.plugin(_passportLocalMongoose[\"default\"], {\n  usernameField: \"email\"\n});\n\nvar model = _mongoose[\"default\"].model(\"User\", UserSchema);\n\nvar _default = model;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXIuanMiXSwibmFtZXMiOlsiVXNlclNjaGVtYSIsIm1vbmdvb3NlIiwiU2NoZW1hIiwibmFtZSIsIlN0cmluZyIsImVtYWlsIiwiYXZhdGFyVXJsIiwiZmFjZWJvb2tJZCIsIk51bWJlciIsImdpdGh1YklkIiwicGx1Z2luIiwicGFzc3BvcnRMb2NhbE1vbmdvb3NlIiwidXNlcm5hbWVGaWVsZCIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxVQUFVLEdBQUcsSUFBSUMscUJBQVNDLE1BQWIsQ0FBb0I7QUFDbkNDLEVBQUFBLElBQUksRUFBRUMsTUFENkI7QUFFbkNDLEVBQUFBLEtBQUssRUFBRUQsTUFGNEI7QUFHbkNFLEVBQUFBLFNBQVMsRUFBRUYsTUFId0I7QUFJbkNHLEVBQUFBLFVBQVUsRUFBRUMsTUFKdUI7QUFLbkNDLEVBQUFBLFFBQVEsRUFBRUQ7QUFMeUIsQ0FBcEIsQ0FBbkI7QUFRQVIsVUFBVSxDQUFDVSxNQUFYLENBQWtCQyxpQ0FBbEIsRUFBeUM7QUFBQ0MsRUFBQUEsYUFBYSxFQUFFO0FBQWhCLENBQXpDOztBQUVBLElBQU1DLEtBQUssR0FBR1oscUJBQVNZLEtBQVQsQ0FBZSxNQUFmLEVBQXNCYixVQUF0QixDQUFkOztlQUllYSxLIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcSnVuZyBodSBLaW1cXERvY3VtZW50c1xcd2V0dWJlXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSBcIm1vbmdvb3NlXCI7XHJcbmltcG9ydCBwYXNzcG9ydExvY2FsTW9uZ29vc2UgZnJvbSBcInBhc3Nwb3J0LWxvY2FsLW1vbmdvb3NlXCI7XHJcblxyXG5jb25zdCBVc2VyU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XHJcbiAgICBuYW1lOiBTdHJpbmcsXHJcbiAgICBlbWFpbDogU3RyaW5nLFxyXG4gICAgYXZhdGFyVXJsOiBTdHJpbmcsXHJcbiAgICBmYWNlYm9va0lkOiBOdW1iZXIsXHJcbiAgICBnaXRodWJJZDogTnVtYmVyXHJcbn0pO1xyXG5cclxuVXNlclNjaGVtYS5wbHVnaW4ocGFzc3BvcnRMb2NhbE1vbmdvb3NlLCB7dXNlcm5hbWVGaWVsZDogXCJlbWFpbFwifSk7XHJcblxyXG5jb25zdCBtb2RlbCA9IG1vbmdvb3NlLm1vZGVsKFwiVXNlclwiLFVzZXJTY2hlbWEpO1xyXG5cclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCBtb2RlbDsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "User.js"
      ],
      "names": [
        "UserSchema",
        "mongoose",
        "Schema",
        "name",
        "String",
        "email",
        "avatarUrl",
        "facebookId",
        "Number",
        "githubId",
        "plugin",
        "passportLocalMongoose",
        "usernameField",
        "model"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,UAAU,GAAG,IAAIC,qBAASC,MAAb,CAAoB;AACnCC,EAAAA,IAAI,EAAEC,MAD6B;AAEnCC,EAAAA,KAAK,EAAED,MAF4B;AAGnCE,EAAAA,SAAS,EAAEF,MAHwB;AAInCG,EAAAA,UAAU,EAAEC,MAJuB;AAKnCC,EAAAA,QAAQ,EAAED;AALyB,CAApB,CAAnB;AAQAR,UAAU,CAACU,MAAX,CAAkBC,iCAAlB,EAAyC;AAACC,EAAAA,aAAa,EAAE;AAAhB,CAAzC;;AAEA,IAAMC,KAAK,GAAGZ,qBAASY,KAAT,CAAe,MAAf,EAAsBb,UAAtB,CAAd;;eAIea,K",
      "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\models",
      "sourcesContent": [
        "import mongoose from \"mongoose\";\r\nimport passportLocalMongoose from \"passport-local-mongoose\";\r\n\r\nconst UserSchema = new mongoose.Schema({\r\n    name: String,\r\n    email: String,\r\n    avatarUrl: String,\r\n    facebookId: Number,\r\n    githubId: Number\r\n});\r\n\r\nUserSchema.plugin(passportLocalMongoose, {usernameField: \"email\"});\r\n\r\nconst model = mongoose.model(\"User\",UserSchema);\r\n\r\n\r\n\r\nexport default model;"
      ]
    },
    "sourceType": "script",
    "mtime": 1578205640626
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"filename\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\\\\passport.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Jung hu Kim\\\\Documents\\\\wetube\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "filename": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\passport.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\passport.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Jung hu Kim\\Documents\\wetube\\passport.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
        "sourceFileName": "passport.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _passport = _interopRequireDefault(require(\"passport\"));\n\nvar _passportGithub = _interopRequireDefault(require(\"passport-github\"));\n\nvar _passportFacebook = _interopRequireDefault(require(\"passport-facebook\"));\n\nvar _User = _interopRequireDefault(require(\"./models/User\"));\n\nvar _userController = require(\"./controllers/userController\");\n\nvar _routes = _interopRequireDefault(require(\"./routes\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//strategy는 로그인하는 방식을 말한다.\n_passport[\"default\"].use(_User[\"default\"].createStrategy());\n\n_passport[\"default\"].use(new _passportGithub[\"default\"]({\n  clientID: process.env.GH_ID,\n  clientSecret: process.env.GH_SECRET,\n  callbackURL: \"http://localhost:4000\".concat(_routes[\"default\"].githubCallback)\n}, _userController.githubLoginCallback));\n\n_passport[\"default\"].use(new _passportFacebook[\"default\"]({\n  clientID: process.env.FB_ID,\n  clientSecret: process.env.FB_SECRET,\n  callbackURL: \"https://ee9a5319.ngrok.io\".concat(_routes[\"default\"].facebookCallback),\n  profileFields: [\"id\", \"displayName\", \"photos\", \"email\"],\n  scope: [\"public_profile\", \"email\"]\n}, _userController.facebookLoginCallback));\n\n_passport[\"default\"].serializeUser(function (user, done) {\n  return done(null, user);\n});\n\n_passport[\"default\"].deserializeUser(function (user, done) {\n  return done(null, user);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhc3Nwb3J0LmpzIl0sIm5hbWVzIjpbInBhc3Nwb3J0IiwidXNlIiwiVXNlciIsImNyZWF0ZVN0cmF0ZWd5IiwiR2l0aHViU3RyYXRlZ3kiLCJjbGllbnRJRCIsInByb2Nlc3MiLCJlbnYiLCJHSF9JRCIsImNsaWVudFNlY3JldCIsIkdIX1NFQ1JFVCIsImNhbGxiYWNrVVJMIiwicm91dGVzIiwiZ2l0aHViQ2FsbGJhY2siLCJnaXRodWJMb2dpbkNhbGxiYWNrIiwiRmFjZWJvb2tTdHJhdGVneSIsIkZCX0lEIiwiRkJfU0VDUkVUIiwiZmFjZWJvb2tDYWxsYmFjayIsInByb2ZpbGVGaWVsZHMiLCJzY29wZSIsImZhY2Vib29rTG9naW5DYWxsYmFjayIsInNlcmlhbGl6ZVVzZXIiLCJ1c2VyIiwiZG9uZSIsImRlc2VyaWFsaXplVXNlciJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBO0FBQ0FBLHFCQUFTQyxHQUFULENBQWFDLGlCQUFLQyxjQUFMLEVBQWI7O0FBRUFILHFCQUFTQyxHQUFULENBQ0ksSUFBSUcsMEJBQUosQ0FDSTtBQUNJQyxFQUFBQSxRQUFRLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxLQUQxQjtBQUVJQyxFQUFBQSxZQUFZLEVBQUVILE9BQU8sQ0FBQ0MsR0FBUixDQUFZRyxTQUY5QjtBQUdJQyxFQUFBQSxXQUFXLGlDQUF5QkMsbUJBQU9DLGNBQWhDO0FBSGYsQ0FESixFQU1JQyxtQ0FOSixDQURKOztBQVdBZCxxQkFBU0MsR0FBVCxDQUNJLElBQUljLDRCQUFKLENBQXFCO0FBQ2pCVixFQUFBQSxRQUFRLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZUyxLQURMO0FBRWpCUCxFQUFBQSxZQUFZLEVBQUVILE9BQU8sQ0FBQ0MsR0FBUixDQUFZVSxTQUZUO0FBR2pCTixFQUFBQSxXQUFXLHFDQUE2QkMsbUJBQU9NLGdCQUFwQyxDQUhNO0FBSWpCQyxFQUFBQSxhQUFhLEVBQUMsQ0FBQyxJQUFELEVBQU0sYUFBTixFQUFvQixRQUFwQixFQUE2QixPQUE3QixDQUpHO0FBS2pCQyxFQUFBQSxLQUFLLEVBQUMsQ0FBQyxnQkFBRCxFQUFrQixPQUFsQjtBQUxXLENBQXJCLEVBTUVDLHFDQU5GLENBREo7O0FBVUFyQixxQkFBU3NCLGFBQVQsQ0FBdUIsVUFBQ0MsSUFBRCxFQUFNQyxJQUFOO0FBQUEsU0FBYUEsSUFBSSxDQUFDLElBQUQsRUFBTUQsSUFBTixDQUFqQjtBQUFBLENBQXZCOztBQUNBdkIscUJBQVN5QixlQUFULENBQXlCLFVBQUNGLElBQUQsRUFBTUMsSUFBTjtBQUFBLFNBQWFBLElBQUksQ0FBQyxJQUFELEVBQU1ELElBQU4sQ0FBakI7QUFBQSxDQUF6QiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEp1bmcgaHUgS2ltXFxEb2N1bWVudHNcXHdldHViZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwYXNzcG9ydCBmcm9tIFwicGFzc3BvcnRcIjtcclxuaW1wb3J0IEdpdGh1YlN0cmF0ZWd5IGZyb20gXCJwYXNzcG9ydC1naXRodWJcIjtcclxuaW1wb3J0IEZhY2Vib29rU3RyYXRlZ3kgZnJvbSBcInBhc3Nwb3J0LWZhY2Vib29rXCI7XHJcbmltcG9ydCBVc2VyIGZyb20gXCIuL21vZGVscy9Vc2VyXCI7XHJcbmltcG9ydCB7Z2l0aHViTG9naW5DYWxsYmFjayxmYWNlYm9va0xvZ2luQ2FsbGJhY2t9IGZyb20gXCIuL2NvbnRyb2xsZXJzL3VzZXJDb250cm9sbGVyXCI7XHJcbmltcG9ydCByb3V0ZXMgZnJvbSBcIi4vcm91dGVzXCI7XHJcblxyXG4vL3N0cmF0ZWd564qUIOuhnOq3uOyduO2VmOuKlCDrsKnsi53snYQg66eQ7ZWc64ukLlxyXG5wYXNzcG9ydC51c2UoVXNlci5jcmVhdGVTdHJhdGVneSgpKTtcclxuXHJcbnBhc3Nwb3J0LnVzZShcclxuICAgIG5ldyBHaXRodWJTdHJhdGVneShcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGNsaWVudElEOiBwcm9jZXNzLmVudi5HSF9JRCxcclxuICAgICAgICAgICAgY2xpZW50U2VjcmV0OiBwcm9jZXNzLmVudi5HSF9TRUNSRVQsXHJcbiAgICAgICAgICAgIGNhbGxiYWNrVVJMOmBodHRwOi8vbG9jYWxob3N0OjQwMDAke3JvdXRlcy5naXRodWJDYWxsYmFja31gXHJcbiAgICAgICAgfSxcclxuICAgICAgICBnaXRodWJMb2dpbkNhbGxiYWNrXHJcbiAgICApXHJcbik7XHJcblxyXG5wYXNzcG9ydC51c2UoXHJcbiAgICBuZXcgRmFjZWJvb2tTdHJhdGVneSh7XHJcbiAgICAgICAgY2xpZW50SUQ6IHByb2Nlc3MuZW52LkZCX0lELFxyXG4gICAgICAgIGNsaWVudFNlY3JldDogcHJvY2Vzcy5lbnYuRkJfU0VDUkVULFxyXG4gICAgICAgIGNhbGxiYWNrVVJMOmBodHRwczovL2VlOWE1MzE5Lm5ncm9rLmlvJHtyb3V0ZXMuZmFjZWJvb2tDYWxsYmFja31gLFxyXG4gICAgICAgIHByb2ZpbGVGaWVsZHM6W1wiaWRcIixcImRpc3BsYXlOYW1lXCIsXCJwaG90b3NcIixcImVtYWlsXCJdLFxyXG4gICAgICAgIHNjb3BlOltcInB1YmxpY19wcm9maWxlXCIsXCJlbWFpbFwiXSAgICAgXHJcbiAgICB9LGZhY2Vib29rTG9naW5DYWxsYmFjaylcclxuKTtcclxuXHJcbnBhc3Nwb3J0LnNlcmlhbGl6ZVVzZXIoKHVzZXIsZG9uZSk9PmRvbmUobnVsbCx1c2VyKSk7XHJcbnBhc3Nwb3J0LmRlc2VyaWFsaXplVXNlcigodXNlcixkb25lKT0+ZG9uZShudWxsLHVzZXIpKTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "passport.js"
      ],
      "names": [
        "passport",
        "use",
        "User",
        "createStrategy",
        "GithubStrategy",
        "clientID",
        "process",
        "env",
        "GH_ID",
        "clientSecret",
        "GH_SECRET",
        "callbackURL",
        "routes",
        "githubCallback",
        "githubLoginCallback",
        "FacebookStrategy",
        "FB_ID",
        "FB_SECRET",
        "facebookCallback",
        "profileFields",
        "scope",
        "facebookLoginCallback",
        "serializeUser",
        "user",
        "done",
        "deserializeUser"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;AACAA,qBAASC,GAAT,CAAaC,iBAAKC,cAAL,EAAb;;AAEAH,qBAASC,GAAT,CACI,IAAIG,0BAAJ,CACI;AACIC,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,KAD1B;AAEIC,EAAAA,YAAY,EAAEH,OAAO,CAACC,GAAR,CAAYG,SAF9B;AAGIC,EAAAA,WAAW,iCAAyBC,mBAAOC,cAAhC;AAHf,CADJ,EAMIC,mCANJ,CADJ;;AAWAd,qBAASC,GAAT,CACI,IAAIc,4BAAJ,CAAqB;AACjBV,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYS,KADL;AAEjBP,EAAAA,YAAY,EAAEH,OAAO,CAACC,GAAR,CAAYU,SAFT;AAGjBN,EAAAA,WAAW,qCAA6BC,mBAAOM,gBAApC,CAHM;AAIjBC,EAAAA,aAAa,EAAC,CAAC,IAAD,EAAM,aAAN,EAAoB,QAApB,EAA6B,OAA7B,CAJG;AAKjBC,EAAAA,KAAK,EAAC,CAAC,gBAAD,EAAkB,OAAlB;AALW,CAArB,EAMEC,qCANF,CADJ;;AAUArB,qBAASsB,aAAT,CAAuB,UAACC,IAAD,EAAMC,IAAN;AAAA,SAAaA,IAAI,CAAC,IAAD,EAAMD,IAAN,CAAjB;AAAA,CAAvB;;AACAvB,qBAASyB,eAAT,CAAyB,UAACF,IAAD,EAAMC,IAAN;AAAA,SAAaA,IAAI,CAAC,IAAD,EAAMD,IAAN,CAAjB;AAAA,CAAzB",
      "sourceRoot": "C:\\Users\\Jung hu Kim\\Documents\\wetube",
      "sourcesContent": [
        "import passport from \"passport\";\r\nimport GithubStrategy from \"passport-github\";\r\nimport FacebookStrategy from \"passport-facebook\";\r\nimport User from \"./models/User\";\r\nimport {githubLoginCallback,facebookLoginCallback} from \"./controllers/userController\";\r\nimport routes from \"./routes\";\r\n\r\n//strategy는 로그인하는 방식을 말한다.\r\npassport.use(User.createStrategy());\r\n\r\npassport.use(\r\n    new GithubStrategy(\r\n        {\r\n            clientID: process.env.GH_ID,\r\n            clientSecret: process.env.GH_SECRET,\r\n            callbackURL:`http://localhost:4000${routes.githubCallback}`\r\n        },\r\n        githubLoginCallback\r\n    )\r\n);\r\n\r\npassport.use(\r\n    new FacebookStrategy({\r\n        clientID: process.env.FB_ID,\r\n        clientSecret: process.env.FB_SECRET,\r\n        callbackURL:`https://ee9a5319.ngrok.io${routes.facebookCallback}`,\r\n        profileFields:[\"id\",\"displayName\",\"photos\",\"email\"],\r\n        scope:[\"public_profile\",\"email\"]     \r\n    },facebookLoginCallback)\r\n);\r\n\r\npassport.serializeUser((user,done)=>done(null,user));\r\npassport.deserializeUser((user,done)=>done(null,user));"
      ]
    },
    "sourceType": "script",
    "mtime": 1578202099538
  }
}